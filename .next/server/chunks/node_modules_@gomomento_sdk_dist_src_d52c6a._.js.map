{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk/src/errors/cache-service-error-mapper.ts"],"sourcesContent":["import {Status} from '@grpc/grpc-js/build/src/constants';\nimport {Metadata, ServiceError} from '@grpc/grpc-js';\nimport {\n  InternalServerError,\n  InvalidArgumentError,\n  PermissionError,\n  BadRequestError,\n  CancelledError,\n  TimeoutError,\n  AuthenticationError,\n  LimitExceededError,\n  SdkError,\n  UnknownServiceError,\n  ServerUnavailableError,\n  UnknownError,\n  FailedPreconditionError,\n} from '../../src';\nimport {\n  CacheNotFoundError,\n  StoreItemNotFoundError,\n  StoreNotFoundError,\n} from '@gomomento/sdk-core/dist/src/errors';\nimport {\n  ICacheServiceErrorMapper,\n  ResolveOrRejectErrorOptions,\n} from '@gomomento/sdk-core/dist/src/errors/ICacheServiceErrorMapper';\nimport {\n  CacheAlreadyExistsError,\n  StoreAlreadyExistsError,\n} from '@gomomento/sdk-core';\n\nexport class CacheServiceErrorMapper\n  implements ICacheServiceErrorMapper<ServiceError>\n{\n  private readonly throwOnErrors: boolean;\n\n  constructor(throwOnError: boolean) {\n    this.throwOnErrors = throwOnError;\n  }\n\n  returnOrThrowError<TErrorResponse>(\n    err: Error,\n    errorResponseFactoryFn: (err: SdkError) => TErrorResponse\n  ): TErrorResponse {\n    const sdkError = normalizeSdkError(err);\n    if (this.throwOnErrors) {\n      throw sdkError;\n    } else {\n      return errorResponseFactoryFn(sdkError);\n    }\n  }\n\n  resolveOrRejectError(opts: ResolveOrRejectErrorOptions<ServiceError>): void {\n    const error = this.convertError(opts.err);\n\n    if (this.throwOnErrors) {\n      opts.rejectFn(error);\n    } else {\n      opts.resolveFn(opts.errorResponseFactoryFn(error));\n    }\n  }\n\n  convertError(err: ServiceError | null): SdkError {\n    const errParams: [\n      string,\n      number | undefined,\n      Metadata | undefined,\n      string | undefined\n    ] = [\n      err?.message || 'Unable to process request',\n      err?.code,\n      err?.metadata,\n      err?.stack,\n    ];\n    switch (err?.code) {\n      case Status.PERMISSION_DENIED:\n        return new PermissionError(...errParams);\n      case Status.DATA_LOSS:\n      case Status.INTERNAL:\n      case Status.ABORTED:\n        return new InternalServerError(...errParams);\n      case Status.UNKNOWN:\n        return new UnknownServiceError(...errParams);\n      case Status.UNAVAILABLE:\n        return new ServerUnavailableError(...errParams);\n      case Status.NOT_FOUND: {\n        let errCause = errParams[2]?.get('err')?.[0];\n        // TODO: Remove this once the error message is standardized on the server side\n        const errorMessage = errParams[0]?.toString();\n        const isStoreNotFound =\n          errorMessage?.includes('Store with name:') &&\n          errorMessage?.includes(\"doesn't exist\");\n        // If errCause is not already set to 'store_not_found', check for store_not_found error\n        if (!errCause && isStoreNotFound) {\n          errCause = 'store_not_found';\n        }\n        switch (errCause) {\n          case 'item_not_found':\n            return new StoreItemNotFoundError(...errParams);\n          case 'store_not_found':\n            return new StoreNotFoundError(...errParams);\n          default:\n            return new CacheNotFoundError(...errParams);\n        }\n      }\n      case Status.OUT_OF_RANGE:\n      case Status.UNIMPLEMENTED:\n        return new BadRequestError(...errParams);\n      case Status.FAILED_PRECONDITION:\n        return new FailedPreconditionError(...errParams);\n      case Status.INVALID_ARGUMENT:\n        return new InvalidArgumentError(...errParams);\n      case Status.CANCELLED:\n        return new CancelledError(...errParams);\n      case Status.DEADLINE_EXCEEDED:\n        return new TimeoutError(...errParams);\n      case Status.UNAUTHENTICATED:\n        return new AuthenticationError(...errParams);\n      case Status.RESOURCE_EXHAUSTED:\n        return new LimitExceededError(...errParams);\n      case Status.ALREADY_EXISTS: {\n        let errCause = errParams[2]?.get('err')?.[0];\n        // TODO: Remove this once the error message is standardized on the server side\n        const errorMessage = errParams[0]?.toString();\n        const isStoreAlreadyExists =\n          errorMessage?.includes('Store with name:') &&\n          errorMessage?.includes('already exists');\n        // If errCause is not already set to 'store_already_exists', check for store_already_exists error\n        if (!errCause && isStoreAlreadyExists) {\n          errCause = 'store_already_exists';\n        }\n        switch (errCause) {\n          case 'store_already_exists':\n            return new StoreAlreadyExistsError(...errParams);\n          default:\n            return new CacheAlreadyExistsError(...errParams);\n        }\n      }\n      default:\n        return new UnknownError(...errParams);\n    }\n  }\n}\n\nfunction normalizeSdkError(error: Error): SdkError {\n  if (error instanceof SdkError) {\n    return error;\n  }\n  return new UnknownError(error.message);\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk/src/errors/compression-error.ts"],"sourcesContent":["import {SdkError} from '@gomomento/sdk-core';\n\nexport class CompressionError extends SdkError {\n  override _messageWrapper = 'Compression Error';\n  constructor(action: string, option: string) {\n    super(\n      `Compressor is not set, but \\`${action}\\` was called with the \\`${option}\\` option; please install @gomomento/sdk-nodejs-compression and call \\`Configuration.withCompressionStrategy\\` to enable compression.`\n    );\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAA;AAEA,MAAa,yBAAyB,WAAA,QAAQ;IAE5C,YAAY,MAAc,EAAE,MAAc,CAAA;QACxC,KAAK,CACH,CAAA,6BAAA,EAAgC,OAAM,yBAAA,EAA4B,OAAM,qIAAA,CAAuI;QAH1M,IAAA,CAAA,eAAe,GAAG;IAK3B;;AANF,QAAA,gBAAA,GAAA"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk/src/cache-client.ts"],"sourcesContent":["import {CacheControlClient} from './internal/cache-control-client';\nimport {CacheDataClient} from './internal/cache-data-client';\nimport {CacheFlush, MomentoLogger, Configuration, Configurations} from '.';\nimport {CacheClientProps, EagerCacheClientProps} from './cache-client-props';\nimport {\n  range,\n  Semaphore,\n  validateMaxConcurrentRequests,\n  validateTimeout,\n  validateTtlSeconds,\n} from '@gomomento/sdk-core/dist/src/internal/utils';\nimport {ICacheClient} from '@gomomento/sdk-core/dist/src/clients/ICacheClient';\nimport {AbstractCacheClient} from '@gomomento/sdk-core/dist/src/internal/clients/cache/AbstractCacheClient';\nimport {CacheClientAllProps} from './internal/cache-client-all-props';\nimport {getDefaultCredentialProvider} from '@gomomento/sdk-core';\n\nconst EAGER_CONNECTION_DEFAULT_TIMEOUT_SECONDS = 30;\n\n/**\n * Momento Cache Client.\n *\n * Features include:\n * - Get, set, and delete data\n * - Create, delete, and list caches\n * - Create, revoke, and list signing keys\n */\nexport class CacheClient extends AbstractCacheClient implements ICacheClient {\n  private readonly logger: MomentoLogger;\n  private readonly notYetAbstractedControlClient: CacheControlClient;\n  private readonly _configuration: Configuration;\n  private dataRequestConcurrencySemaphore: Semaphore | undefined = undefined;\n\n  /**\n   * Creates an instance of CacheClient.\n   * @param {CacheClientProps} props configuration and credentials for creating a CacheClient.\n   */\n  constructor(props: CacheClientProps) {\n    validateTtlSeconds(props.defaultTtlSeconds);\n    const configuration: Configuration =\n      props.configuration ?? getDefaultCacheClientConfiguration();\n    const credentialProvider =\n      props.credentialProvider ?? getDefaultCredentialProvider();\n\n    const allProps: CacheClientAllProps = {\n      ...props,\n      configuration: configuration,\n      credentialProvider: credentialProvider,\n    };\n\n    let semaphore: Semaphore | undefined = undefined;\n    const numConcurrentRequests = configuration\n      .getTransportStrategy()\n      .getGrpcConfig()\n      .getMaxConcurrentRequests();\n    if (numConcurrentRequests !== null && numConcurrentRequests !== undefined) {\n      validateMaxConcurrentRequests(numConcurrentRequests);\n      semaphore = new Semaphore(numConcurrentRequests);\n    }\n\n    const controlClient = new CacheControlClient({\n      configuration: configuration,\n      credentialProvider: credentialProvider,\n    });\n\n    const numClients = configuration\n      .getTransportStrategy()\n      .getGrpcConfig()\n      .getNumClients();\n    const dataClients = range(numClients).map(\n      (_, id) => new CacheDataClient(allProps, String(id), semaphore)\n    );\n    super(controlClient, dataClients);\n    this._configuration = configuration;\n    this.notYetAbstractedControlClient = controlClient;\n    this.dataRequestConcurrencySemaphore = semaphore;\n\n    this.logger = configuration.getLoggerFactory().getLogger(this);\n    this.logger.debug('Creating Momento CacheClient');\n\n    // Initialize middlewares that have init methods. These currently start\n    // background tasks for logging that will execute until they are explicitly\n    // stopped. This is usually handled by the client's close method, but if\n    // there is ever a chance that this client constructor may fail after these\n    // methods are called, it is up to you to catch the exception and call close\n    // on each of these manually.\n    this._configuration.getMiddlewares().forEach(m => {\n      if (m.init) {\n        m.init();\n      }\n    });\n  }\n\n  public close() {\n    if (this.dataRequestConcurrencySemaphore !== undefined) {\n      this.dataRequestConcurrencySemaphore.purge();\n    }\n    this.controlClient.close();\n    this.dataClients.map(dc => dc.close());\n    this._configuration.getMiddlewares().forEach(m => {\n      if (m.close) {\n        m.close();\n      }\n    });\n  }\n\n  /**\n   * Creates a new instance of CacheClient. If eagerConnectTimeout is present in the given props, the client will\n   * eagerly create its connection to Momento. It will wait until the connection is established, or until the timout\n   * runs out. It the timeout runs out, the client will be valid to use, but it may still be connecting in the background.\n   * @param {EagerCacheClientProps} props configuration and credentials for creating a CacheClient.\n   */\n  static async create(props: EagerCacheClientProps): Promise<CacheClient> {\n    const client = new CacheClient(props);\n    try {\n      const timeout =\n        props.eagerConnectTimeout !== undefined\n          ? props.eagerConnectTimeout\n          : EAGER_CONNECTION_DEFAULT_TIMEOUT_SECONDS;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      validateTimeout(timeout);\n      // client need to explicitly set the value as 0 to disable eager connection.\n      if (props.eagerConnectTimeout !== 0) {\n        await Promise.all(\n          client.dataClients.map(dc => (dc as CacheDataClient).connect(timeout))\n        );\n      }\n      return client;\n    } catch (e) {\n      client.close();\n      throw e;\n    }\n  }\n\n  /**\n   * Returns the configuration used to create the CacheClient.\n   *\n   * @readonly\n   * @type {Configuration} - The configuration used to create the CacheClient.\n   * @memberof CacheClient\n   */\n  public get configuration(): Configuration {\n    return this._configuration;\n  }\n\n  /**\n   * Flushes / clears all the items of the given cache\n   *\n   * @param {string} cacheName - The cache to be flushed.\n   * @returns {Promise<CacheFlush.Response>} -\n   * {@link CacheFlush.Success} on success.\n   * {@link CacheFlush.Error} on failure.\n   */\n  public override async flushCache(\n    cacheName: string\n  ): Promise<CacheFlush.Response> {\n    return await this.notYetAbstractedControlClient.flushCache(cacheName);\n  }\n}\n\nfunction getDefaultCacheClientConfiguration(): Configuration {\n  const config = Configurations.Laptop.latest();\n  const logger = config.getLoggerFactory().getLogger('CacheClient');\n  logger.info(\n    'No configuration provided to CacheClient. Using default \"Laptop\" configuration, suitable for development. For production use, consider specifying an explicit configuration.'\n  );\n  return config;\n}\n\n/**\n * @deprecated use {CacheClient} instead\n */\nexport class SimpleCacheClient extends CacheClient {}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk/src/topic-client.ts"],"sourcesContent":["import {AbstractTopicClient} from '@gomomento/sdk-core/dist/src/internal/clients/pubsub/AbstractTopicClient';\nimport {TopicConfiguration, TopicConfigurations} from '.';\nimport {PubsubClient} from './internal/pubsub-client';\nimport {TopicClientProps} from './topic-client-props';\nimport {WebhookClient} from './internal/webhook-client';\nimport {TopicClientAllProps} from './internal/topic-client-all-props';\nimport {range} from '@gomomento/sdk-core/dist/src/internal/utils';\nimport {getDefaultCredentialProvider} from '@gomomento/sdk-core';\n\n/**\n * Momento Topic Client.\n *\n * Publish and subscribe to topics.\n */\nexport class TopicClient extends AbstractTopicClient {\n  /**\n   * Creates an instance of TopicClient.\n   */\n  constructor(props?: TopicClientProps) {\n    const allProps: TopicClientAllProps = {\n      credentialProvider:\n        props?.credentialProvider ?? getDefaultCredentialProvider(),\n      configuration:\n        props?.configuration ?? getDefaultTopicClientConfiguration(),\n    };\n\n    const numClients = allProps.configuration\n      .getTransportStrategy()\n      .getGrpcConfig()\n      .getNumClients();\n\n    super(\n      allProps.configuration.getLoggerFactory().getLogger(TopicClient.name),\n      range(numClients).map(_ => new PubsubClient(allProps)),\n      new WebhookClient(allProps)\n    );\n\n    this.logger.debug('Instantiated Momento TopicClient');\n  }\n}\n\nfunction getDefaultTopicClientConfiguration(): TopicConfiguration {\n  const config = TopicConfigurations.Default.latest();\n  const logger = config.getLoggerFactory().getLogger('TopicClient');\n  logger.info(\n    'No configuration provided to TopicClient. Using latest \"Default\" configuration, suitable for development. For production use, consider specifying an explicit configuration.'\n  );\n  return config;\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAA;AACA,MAAA;AACA,MAAA;AAEA,MAAA;AAEA,MAAA;AACA,MAAA;AAEA;;;;IAKA,MAAa,oBAAoB,sBAAA,mBAAmB;IAClD;;QAGA,YAAY,KAAwB,CAAA;;QAClC,MAAM,WAAgC;YACpC,oBACE,CAAA,KAAA,UAAK,QAAL,UAAK,KAAA,IAAA,KAAA,IAAL,MAAO,kBAAkB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAA,GAAA,WAAA,4BAA4B;YAC3D,eACE,CAAA,KAAA,UAAK,QAAL,UAAK,KAAA,IAAA,KAAA,IAAL,MAAO,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI;;QAG5B,MAAM,aAAa,SAAS,aAAa,CACtC,oBAAoB,GACpB,aAAa,GACb,aAAa;QAEhB,KAAK,CACH,SAAS,aAAa,CAAC,gBAAgB,GAAG,SAAS,CAAC,YAAY,IAAI,GACpE,CAAA,GAAA,QAAA,KAAK,EAAC,YAAY,GAAG,CAAC,CAAA,IAAK,IAAI,gBAAA,YAAY,CAAC,YAC5C,IAAI,iBAAA,aAAa,CAAC;QAGpB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IACpB;;AAxBF,QAAA,WAAA,GAAA;AA2BA,SAAS;IACP,MAAM,SAAS,GAAA,mBAAmB,CAAC,OAAO,CAAC,MAAM;IACjD,MAAM,SAAS,OAAO,gBAAgB,GAAG,SAAS,CAAC;IACnD,OAAO,IAAI,CACT;IAEF,OAAO;AACT"}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk/src/preview-storage-client.ts"],"sourcesContent":["import {\n  AbstractStorageClient,\n  IStorageControlClient,\n  IStorageDataClient,\n} from '@gomomento/sdk-core/dist/src/internal/clients';\nimport {IStorageClient} from '@gomomento/sdk-core/dist/src/clients/IStorageClient';\nimport {StorageClientProps} from './storage-client-props';\nimport {StorageClientAllProps} from './internal/storage-client-all-props';\nimport {StorageControlClient} from './internal/storage-control-client';\nimport {StorageDataClient} from './internal/storage-data-client';\nimport {StorageConfiguration} from './config/storage-configuration';\nimport {StorageConfigurations} from './index';\nimport {getDefaultCredentialProvider} from '@gomomento/sdk-core';\n\n/**\n * A client for interacting with the Momento Storage service.\n * Warning: This client is in preview and may change in future releases.\n */\nexport class PreviewStorageClient\n  extends AbstractStorageClient\n  implements IStorageClient\n{\n  constructor(props?: StorageClientProps) {\n    const allProps: StorageClientAllProps = {\n      configuration:\n        props?.configuration ?? getDefaultStorageClientConfiguration(),\n      credentialProvider:\n        props?.credentialProvider ?? getDefaultCredentialProvider(),\n    };\n\n    const controlClient: IStorageControlClient = createControlClient(allProps);\n    const dataClient: IStorageDataClient = createDataClient(allProps);\n    super([dataClient], controlClient);\n  }\n\n  close(): void {\n    this.dataClients.forEach(client => client.close());\n    this.controlClient.close();\n  }\n}\n\nfunction createControlClient(\n  props: StorageClientAllProps\n): IStorageControlClient {\n  return new StorageControlClient(props);\n}\n\nfunction createDataClient(props: StorageClientAllProps): IStorageDataClient {\n  return new StorageDataClient(props);\n}\n\nfunction getDefaultStorageClientConfiguration(): StorageConfiguration {\n  const config = StorageConfigurations.Laptop.latest();\n  const logger = config.getLoggerFactory().getLogger('StorageClient');\n  logger.info(\n    'No configuration provided to StorageClient. Using default \"Laptop\" configuration, suitable for development. For production use, consider specifying an explicit configuration.'\n  );\n  return config;\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAA;AAQA,MAAA;AACA,MAAA;AAEA,MAAA;AACA,MAAA;AAEA;;;IAIA,MAAa,6BACH,UAAA,qBAAqB;IAG7B,YAAY,KAA0B,CAAA;;QACpC,MAAM,WAAkC;YACtC,eACE,CAAA,KAAA,UAAK,QAAL,UAAK,KAAA,IAAA,KAAA,IAAL,MAAO,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI;YAC1B,oBACE,CAAA,KAAA,UAAK,QAAL,UAAK,KAAA,IAAA,KAAA,IAAL,MAAO,kBAAkB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAA,GAAA,WAAA,4BAA4B;;QAG7D,MAAM,gBAAuC,oBAAoB;QACjE,MAAM,aAAiC,iBAAiB;QACxD,KAAK,CAAC;YAAC;SAAW,EAAE;IACtB;IAEA,QAAK;QACH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA,SAAU,OAAO,KAAK;QAC/C,IAAI,CAAC,aAAa,CAAC,KAAK;IAC1B;;AApBF,QAAA,oBAAA,GAAA;AAuBA,SAAS,oBACP,KAA4B;IAE5B,OAAO,IAAI,yBAAA,oBAAoB,CAAC;AAClC;AAEA,SAAS,iBAAiB,KAA4B;IACpD,OAAO,IAAI,sBAAA,iBAAiB,CAAC;AAC/B;AAEA,SAAS;IACP,MAAM,SAAS,QAAA,qBAAqB,CAAC,MAAM,CAAC,MAAM;IAClD,MAAM,SAAS,OAAO,gBAAgB,GAAG,SAAS,CAAC;IACnD,OAAO,IAAI,CACT;IAEF,OAAO;AACT"}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk/src/batchutils/batch-props.ts"],"sourcesContent":["import {CacheGet, CacheSet, CacheDelete} from '@gomomento/sdk-core';\n\nexport const defaultMaxConcurrentRequests = 5;\nexport const defaultTtlSeconds = 60;\n\nexport interface BatchFunctionOptions {\n  maxConcurrentRequests?: number;\n}\n\nexport type BatchGetOptions = BatchFunctionOptions;\n\nexport type BatchGetResponse = Record<string, CacheGet.Response>;\n\nexport type BatchSetOptions = BatchFunctionOptions;\n\nexport interface BatchSetItem {\n  key: string | Uint8Array;\n  value: string | Uint8Array;\n  ttl?: number;\n}\n\nexport type BatchSetResponse = Record<string, CacheSet.Response>;\n\nexport type BatchDeleteOptions = BatchFunctionOptions;\n\nexport type BatchDeleteResponse = Record<string, CacheDelete.Response>;\n"],"names":[],"mappings":";;;;;AAEa,QAAA,4BAA4B,GAAG;AAC/B,QAAA,iBAAiB,GAAG"}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk/src/batchutils/batch-functions.ts"],"sourcesContent":["import {\n  CacheDelete,\n  CacheGet,\n  CacheSet,\n  ICacheClient,\n} from '@gomomento/sdk-core';\nimport {\n  BatchDeleteOptions,\n  BatchDeleteResponse,\n  BatchGetOptions,\n  BatchGetResponse,\n  BatchSetOptions,\n  BatchSetResponse,\n  BatchSetItem,\n  defaultMaxConcurrentRequests,\n  defaultTtlSeconds,\n} from './batch-props';\nimport {range} from '@gomomento/sdk-core/dist/src/internal/utils';\n\nexport {\n  BatchDeleteOptions,\n  BatchDeleteResponse,\n  BatchGetOptions,\n  BatchGetResponse,\n  BatchSetOptions,\n  BatchSetResponse,\n  BatchSetItem,\n  defaultMaxConcurrentRequests,\n  defaultTtlSeconds,\n};\n\n// Note: all promises in batch request workers have a client-side timeout deadline\n// because grpc request timeouts are baked into the cache client. The timeout can be\n// overridden using the `withClientTimeoutMillis` function.\n\nexport async function batchGet(\n  cacheClient: ICacheClient,\n  cacheName: string,\n  keys: Array<string | Uint8Array>,\n  options?: BatchGetOptions\n): Promise<BatchGetResponse> {\n  const maxConcurrentGets = options?.maxConcurrentRequests\n    ? options.maxConcurrentRequests\n    : Math.min(defaultMaxConcurrentRequests, keys.length);\n\n  const batchGetResults = range(maxConcurrentGets).map((workerId: number) =>\n    getWorker(workerId, cacheClient, cacheName, keys)\n  );\n  const awaitAll = await Promise.all(batchGetResults);\n\n  const batchGetResponse: BatchGetResponse = {};\n  awaitAll.forEach(responses => {\n    Object.assign(batchGetResponse, responses);\n  });\n  return batchGetResponse;\n}\n\nasync function getWorker(\n  workerId: number,\n  cacheClient: ICacheClient,\n  cacheName: string,\n  keys: Array<string | Uint8Array>\n): Promise<Record<string, CacheGet.Response>> {\n  const responses: Record<string, CacheGet.Response> = {};\n  while (keys.length) {\n    const cacheKey = keys.pop();\n    if (cacheKey !== undefined) {\n      responses[String(cacheKey)] = await cacheClient.get(cacheName, cacheKey);\n    }\n  }\n  return Promise.resolve(responses);\n}\n\nexport async function batchSet(\n  cacheClient: ICacheClient,\n  cacheName: string,\n  items: Array<BatchSetItem>,\n  options?: BatchSetOptions\n): Promise<BatchSetResponse> {\n  const maxConcurrentSets = options?.maxConcurrentRequests\n    ? options.maxConcurrentRequests\n    : Math.min(defaultMaxConcurrentRequests, items.length);\n\n  const batchSetResults = range(maxConcurrentSets).map((workerId: number) =>\n    setWorker(workerId, cacheClient, cacheName, items)\n  );\n  const awaitAll = await Promise.all(batchSetResults);\n\n  const batchSetResponse: BatchSetResponse = {};\n  awaitAll.forEach(responses => {\n    Object.assign(batchSetResponse, responses);\n  });\n  return batchSetResponse;\n}\n\nasync function setWorker(\n  workerId: number,\n  cacheClient: ICacheClient,\n  cacheName: string,\n  items: Array<BatchSetItem>\n): Promise<Record<string, CacheSet.Response>> {\n  const responses: Record<string, CacheSet.Response> = {};\n  while (items.length) {\n    const item = items.pop();\n    if (item !== undefined) {\n      responses[String(item.key)] = await cacheClient.set(\n        cacheName,\n        item.key,\n        item.value,\n        {ttl: item.ttl ? item.ttl : defaultTtlSeconds}\n      );\n    }\n  }\n  return Promise.resolve(responses);\n}\n\nexport async function batchDelete(\n  cacheClient: ICacheClient,\n  cacheName: string,\n  keys: Array<string | Uint8Array>,\n  options?: BatchDeleteOptions\n): Promise<BatchDeleteResponse> {\n  const maxConcurrentDeletes = options?.maxConcurrentRequests\n    ? options.maxConcurrentRequests\n    : Math.min(defaultMaxConcurrentRequests, keys.length);\n\n  const batchDeleteResults = range(maxConcurrentDeletes).map(\n    (workerId: number) => deleteWorker(workerId, cacheClient, cacheName, keys)\n  );\n  const awaitAll = await Promise.all(batchDeleteResults);\n\n  const batchDeleteResponse: BatchDeleteResponse = {};\n  awaitAll.forEach(responses => {\n    Object.assign(batchDeleteResponse, responses);\n  });\n  return batchDeleteResponse;\n}\n\nasync function deleteWorker(\n  workerId: number,\n  cacheClient: ICacheClient,\n  cacheName: string,\n  keys: Array<string | Uint8Array>\n): Promise<Record<string, CacheDelete.Response>> {\n  const responses: Record<string, CacheDelete.Response> = {};\n  while (keys.length) {\n    const cacheKey = keys.pop();\n    if (cacheKey !== undefined) {\n      responses[String(cacheKey)] = await cacheClient.delete(\n        cacheName,\n        cacheKey\n      );\n    }\n  }\n  return Promise.resolve(responses);\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk/src/webhookutils/index.ts"],"sourcesContent":["import * as crypto from 'crypto';\n\ntype Props = {\n  /**\n   * The signing secret associated with the webhook\n   */\n  signingSecret: string;\n  /**\n   * The 'momento-signature' header passed with the request\n   */\n  signature: string;\n  /**\n   * The stringified body of the request\n   */\n  body: string;\n};\n\nexport enum RequestValidation {\n  VALID = 'valid',\n  INVALID = 'invalid',\n}\n\n/**\n * This function is a helper function that can be used to validate that webhook\n * requests are coming from Momento. It is best practice to validate incoming\n * request to a public webhook endpoint\n * @param props {Props}\n */\nexport const validateWebhookRequest = (props: Props): RequestValidation => {\n  const hash = crypto.createHmac('SHA3-256', props.signingSecret);\n  const hashed = hash.update(props.body).digest('hex');\n  console.log('expected', props.signature);\n  console.log('actual', hashed);\n  if (hashed === props.signature) {\n    return RequestValidation.VALID;\n  }\n  return RequestValidation.INVALID;\n};\n"],"names":[],"mappings":";;;;;AAAA,MAAA;AAiBA,IAAY;AAAZ,CAAA,SAAY,iBAAiB;IAC3B,iBAAA,CAAA,QAAA,GAAA;IACA,iBAAA,CAAA,UAAA,GAAA;AACF,CAAC,EAHW,oBAAA,QAAA,iBAAiB,IAAA,CAAjB,QAAA,iBAAiB,GAAA,CAAA,CAAA;AAK7B;;;;;IAMO,MAAM,yBAAyB,CAAC;IACrC,MAAM,OAAO,OAAO,UAAU,CAAC,YAAY,MAAM,aAAa;IAC9D,MAAM,SAAS,KAAK,MAAM,CAAC,MAAM,IAAI,EAAE,MAAM,CAAC;IAC9C,QAAQ,GAAG,CAAC,YAAY,MAAM,SAAS;IACvC,QAAQ,GAAG,CAAC,UAAU;IACtB,IAAI,WAAW,MAAM,SAAS,EAAE;QAC9B,OAAO,kBAAkB,KAAK;;IAEhC,OAAO,kBAAkB,OAAO;AAClC;AATa,QAAA,sBAAsB,GAAA"}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk/src/auth-client.ts"],"sourcesContent":["import {InternalAuthClient} from './internal/internal-auth-client';\nimport {IAuthClient} from '@gomomento/sdk-core/dist/src/clients/IAuthClient';\nimport {AbstractAuthClient} from '@gomomento/sdk-core/dist/src/internal/clients/auth/AbstractAuthClient';\nimport {AuthClientProps} from './auth-client-props';\nimport {AuthClientAllProps} from './internal/auth-client-all-props';\nimport {getDefaultCredentialProvider} from '@gomomento/sdk-core';\nimport {AuthClientConfiguration, AuthClientConfigurations} from '.';\n\nexport class AuthClient extends AbstractAuthClient implements IAuthClient {\n  constructor(props?: AuthClientProps) {\n    const allProps: AuthClientAllProps = {\n      ...props,\n      configuration:\n        props?.configuration ?? getDefaultAuthClientConfiguration(),\n      credentialProvider:\n        props?.credentialProvider ?? getDefaultCredentialProvider(),\n    };\n    const authClient = new InternalAuthClient(allProps);\n\n    super({createAuthClient: () => authClient});\n  }\n}\n\nfunction getDefaultAuthClientConfiguration(): AuthClientConfiguration {\n  const config = AuthClientConfigurations.Default.latest();\n  const logger = config.getLoggerFactory().getLogger('AuthClient');\n  logger.info(\n    'No configuration provided to AuthClient. Using latest \"Default\" configuration, suitable for development. For production use, consider specifying an explicit configuration.'\n  );\n  return config;\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAA;AAEA,MAAA;AAGA,MAAA;AACA,MAAA;AAEA,MAAa,mBAAmB,qBAAA,kBAAkB;IAChD,YAAY,KAAuB,CAAA;;QACjC,MAAM,WAA+B;YACnC,GAAG,KAAK;YACR,eACE,CAAA,KAAA,UAAK,QAAL,UAAK,KAAA,IAAA,KAAA,IAAL,MAAO,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI;YAC1B,oBACE,CAAA,KAAA,UAAK,QAAL,UAAK,KAAA,IAAA,KAAA,IAAL,MAAO,kBAAkB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAA,GAAA,WAAA,4BAA4B;;QAE7D,MAAM,aAAa,IAAI,uBAAA,kBAAkB,CAAC;QAE1C,KAAK,CAAC;YAAC,kBAAkB,IAAM;QAAU;IAC3C;;AAZF,QAAA,UAAA,GAAA;AAeA,SAAS;IACP,MAAM,SAAS,GAAA,wBAAwB,CAAC,OAAO,CAAC,MAAM;IACtD,MAAM,SAAS,OAAO,gBAAgB,GAAG,SAAS,CAAC;IACnD,OAAO,IAAI,CACT;IAEF,OAAO;AACT"}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk/src/preview-leaderboard-client.ts"],"sourcesContent":["import {\n  MomentoLogger,\n  ILeaderboardClient,\n  ILeaderboard,\n  getDefaultCredentialProvider,\n} from '@gomomento/sdk-core';\nimport {LeaderboardDataClient} from './internal/leaderboard-data-client';\nimport {LeaderboardClientProps} from './leaderboard-client-props';\nimport {Leaderboard} from './internal/leaderboard';\nimport {ILeaderboardDataClient} from '@gomomento/sdk-core/dist/src/internal/clients/leaderboard/ILeaderboardDataClient';\nimport {LeaderboardConfiguration, LeaderboardConfigurations} from './index';\nimport {LeaderboardClientAllProps} from './internal/leaderboard-client-all-props';\n\n/**\n * PREVIEW Momento Leaderboard Client\n * WARNING: the API for this client is not yet stable and may change without notice.\n * Please contact Momento if you would like to try this preview.\n *\n * Leaderboard methods return a response object unique to each request.\n * The response object is resolved to a type-safe object of one of several\n * sub-types. See the documentation for each response type for details.\n */\nexport class PreviewLeaderboardClient implements ILeaderboardClient {\n  protected readonly logger: MomentoLogger;\n  private readonly dataClient: ILeaderboardDataClient;\n  private readonly configuration: LeaderboardConfiguration;\n\n  constructor(props?: LeaderboardClientProps) {\n    const configuration =\n      props?.configuration ?? getDefaultLeaderboardConfiguration();\n    const allProps: LeaderboardClientAllProps = {\n      configuration: configuration,\n      credentialProvider:\n        props?.credentialProvider ?? getDefaultCredentialProvider(),\n    };\n    this.configuration = configuration;\n\n    this.logger = configuration.getLoggerFactory().getLogger(this);\n    this.logger.debug('Creating Momento LeaderboardClient');\n    this.dataClient = new LeaderboardDataClient(allProps, '0'); // only creating one leaderboard client\n\n    // Initialize middlewares that have init methods. These currently start\n    // background tasks for logging that will execute until they are explicitly\n    // stopped. This is usually handled by the client's close method, but if\n    // there is ever a chance that this client constructor may fail after these\n    // methods are called, it is up to you to catch the exception and call close\n    // on each of these manually.\n    this.configuration.getMiddlewares().forEach(m => {\n      if (m.init) {\n        m.init();\n      }\n    });\n  }\n\n  public close() {\n    this.dataClient.close();\n    this.configuration.getMiddlewares().forEach(m => {\n      if (m.close) {\n        m.close();\n      }\n    });\n  }\n\n  /**\n   * Creates an instance of LeaderboardClient with floating point scores up until 53 bits of precision.\n   */\n  public leaderboard(cacheName: string, leaderboardName: string): ILeaderboard {\n    return new Leaderboard(this.dataClient, cacheName, leaderboardName);\n  }\n}\n\nfunction getDefaultLeaderboardConfiguration(): LeaderboardConfiguration {\n  const config = LeaderboardConfigurations.Laptop.latest();\n  const logger = config.getLoggerFactory().getLogger('LeaderboardClient');\n  logger.info(\n    'No configuration provided to LeaderboardClient. Using default \"Laptop\" configuration, suitable for development. For production use, consider specifying an explicit configuration.'\n  );\n  return config;\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAA;AAMA,MAAA;AAEA,MAAA;AAEA,MAAA;AAGA;;;;;;;;IASA,MAAa;IAKX,YAAY,KAA8B,CAAA;;QACxC,MAAM,gBACJ,CAAA,KAAA,UAAK,QAAL,UAAK,KAAA,IAAA,KAAA,IAAL,MAAO,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI;QAC1B,MAAM,WAAsC;YAC1C,eAAe;YACf,oBACE,CAAA,KAAA,UAAK,QAAL,UAAK,KAAA,IAAA,KAAA,IAAL,MAAO,kBAAkB,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAA,GAAA,WAAA,4BAA4B;;QAE7D,IAAI,CAAC,aAAa,GAAG;QAErB,IAAI,CAAC,MAAM,GAAG,cAAc,gBAAgB,GAAG,SAAS,CAAC,IAAI;QAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,IAAI,0BAAA,qBAAqB,CAAC,UAAU,MAAM,uCAAuC;QAEnG,uEAAuE;QACvE,2EAA2E;QAC3E,wEAAwE;QACxE,2EAA2E;QAC3E,4EAA4E;QAC5E,6BAA6B;QAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,OAAO,CAAC,CAAA;YAC1C,IAAI,EAAE,IAAI,EAAE;gBACV,EAAE,IAAI;;QAEV;IACF;IAEO,QAAK;QACV,IAAI,CAAC,UAAU,CAAC,KAAK;QACrB,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,OAAO,CAAC,CAAA;YAC1C,IAAI,EAAE,KAAK,EAAE;gBACX,EAAE,KAAK;;QAEX;IACF;IAEA;;QAGO,YAAY,SAAiB,EAAE,eAAuB,EAAA;QAC3D,OAAO,IAAI,cAAA,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW;IACrD;;AA9CF,QAAA,wBAAA,GAAA;AAiDA,SAAS;IACP,MAAM,SAAS,QAAA,yBAAyB,CAAC,MAAM,CAAC,MAAM;IACtD,MAAM,SAAS,OAAO,gBAAgB,GAAG,SAAS,CAAC;IACnD,OAAO,IAAI,CACT;IAEF,OAAO;AACT"}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 590, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk/src/index.ts"],"sourcesContent":["import {CacheClient, SimpleCacheClient} from './cache-client';\nimport {TopicClient} from './topic-client';\nimport {PreviewStorageClient} from './preview-storage-client';\nimport * as Configurations from './config/configurations';\nimport * as AuthClientConfigurations from './config/auth-client-configurations';\nimport * as TopicConfigurations from './config/topic-configurations';\nimport * as StorageConfigurations from './config/storage-configurations';\nimport * as LeaderboardConfigurations from './config/leaderboard-configurations';\nimport * as BatchUtils from './batchutils/batch-functions';\nimport * as WebhookUtils from './webhookutils';\n\nimport {TopicClientProps} from './topic-client-props';\n\n// Cache Client Response Types\nimport * as CacheGet from '@gomomento/sdk-core/dist/src/messages/responses/cache-get';\nimport * as CacheListConcatenateBack from '@gomomento/sdk-core/dist/src/messages/responses/cache-list-concatenate-back';\nimport * as CacheListConcatenateFront from '@gomomento/sdk-core/dist/src/messages/responses/cache-list-concatenate-front';\nimport * as CacheListFetch from '@gomomento/sdk-core/dist/src/messages/responses/cache-list-fetch';\nimport * as CacheListLength from '@gomomento/sdk-core/dist/src/messages/responses/cache-list-length';\nimport * as CacheListPopBack from '@gomomento/sdk-core/dist/src/messages/responses/cache-list-pop-back';\nimport * as CacheListPopFront from '@gomomento/sdk-core/dist/src/messages/responses/cache-list-pop-front';\nimport * as CacheListPushBack from '@gomomento/sdk-core/dist/src/messages/responses/cache-list-push-back';\nimport * as CacheListPushFront from '@gomomento/sdk-core/dist/src/messages/responses/cache-list-push-front';\nimport * as CacheListRemoveValue from '@gomomento/sdk-core/dist/src/messages/responses/cache-list-remove-value';\nimport * as CacheListRetain from '@gomomento/sdk-core/dist/src/messages/responses/cache-list-retain';\nimport * as CacheSet from '@gomomento/sdk-core/dist/src/messages/responses/cache-set';\nimport * as CacheDelete from '@gomomento/sdk-core/dist/src/messages/responses/cache-delete';\nimport * as CacheFlush from '@gomomento/sdk-core/dist/src/messages/responses/cache-flush';\nimport * as CreateCache from '@gomomento/sdk-core/dist/src/messages/responses/create-cache';\nimport * as DeleteCache from '@gomomento/sdk-core/dist/src/messages/responses/delete-cache';\nimport * as ListCaches from '@gomomento/sdk-core/dist/src/messages/responses/list-caches';\nimport * as CacheSetFetch from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-fetch';\nimport * as CacheSetContainsElement from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-contains-element';\nimport * as CacheSetContainsElements from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-contains-elements';\nimport * as CacheDictionaryFetch from '@gomomento/sdk-core/dist/src/messages/responses/cache-dictionary-fetch';\nimport * as CacheDictionarySetField from '@gomomento/sdk-core/dist/src/messages/responses/cache-dictionary-set-field';\nimport * as CacheDictionarySetFields from '@gomomento/sdk-core/dist/src/messages/responses/cache-dictionary-set-fields';\nimport * as CacheDictionaryGetField from '@gomomento/sdk-core/dist/src/messages/responses/cache-dictionary-get-field';\nimport * as CacheDictionaryGetFields from '@gomomento/sdk-core/dist/src/messages/responses/cache-dictionary-get-fields';\nimport * as CacheDictionaryRemoveField from '@gomomento/sdk-core/dist/src/messages/responses/cache-dictionary-remove-field';\nimport * as CacheDictionaryRemoveFields from '@gomomento/sdk-core/dist/src/messages/responses/cache-dictionary-remove-fields';\nimport * as CacheDictionaryIncrement from '@gomomento/sdk-core/dist/src/messages/responses/cache-dictionary-increment';\nimport * as CacheDictionaryLength from '@gomomento/sdk-core/dist/src/messages/responses/cache-dictionary-length';\nimport * as CacheSetAddElements from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-add-elements';\nimport * as CacheSetAddElement from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-add-element';\nimport * as CacheSetRemoveElements from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-remove-elements';\nimport * as CacheSetRemoveElement from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-remove-element';\nimport * as CacheSetSample from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-sample';\nimport * as CacheIncrement from '@gomomento/sdk-core/dist/src/messages/responses/cache-increment';\nimport * as CacheSetIfNotExists from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-if-not-exists';\nimport * as CacheSetIfAbsent from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-if-absent';\nimport * as CacheSetIfPresent from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-if-present';\nimport * as CacheSetIfEqual from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-if-equal';\nimport * as CacheSetIfNotEqual from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-if-not-equal';\nimport * as CacheSetIfAbsentOrEqual from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-if-absent-or-equal';\nimport * as CacheSetIfPresentAndNotEqual from '@gomomento/sdk-core/dist/src/messages/responses/cache-set-if-present-and-not-equal';\nimport * as CacheSortedSetPutElement from '@gomomento/sdk-core/dist/src/messages/responses/cache-sorted-set-put-element';\nimport * as CacheSortedSetPutElements from '@gomomento/sdk-core/dist/src/messages/responses/cache-sorted-set-put-elements';\nimport * as CacheSortedSetFetch from '@gomomento/sdk-core/dist/src/messages/responses/cache-sorted-set-fetch';\nimport * as CacheSortedSetGetRank from '@gomomento/sdk-core/dist/src/messages/responses/cache-sorted-set-get-rank';\nimport * as CacheSortedSetGetScore from '@gomomento/sdk-core/dist/src/messages/responses/cache-sorted-set-get-score';\nimport * as CacheSortedSetGetScores from '@gomomento/sdk-core/dist/src/messages/responses/cache-sorted-set-get-scores';\nimport * as CacheSortedSetIncrementScore from '@gomomento/sdk-core/dist/src/messages/responses/cache-sorted-set-increment-score';\nimport * as CacheSortedSetRemoveElement from '@gomomento/sdk-core/dist/src/messages/responses/cache-sorted-set-remove-element';\nimport * as CacheSortedSetRemoveElements from '@gomomento/sdk-core/dist/src/messages/responses/cache-sorted-set-remove-elements';\nimport * as CacheSortedSetLength from '@gomomento/sdk-core/dist/src/messages/responses/cache-sorted-set-length';\nimport * as CacheSortedSetLengthByScore from '@gomomento/sdk-core/dist/src/messages/responses/cache-sorted-set-length-by-score';\nimport * as CacheItemGetType from '@gomomento/sdk-core/dist/src/messages/responses/cache-item-get-type';\nimport * as CacheItemGetTtl from '@gomomento/sdk-core/dist/src/messages/responses/cache-item-get-ttl';\nimport * as CacheKeyExists from '@gomomento/sdk-core/dist/src/messages/responses/cache-key-exists';\nimport * as CacheKeysExist from '@gomomento/sdk-core/dist/src/messages/responses/cache-keys-exist';\nimport * as CacheUpdateTtl from '@gomomento/sdk-core/dist/src/messages/responses/cache-ttl-update';\nimport * as CacheIncreaseTtl from '@gomomento/sdk-core/dist/src/messages/responses/cache-ttl-increase';\nimport * as CacheDecreaseTtl from '@gomomento/sdk-core/dist/src/messages/responses/cache-ttl-decrease';\nimport * as CacheGetBatch from '@gomomento/sdk-core/dist/src/messages/responses/cache-batch-get';\nimport * as CacheSetBatch from '@gomomento/sdk-core/dist/src/messages/responses/cache-batch-set';\n\n// TopicClient Response Types\nimport * as TopicPublish from '@gomomento/sdk-core/dist/src/messages/responses/topic-publish';\nimport * as TopicSubscribe from '@gomomento/sdk-core/dist/src/messages/responses/topic-subscribe';\nimport {TopicItem} from '@gomomento/sdk-core/dist/src/messages/responses/topic-item';\nimport {TopicDiscontinuity} from '@gomomento/sdk-core/dist/src/messages/responses/topic-discontinuity';\nimport {TopicHeartbeat} from '@gomomento/sdk-core/dist/src/messages/responses/topic-heartbeat';\n\n// Storage Response Types\nimport {\n  StorageDelete,\n  StoragePut,\n  StorageGet,\n  CreateStore,\n  DeleteStore,\n  ListStores,\n} from '@gomomento/sdk-core/dist/src/messages/responses/storage';\nimport {StoreInfo} from '@gomomento/sdk-core/dist/src/messages/store-info';\n\n// AuthClient Response Types\nimport {AuthClient} from './auth-client';\nimport * as GenerateApiKey from '@gomomento/sdk-core/dist/src/messages/responses/generate-api-key';\nimport * as RefreshApiKey from '@gomomento/sdk-core/dist/src/messages/responses/refresh-api-key';\n\nimport * as GenerateDisposableToken from '@gomomento/sdk-core/dist/src/messages/responses/generate-disposable-token';\n\n// LeaderboardClient Response Types\nexport {leaderboard} from '@gomomento/sdk-core';\nexport * from '@gomomento/sdk-core/dist/src/messages/responses/leaderboard';\n\n// Enums representing the different types available for each response\nexport * from '@gomomento/sdk-core/dist/src/messages/responses/enums';\n\nimport {\n  ICacheClient,\n  IMomentoCache,\n  SubscribeCallOptions,\n  CacheInfo,\n  CollectionTtl,\n  ItemType,\n  SortedSetOrder,\n  CredentialProvider,\n  StringMomentoTokenProvider,\n  EnvMomentoTokenProvider,\n  MomentoErrorCode,\n  SdkError,\n  CacheAlreadyExistsError,\n  StoreAlreadyExistsError,\n  AuthenticationError,\n  CancelledError,\n  FailedPreconditionError,\n  LimitExceededError,\n  InternalServerError,\n  InvalidArgumentError,\n  UnknownServiceError,\n  ServerUnavailableError,\n  TimeoutError,\n  BadRequestError,\n  PermissionError,\n  CacheNotFoundError,\n  StoreNotFoundError,\n  StoreItemNotFoundError,\n  UnknownError,\n  MomentoLogger,\n  MomentoLoggerFactory,\n  NoopMomentoLogger,\n  NoopMomentoLoggerFactory,\n  ExpiresAt,\n  ExpiresIn,\n  CacheRole,\n  CachePermission,\n  TopicRole,\n  TopicPermission,\n  Permission,\n  Permissions,\n  AllDataReadWrite,\n  PermissionScope,\n  PermissionScopes,\n  /**\n   * @deprecated please use 'PermissionScope' instead\n   */\n  TokenScope,\n  DisposableTokenScope,\n  DisposableTokenScopes,\n  CacheName,\n  TopicName,\n  CacheSelector,\n  TopicSelector,\n  AllCaches,\n  AllTopics,\n  LeaderboardOrder,\n  ILeaderboard,\n  PostUrlWebhookDestination,\n  Webhook,\n  WebhookDestination,\n  WebhookId,\n  DeleteWebhook,\n  ListWebhooks,\n  PutWebhook,\n  GetWebhookSecret,\n  RotateWebhookSecret,\n  WebhookDestinationType,\n  ReadConcern,\n  CompressionLevel,\n  IStorageClient,\n} from '@gomomento/sdk-core';\n\nimport {Configuration, CacheConfiguration} from './config/configuration';\nimport {\n  AuthConfiguration,\n  AuthClientConfiguration,\n} from './config/auth-client-configuration';\nimport {\n  TopicConfiguration,\n  TopicClientConfiguration,\n} from './config/topic-configuration';\nimport {\n  LeaderboardConfiguration,\n  LeaderboardClientConfiguration,\n} from './config/leaderboard-configuration';\nimport {PreviewLeaderboardClient} from './preview-leaderboard-client';\nimport {\n  StorageConfiguration,\n  StorageClientConfiguration,\n} from './config/storage-configuration';\n\nexport {\n  DefaultMomentoLoggerFactory,\n  DefaultMomentoLogger,\n  DefaultMomentoLoggerLevel,\n} from './config/logging/default-momento-logger';\n\nexport {\n  EligibilityStrategy,\n  EligibleForRetryProps,\n} from './config/retry/eligibility-strategy';\n\nexport {\n  RetryStrategy,\n  DeterminewhenToRetryRequestProps,\n} from './config/retry/retry-strategy';\n\nexport {\n  FixedCountRetryStrategy,\n  FixedCountRetryStrategyProps,\n} from './config/retry/fixed-count-retry-strategy';\n\nexport {\n  FixedTimeoutRetryStrategy,\n  FixedTimeoutRetryStrategyProps,\n} from './config/retry/fixed-timeout-retry-strategy';\n\nexport {DefaultEligibilityStrategy} from './config/retry/default-eligibility-strategy';\n\nexport {\n  StaticGrpcConfiguration,\n  StaticTransportStrategy,\n  TransportStrategy,\n  TransportStrategyProps,\n} from './config/transport/cache/transport-strategy';\n\nexport {\n  GrpcConfiguration,\n  GrpcConfigurationProps,\n} from './config/transport/cache/grpc-configuration';\n\nexport {\n  StaticTopicGrpcConfiguration,\n  StaticTopicTransportStrategy,\n  TopicTransportStrategy,\n  TopicTransportStrategyProps,\n} from './config/transport/topics/transport-strategy';\n\nexport {\n  TopicGrpcConfiguration,\n  TopicGrpcConfigurationProps,\n} from './config/transport/topics/grpc-configuration';\n\nexport {\n  StaticStorageGrpcConfiguration,\n  StaticStorageTransportStrategy,\n  StorageTransportStrategy,\n  StorageTransportStrategyProps,\n} from './config/transport/storage/transport-strategy';\n\nexport {\n  StorageGrpcConfiguration,\n  StorageGrpcConfigurationProps,\n} from './config/transport/storage/grpc-configuration';\n\nexport {\n  Middleware,\n  MiddlewareRequestHandler,\n} from './config/middleware/middleware';\n\nexport {RequestLoggingMiddleware} from './config/middleware/request-logging-middleware';\nexport {ExperimentalMetricsCsvMiddleware} from './config/middleware/experimental-metrics-csv-middleware';\nexport {ExperimentalMetricsLoggingMiddleware} from './config/middleware/experimental-metrics-logging-middleware';\nexport {ExperimentalActiveRequestCountLoggingMiddleware} from './config/middleware/experimental-active-request-count-middleware';\nexport {ExperimentalEventLoopPerformanceMetricsMiddleware} from './config/middleware/experimental-event-loop-perf-middleware';\nexport {ExperimentalGarbageCollectionPerformanceMetricsMiddleware} from './config/middleware/experimental-garbage-collection-middleware';\nexport {ExampleAsyncMiddleware} from './config/middleware/example-async-middleware';\nexport {MiddlewareFactory} from './config/middleware/experimental-middleware-factory';\n\nexport {\n  ICompression,\n  CompressionStrategy,\n  AutomaticDecompression,\n} from './config/compression/compression';\n\nexport {\n  ICacheClient,\n  IMomentoCache,\n  CollectionTtl,\n  ItemType,\n  SortedSetOrder,\n  Configurations,\n  Configuration,\n  CacheConfiguration,\n  CacheClient,\n  SimpleCacheClient,\n  CacheInfo,\n  // Credentials / Auth\n  CredentialProvider,\n  StringMomentoTokenProvider,\n  EnvMomentoTokenProvider,\n  CacheRole,\n  CachePermission,\n  TopicRole,\n  TopicPermission,\n  Permission,\n  Permissions,\n  AllDataReadWrite,\n  PermissionScope,\n  /**\n   * @deprecated please use 'PermissionScope' instead\n   */\n  TokenScope,\n  PermissionScopes,\n  /**\n   * @deprecated please use 'PermissionScopes' instead\n   */\n  PermissionScopes as TokenScopes,\n  DisposableTokenScope,\n  DisposableTokenScopes,\n  CacheName,\n  TopicName,\n  CacheSelector,\n  TopicSelector,\n  AllCaches,\n  AllTopics,\n  // CacheClient response types\n  CacheGet,\n  CacheListConcatenateBack,\n  CacheListConcatenateFront,\n  CacheListFetch,\n  CacheListLength,\n  CacheListPopBack,\n  CacheListPopFront,\n  CacheListPushBack,\n  CacheListPushFront,\n  CacheListRemoveValue,\n  CacheListRetain,\n  CacheSet,\n  CacheSetIfNotExists,\n  CacheSetIfAbsent,\n  CacheSetIfPresent,\n  CacheSetIfEqual,\n  CacheSetIfNotEqual,\n  CacheSetIfAbsentOrEqual,\n  CacheSetIfPresentAndNotEqual,\n  CacheDelete,\n  CacheFlush,\n  CreateCache,\n  DeleteCache,\n  ListCaches,\n  CacheIncrement,\n  CacheSetContainsElement,\n  CacheSetContainsElements,\n  CacheSetFetch,\n  CacheDictionaryFetch,\n  CacheDictionarySetField,\n  CacheDictionarySetFields,\n  CacheDictionaryGetField,\n  CacheDictionaryGetFields,\n  CacheDictionaryRemoveField,\n  CacheDictionaryRemoveFields,\n  CacheDictionaryIncrement,\n  CacheDictionaryLength,\n  CacheSetAddElements,\n  CacheSetAddElement,\n  CacheSetRemoveElements,\n  CacheSetRemoveElement,\n  CacheSetSample,\n  CacheSortedSetPutElement,\n  CacheSortedSetPutElements,\n  CacheSortedSetFetch,\n  CacheSortedSetGetRank,\n  CacheSortedSetGetScore,\n  CacheSortedSetGetScores,\n  CacheSortedSetIncrementScore,\n  CacheSortedSetRemoveElement,\n  CacheSortedSetRemoveElements,\n  CacheSortedSetLength,\n  CacheSortedSetLengthByScore,\n  CacheItemGetType,\n  CacheItemGetTtl,\n  CacheKeyExists,\n  CacheKeysExist,\n  CacheUpdateTtl,\n  CacheIncreaseTtl,\n  CacheDecreaseTtl,\n  CacheGetBatch,\n  CacheSetBatch,\n  // TopicClient\n  TopicConfigurations,\n  TopicConfiguration,\n  TopicClientConfiguration,\n  TopicClient,\n  TopicClientProps,\n  TopicDiscontinuity,\n  TopicHeartbeat,\n  TopicItem,\n  TopicPublish,\n  TopicSubscribe,\n  SubscribeCallOptions,\n  // Storage\n  StorageConfigurations,\n  StorageConfiguration,\n  StorageClientConfiguration,\n  StoragePut,\n  StorageGet,\n  StorageDelete,\n  CreateStore,\n  DeleteStore,\n  ListStores,\n  StoreInfo,\n  PreviewStorageClient,\n  IStorageClient,\n  // Webhooks\n  PostUrlWebhookDestination,\n  Webhook,\n  WebhookDestination,\n  WebhookId,\n  DeleteWebhook,\n  ListWebhooks,\n  PutWebhook,\n  GetWebhookSecret,\n  RotateWebhookSecret,\n  WebhookDestinationType,\n  // AuthClient response types\n  AuthClient,\n  AuthConfiguration,\n  AuthClientConfiguration,\n  AuthClientConfigurations,\n  GenerateApiKey,\n  /**\n   * @deprecated Use 'GenerateApiKey' instead\n   */\n  GenerateApiKey as GenerateAuthToken,\n  RefreshApiKey,\n  /**\n   * @deprecated Use 'RefreshApiKey' instead\n   */\n  RefreshApiKey as RefreshAuthToken,\n  GenerateDisposableToken,\n  ExpiresAt,\n  ExpiresIn,\n  // LeaderboardClient\n  LeaderboardConfigurations,\n  LeaderboardConfiguration,\n  LeaderboardClientConfiguration,\n  PreviewLeaderboardClient,\n  LeaderboardOrder,\n  ILeaderboard,\n  // Errors\n  MomentoErrorCode,\n  SdkError,\n  CacheAlreadyExistsError,\n  StoreAlreadyExistsError,\n  AuthenticationError,\n  CancelledError,\n  FailedPreconditionError,\n  LimitExceededError,\n  InternalServerError,\n  InvalidArgumentError,\n  UnknownServiceError,\n  ServerUnavailableError,\n  TimeoutError,\n  BadRequestError,\n  PermissionError,\n  CacheNotFoundError,\n  StoreNotFoundError,\n  StoreItemNotFoundError,\n  UnknownError,\n  // Logging\n  MomentoLogger,\n  MomentoLoggerFactory,\n  NoopMomentoLogger,\n  NoopMomentoLoggerFactory,\n  BatchUtils,\n  WebhookUtils,\n  ReadConcern,\n  CompressionLevel,\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}