module.exports = {

"[project]/node_modules/@gomomento/sdk/dist/src/config/retry/no-retry-strategy.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NoRetryStrategy = void 0;
class NoRetryStrategy {
    constructor(props){
        this.logger = props.loggerFactory.getLogger(this);
    }
    determineWhenToRetryRequest(props) {
        this.logger.debug(`Using no-retry strategy, therefore not retrying request; status code: ${props.grpcStatus.code}, request type: ${props.grpcRequest.path}, attemptNumber: ${props.attemptNumber}`);
        // null means do not retry
        return null;
    }
}
exports.NoRetryStrategy = NoRetryStrategy; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm8tcmV0cnktc3RyYXRlZ3kuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29uZmlnL3JldHJ5L25vLXJldHJ5LXN0cmF0ZWd5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQVVBLE1BQWEsZUFBZTtJQUcxQixZQUFZLEtBQTJCO1FBQ3JDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELDJCQUEyQixDQUN6QixLQUF1QztRQUV2QyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FDZix5RUFBeUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLG1CQUFtQixLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksb0JBQW9CLEtBQUssQ0FBQyxhQUFhLEVBQUUsQ0FDakwsQ0FBQztRQUNGLDBCQUEwQjtRQUMxQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FDRjtBQWhCRCwwQ0FnQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEZXRlcm1pbmV3aGVuVG9SZXRyeVJlcXVlc3RQcm9wcyxcbiAgUmV0cnlTdHJhdGVneSxcbn0gZnJvbSAnLi9yZXRyeS1zdHJhdGVneSc7XG5pbXBvcnQge01vbWVudG9Mb2dnZXJGYWN0b3J5LCBNb21lbnRvTG9nZ2VyfSBmcm9tICcuLi8uLi8nO1xuXG5leHBvcnQgaW50ZXJmYWNlIE5vUmV0cnlTdHJhdGVneVByb3BzIHtcbiAgbG9nZ2VyRmFjdG9yeTogTW9tZW50b0xvZ2dlckZhY3Rvcnk7XG59XG5cbmV4cG9ydCBjbGFzcyBOb1JldHJ5U3RyYXRlZ3kgaW1wbGVtZW50cyBSZXRyeVN0cmF0ZWd5IHtcbiAgcHJpdmF0ZSByZWFkb25seSBsb2dnZXI6IE1vbWVudG9Mb2dnZXI7XG5cbiAgY29uc3RydWN0b3IocHJvcHM6IE5vUmV0cnlTdHJhdGVneVByb3BzKSB7XG4gICAgdGhpcy5sb2dnZXIgPSBwcm9wcy5sb2dnZXJGYWN0b3J5LmdldExvZ2dlcih0aGlzKTtcbiAgfVxuXG4gIGRldGVybWluZVdoZW5Ub1JldHJ5UmVxdWVzdChcbiAgICBwcm9wczogRGV0ZXJtaW5ld2hlblRvUmV0cnlSZXF1ZXN0UHJvcHNcbiAgKTogbnVtYmVyIHwgbnVsbCB7XG4gICAgdGhpcy5sb2dnZXIuZGVidWcoXG4gICAgICBgVXNpbmcgbm8tcmV0cnkgc3RyYXRlZ3ksIHRoZXJlZm9yZSBub3QgcmV0cnlpbmcgcmVxdWVzdDsgc3RhdHVzIGNvZGU6ICR7cHJvcHMuZ3JwY1N0YXR1cy5jb2RlfSwgcmVxdWVzdCB0eXBlOiAke3Byb3BzLmdycGNSZXF1ZXN0LnBhdGh9LCBhdHRlbXB0TnVtYmVyOiAke3Byb3BzLmF0dGVtcHROdW1iZXJ9YFxuICAgICk7XG4gICAgLy8gbnVsbCBtZWFucyBkbyBub3QgcmV0cnlcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuIl19

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/cache-request-logging.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CacheRequestToLogInterfaceConverter = exports.convertSingleKeyRequest = void 0;
const generated_types_1 = __turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/index.js [app-route] (ecmascript)");
const TEXT_DECODER = new TextDecoder();
// TODO: bytes will not always be convertible to string
function convertBytesToString(bytes) {
    return TEXT_DECODER.decode(bytes);
}
function convertSingleKeyRequest(requestType, key) {
    return {
        requestType: requestType,
        key: convertBytesToString(key)
    };
}
exports.convertSingleKeyRequest = convertSingleKeyRequest;
const convertGetRequest = (request)=>{
    return convertSingleKeyRequest('get', request.cache_key);
};
const convertGetBatchRequest = (request)=>{
    return {
        requestType: 'getBatch',
        keys: request.items.map((item)=>convertBytesToString(item.cache_key))
    };
};
const convertDeleteRequest = (request)=>{
    return convertSingleKeyRequest('delete', request.cache_key);
};
const convertSetRequest = (request)=>{
    return {
        requestType: 'set',
        key: convertBytesToString(request.cache_key),
        value: convertBytesToString(request.cache_body),
        ttlMillis: request.ttl_milliseconds
    };
};
const convertSetBatchRequest = (request)=>{
    return {
        requestType: 'setBatch',
        items: request.items.map((item)=>{
            return {
                key: convertBytesToString(item.cache_key),
                value: convertBytesToString(item.cache_body),
                ttlMillis: item.ttl_milliseconds
            };
        })
    };
};
const convertSetIfRequest = (request)=>{
    return {
        requestType: 'setIf',
        key: convertBytesToString(request.cache_key),
        value: convertBytesToString(request.cache_body),
        ttlMillis: request.ttl_milliseconds,
        condition: request.condition,
        present: request.present !== undefined,
        presentAndNotEqual: request.present_and_not_equal ? convertBytesToString(request.present_and_not_equal.value_to_check) : undefined,
        absent: request.absent !== undefined,
        equal: request.equal ? convertBytesToString(request.equal.value_to_check) : undefined,
        absentOrEqual: request.absent_or_equal ? convertBytesToString(request.absent_or_equal.value_to_check) : undefined,
        notEqual: request.not_equal ? convertBytesToString(request.not_equal.value_to_check) : undefined
    };
};
const convertSetIfNotExistsRequest = (request)=>{
    return {
        requestType: 'setIfNotExists',
        key: convertBytesToString(request.cache_key),
        value: convertBytesToString(request.cache_body),
        ttlMillis: request.ttl_milliseconds
    };
};
const convertKeysExistRequest = (request)=>{
    return {
        requestType: 'keysExist',
        keys: request.cache_keys.map((key)=>convertBytesToString(key))
    };
};
const convertIncrementRequest = (request)=>{
    return {
        requestType: 'increment',
        key: convertBytesToString(request.cache_key),
        amount: request.amount,
        ttlMillis: request.ttl_milliseconds
    };
};
const convertUpdateTtlRequest = (request)=>{
    return {
        requestType: 'updateTtl',
        key: convertBytesToString(request.cache_key),
        increaseToMillis: request.increase_to_milliseconds,
        decreaseToMillis: request.decrease_to_milliseconds,
        overwriteToMillis: request.overwrite_to_milliseconds
    };
};
const convertItemGetTtlRequest = (request)=>{
    return convertSingleKeyRequest('itemGetTtl', request.cache_key);
};
const convertItemGetTypeRequest = (request)=>{
    return convertSingleKeyRequest('itemGetType', request.cache_key);
};
const convertDictionaryGetRequest = (request)=>{
    return {
        requestType: 'dictionaryGet',
        dictionaryName: convertBytesToString(request.dictionary_name),
        fields: request.fields.map((field)=>convertBytesToString(field))
    };
};
const convertDictionaryFetchRequest = (request)=>{
    return {
        requestType: 'dictionaryFetch',
        dictionaryName: convertBytesToString(request.dictionary_name)
    };
};
const convertDictionarySetRequest = (request)=>{
    return {
        requestType: 'dictionarySet',
        dictionaryName: convertBytesToString(request.dictionary_name),
        ttlMillis: request.ttl_milliseconds,
        refreshTtl: request.refresh_ttl,
        items: request.items.map((item)=>{
            return {
                field: convertBytesToString(item.field),
                value: convertBytesToString(item.value)
            };
        })
    };
};
const convertDictionaryIncrementRequest = (request)=>{
    return {
        requestType: 'dictionaryIncrement',
        dictionaryName: convertBytesToString(request.dictionary_name),
        field: convertBytesToString(request.field),
        amount: request.amount,
        ttlMillis: request.ttl_milliseconds,
        refreshTtl: request.refresh_ttl
    };
};
const convertDictionaryDeleteRequest = (request)=>{
    return {
        requestType: 'dictionaryDelete',
        dictionaryName: convertBytesToString(request.dictionary_name),
        fields: request.some.fields.map((field)=>convertBytesToString(field))
    };
};
const convertDictionaryLengthRequest = (request)=>{
    return {
        requestType: 'dictionaryLength',
        dictionaryName: convertBytesToString(request.dictionary_name)
    };
};
const convertSetFetchRequest = (request)=>{
    return {
        requestType: 'setFetch',
        setName: convertBytesToString(request.set_name)
    };
};
const convertSetSampleRequest = (request)=>{
    return {
        requestType: 'setSample',
        setName: convertBytesToString(request.set_name),
        limit: request.limit
    };
};
const convertSetUnionRequest = (request)=>{
    return {
        requestType: 'setUnion',
        setName: convertBytesToString(request.set_name),
        ttlMillis: request.ttl_milliseconds,
        refreshTtl: request.refresh_ttl,
        elements: request.elements.map((element)=>convertBytesToString(element))
    };
};
const convertSetDifferenceRequest = (request)=>{
    return {
        requestType: 'setDifference',
        setName: convertBytesToString(request.set_name),
        action: request.minuend ? 'minuend' : request.subtrahend.set ? 'subtrahend_set' : 'subtrahend_identity',
        elements: request.minuend ? request.minuend.elements.map((element)=>convertBytesToString(element)) : request.subtrahend.set ? request.subtrahend.set.elements.map((element)=>convertBytesToString(element)) : undefined
    };
};
const convertSetContainsRequest = (request)=>{
    return {
        requestType: 'setContains',
        setName: convertBytesToString(request.set_name),
        elements: request.elements.map((element)=>convertBytesToString(element))
    };
};
const convertSetLengthRequest = (request)=>{
    return {
        requestType: 'setLength',
        setName: convertBytesToString(request.set_name)
    };
};
const convertSetPopRequest = (request)=>{
    return {
        requestType: 'setPop',
        setName: convertBytesToString(request.set_name),
        count: request.count
    };
};
const convertListConcatenateFrontRequest = (request)=>{
    return {
        requestType: 'listConcatenateFront',
        listName: convertBytesToString(request.list_name),
        ttlMillis: request.ttl_milliseconds,
        refreshTtl: request.refresh_ttl,
        truncateBackToSize: request.truncate_back_to_size,
        values: request.values.map((value)=>convertBytesToString(value))
    };
};
const convertListConcatenateBackRequest = (request)=>{
    return {
        requestType: 'listConcatenateBack',
        listName: convertBytesToString(request.list_name),
        ttlMillis: request.ttl_milliseconds,
        refreshTtl: request.refresh_ttl,
        truncateFrontToSize: request.truncate_front_to_size,
        values: request.values.map((value)=>convertBytesToString(value))
    };
};
const convertListPushFrontRequest = (request)=>{
    return {
        requestType: 'listPushFront',
        listName: convertBytesToString(request.list_name),
        ttlMillis: request.ttl_milliseconds,
        refreshTtl: request.refresh_ttl,
        truncateBackToSize: request.truncate_back_to_size,
        value: convertBytesToString(request.value)
    };
};
const convertListPushBackRequest = (request)=>{
    return {
        requestType: 'listPushBack',
        listName: convertBytesToString(request.list_name),
        ttlMillis: request.ttl_milliseconds,
        refreshTtl: request.refresh_ttl,
        truncateFrontToSize: request.truncate_front_to_size,
        value: convertBytesToString(request.value)
    };
};
const convertListPopFrontRequest = (request)=>{
    return {
        requestType: 'listPopFront',
        listName: convertBytesToString(request.list_name)
    };
};
const convertListPopBackRequest = (request)=>{
    return {
        requestType: 'listPopBack',
        listName: convertBytesToString(request.list_name)
    };
};
const convertListRemoveRequest = (request)=>{
    return {
        requestType: 'listRemove',
        listName: convertBytesToString(request.list_name),
        value: convertBytesToString(request.all_elements_with_value)
    };
};
const convertListFetchRequest = (request)=>{
    return {
        requestType: 'listFetch',
        listName: convertBytesToString(request.list_name),
        inclusiveStart: request.inclusive_start,
        exclusiveEnd: request.exclusive_end
    };
};
const convertListEraseRequest = (request)=>{
    return {
        requestType: 'listErase',
        listName: convertBytesToString(request.list_name),
        all: request.all !== undefined,
        some: request.some.ranges.map((range)=>{
            return {
                beginIndex: range.begin_index,
                count: range.count
            };
        })
    };
};
const convertListRetainRequest = (request)=>{
    return {
        requestType: 'listRetain',
        listName: convertBytesToString(request.list_name),
        ttlMillis: request.ttl_milliseconds,
        refreshTtl: request.refresh_ttl,
        inclusiveStart: request.inclusive_start,
        exclusiveEnd: request.exclusive_end
    };
};
const convertListLengthRequest = (request)=>{
    return {
        requestType: 'listLength',
        listName: convertBytesToString(request.list_name)
    };
};
const convertSortedSetPutRequest = (request)=>{
    return {
        requestType: 'sortedSetPut',
        sortedSetName: convertBytesToString(request.set_name),
        ttlMillis: request.ttl_milliseconds,
        refreshTtl: request.refresh_ttl,
        elements: request.elements.map((item)=>{
            return {
                value: convertBytesToString(item.value),
                score: item.score
            };
        })
    };
};
const convertSortedSetFetchRequest = (request)=>{
    var _a, _b;
    const byScore = request.by_score ? {
        minScore: request.by_score.unbounded_min ? 'unbounded' : request.by_score.min_score.score,
        minScoreExclusive: (_a = request.by_score.min_score) === null || _a === void 0 ? void 0 : _a.exclusive,
        maxScore: request.by_score.unbounded_max ? 'unbounded' : request.by_score.max_score.score,
        maxScoreExclusive: (_b = request.by_score.max_score) === null || _b === void 0 ? void 0 : _b.exclusive,
        offset: request.by_score.offset,
        count: request.by_score.count
    } : undefined;
    const byIndex = request.by_index ? {
        inclusiveStartIndex: request.by_index.unbounded_start ? 'unbounded' : request.by_index.inclusive_start_index,
        exclusiveEndIndex: request.by_index.unbounded_end ? 'unbounded' : request.by_index.exclusive_end_index
    } : undefined;
    return {
        requestType: 'sortedSetFetch',
        sortedSetName: convertBytesToString(request.set_name),
        order: request.order === generated_types_1.cache.cache_client._SortedSetFetchRequest.Order.DESCENDING ? 'descending' : 'ascending',
        byScore,
        byIndex
    };
};
const convertSortedSetGetScoreRequest = (request)=>{
    return {
        requestType: 'sortedSetGetScore',
        sortedSetName: convertBytesToString(request.set_name),
        values: request.values.map((value)=>convertBytesToString(value))
    };
};
const convertSortedSetRemoveRequest = (request)=>{
    return {
        requestType: 'sortedSetRemove',
        sortedSetName: convertBytesToString(request.set_name),
        values: request.all ? 'all' : request.some.values.map((value)=>convertBytesToString(value))
    };
};
const convertSortedSetIncrementRequest = (request)=>{
    return {
        requestType: 'sortedSetIncrement',
        sortedSetName: convertBytesToString(request.set_name),
        value: convertBytesToString(request.value),
        amount: request.amount,
        ttlMillis: request.ttl_milliseconds,
        refreshTtl: request.refresh_ttl
    };
};
const convertSortedSetGetRankRequest = (request)=>{
    return {
        requestType: 'sortedSetGetRank',
        sortedSetName: convertBytesToString(request.set_name),
        value: convertBytesToString(request.value),
        order: request.order === generated_types_1.cache.cache_client._SortedSetGetRankRequest.Order.DESCENDING ? 'descending' : 'ascending'
    };
};
const convertSortedSetLengthRequest = (request)=>{
    return {
        requestType: 'sortedSetLength',
        sortedSetName: convertBytesToString(request.set_name)
    };
};
const convertSortedSetLengthByScoreRequest = (request)=>{
    var _a, _b;
    return {
        requestType: 'sortedSetLengthByScore',
        sortedSetName: convertBytesToString(request.set_name),
        minScore: request.unbounded_min ? 'unbounded' : (_a = request.inclusive_min) !== null && _a !== void 0 ? _a : request.exclusive_min,
        minScoreExclusive: request.unbounded_min ? undefined : request.has_exclusive_min,
        maxScore: request.unbounded_max ? 'unbounded' : (_b = request.inclusive_max) !== null && _b !== void 0 ? _b : request.exclusive_max,
        maxScoreExclusive: request.unbounded_max ? undefined : request.has_exclusive_max
    };
};
exports.CacheRequestToLogInterfaceConverter = new Map([
    [
        '_GetRequest',
        convertGetRequest
    ],
    [
        '_GetBatchRequest',
        convertGetBatchRequest
    ],
    [
        '_DeleteRequest',
        convertDeleteRequest
    ],
    [
        '_SetRequest',
        convertSetRequest
    ],
    [
        '_SetBatchRequest',
        convertSetBatchRequest
    ],
    [
        '_SetIfRequest',
        convertSetIfRequest
    ],
    [
        '_SetIfNotExistsRequest',
        convertSetIfNotExistsRequest
    ],
    [
        '_KeysExistRequest',
        convertKeysExistRequest
    ],
    [
        '_IncrementRequest',
        convertIncrementRequest
    ],
    [
        '_UpdateTtlRequest',
        convertUpdateTtlRequest
    ],
    [
        '_ItemGetTtlRequest',
        convertItemGetTtlRequest
    ],
    [
        '_ItemGetTypeRequest',
        convertItemGetTypeRequest
    ],
    [
        '_DictionaryGetRequest',
        convertDictionaryGetRequest
    ],
    [
        '_DictionaryFetchRequest',
        convertDictionaryFetchRequest
    ],
    [
        '_DictionarySetRequest',
        convertDictionarySetRequest
    ],
    [
        '_DictionaryIncrementRequest',
        convertDictionaryIncrementRequest
    ],
    [
        '_DictionaryDeleteRequest',
        convertDictionaryDeleteRequest
    ],
    [
        '_DictionaryLengthRequest',
        convertDictionaryLengthRequest
    ],
    [
        '_SetFetchRequest',
        convertSetFetchRequest
    ],
    [
        '_SetSampleRequest',
        convertSetSampleRequest
    ],
    [
        '_SetUnionRequest',
        convertSetUnionRequest
    ],
    [
        '_SetDifferenceRequest',
        convertSetDifferenceRequest
    ],
    [
        '_SetContainsRequest',
        convertSetContainsRequest
    ],
    [
        '_SetLengthRequest',
        convertSetLengthRequest
    ],
    [
        '_SetPopRequest',
        convertSetPopRequest
    ],
    [
        '_ListConcatenateFrontRequest',
        convertListConcatenateFrontRequest
    ],
    [
        '_ListConcatenateBackRequest',
        convertListConcatenateBackRequest
    ],
    [
        '_ListPushFrontRequest',
        convertListPushFrontRequest
    ],
    [
        '_ListPushBackRequest',
        convertListPushBackRequest
    ],
    [
        '_ListPopFrontRequest',
        convertListPopFrontRequest
    ],
    [
        '_ListPopBackRequest',
        convertListPopBackRequest
    ],
    [
        '_ListRemoveRequest',
        convertListRemoveRequest
    ],
    [
        '_ListFetchRequest',
        convertListFetchRequest
    ],
    [
        '_ListEraseRequest',
        convertListEraseRequest
    ],
    [
        '_ListRetainRequest',
        convertListRetainRequest
    ],
    [
        '_ListLengthRequest',
        convertListLengthRequest
    ],
    [
        '_SortedSetPutRequest',
        convertSortedSetPutRequest
    ],
    [
        '_SortedSetFetchRequest',
        convertSortedSetFetchRequest
    ],
    [
        '_SortedSetGetScoreRequest',
        convertSortedSetGetScoreRequest
    ],
    [
        '_SortedSetRemoveRequest',
        convertSortedSetRemoveRequest
    ],
    [
        '_SortedSetIncrementRequest',
        convertSortedSetIncrementRequest
    ],
    [
        '_SortedSetGetRankRequest',
        convertSortedSetGetRankRequest
    ],
    [
        '_SortedSetLengthRequest',
        convertSortedSetLengthRequest
    ],
    [
        '_SortedSetLengthByScoreRequest',
        convertSortedSetLengthByScoreRequest
    ]
]); //# sourceMappingURL=data:application/json;base64,

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/middleware.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MiddlewareMessage = exports.MiddlewareStatus = exports.MiddlewareMetadata = void 0;
const cache_request_logging_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/cache-request-logging.js [app-route] (ecmascript)");
class MiddlewareMetadata {
    constructor(metadata){
        this._grpcMetadata = metadata;
    }
    toJsonObject() {
        return this._grpcMetadata.toJSON();
    }
    toJsonString() {
        return JSON.stringify(this._grpcMetadata.toJSON());
    }
}
exports.MiddlewareMetadata = MiddlewareMetadata;
class MiddlewareStatus {
    constructor(status){
        this._grpcStatus = status;
    }
    code() {
        return this._grpcStatus.code;
    }
}
exports.MiddlewareStatus = MiddlewareStatus;
class MiddlewareMessage {
    constructor(message){
        this._grpcMessage = message;
    }
    messageLength() {
        if (this._grpcMessage !== null && this._grpcMessage !== undefined) {
            return this._grpcMessage.serializeBinary().length;
        }
        return 0;
    }
    constructorName() {
        return this._grpcMessage.constructor.name;
    }
    // Note: APIs that use streaming interceptors (e.g. GetBatch and SetBatch)
    // will not see these debug messages
    toLogFormat() {
        const requestToLogConverter = cache_request_logging_1.CacheRequestToLogInterfaceConverter.get(this.constructorName());
        if (requestToLogConverter === undefined) {
            console.warn('Unable to find requestToLogConverter for', this.constructorName());
            return {
                requestType: this.constructorName()
            };
        }
        return requestToLogConverter(this._grpcMessage);
    }
}
exports.MiddlewareMessage = MiddlewareMessage; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb25maWcvbWlkZGxld2FyZS9taWRkbGV3YXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLG1FQUdpQztBQUVqQyxNQUFhLGtCQUFrQjtJQUU3QixZQUFZLFFBQWtCO1FBQzVCLElBQUksQ0FBQyxhQUFhLEdBQUcsUUFBUSxDQUFDO0lBQ2hDLENBQUM7SUFFRCxZQUFZO1FBQ1YsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxZQUFZO1FBQ1YsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUNyRCxDQUFDO0NBQ0Y7QUFiRCxnREFhQztBQUNELE1BQWEsZ0JBQWdCO0lBRTNCLFlBQVksTUFBb0I7UUFDOUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUM7SUFDNUIsQ0FBQztJQUVELElBQUk7UUFDRixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDO0lBQy9CLENBQUM7Q0FDRjtBQVRELDRDQVNDO0FBRUQsTUFBYSxpQkFBaUI7SUFFNUIsWUFBWSxPQUFnQjtRQUMxQixJQUFJLENBQUMsWUFBWSxHQUFHLE9BQU8sQ0FBQztJQUM5QixDQUFDO0lBRUQsYUFBYTtRQUNYLElBQUksSUFBSSxDQUFDLFlBQVksS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLFlBQVksS0FBSyxTQUFTLEVBQUU7WUFDakUsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsRUFBRSxDQUFDLE1BQU0sQ0FBQztTQUNuRDtRQUNELE9BQU8sQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVELGVBQWU7UUFDYixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQztJQUM1QyxDQUFDO0lBRUQsMEVBQTBFO0lBQzFFLG9DQUFvQztJQUNwQyxXQUFXO1FBQ1QsTUFBTSxxQkFBcUIsR0FBRywyREFBbUMsQ0FBQyxHQUFHLENBQ25FLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FDdkIsQ0FBQztRQUNGLElBQUkscUJBQXFCLEtBQUssU0FBUyxFQUFFO1lBQ3ZDLE9BQU8sQ0FBQyxJQUFJLENBQ1YsMENBQTBDLEVBQzFDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FDdkIsQ0FBQztZQUNGLE9BQU8sRUFBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGVBQWUsRUFBRSxFQUFDLENBQUM7U0FDOUM7UUFDRCxPQUFPLHFCQUFxQixDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNsRCxDQUFDO0NBQ0Y7QUFoQ0QsOENBZ0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtNZXRhZGF0YSwgU3RhdHVzT2JqZWN0fSBmcm9tICdAZ3JwYy9ncnBjLWpzJztcbmltcG9ydCB7TWVzc2FnZX0gZnJvbSAnZ29vZ2xlLXByb3RvYnVmJztcbmltcG9ydCB7XG4gIFJlcXVlc3RMb2csXG4gIENhY2hlUmVxdWVzdFRvTG9nSW50ZXJmYWNlQ29udmVydGVyLFxufSBmcm9tICcuL2NhY2hlLXJlcXVlc3QtbG9nZ2luZyc7XG5cbmV4cG9ydCBjbGFzcyBNaWRkbGV3YXJlTWV0YWRhdGEge1xuICByZWFkb25seSBfZ3JwY01ldGFkYXRhOiBNZXRhZGF0YTtcbiAgY29uc3RydWN0b3IobWV0YWRhdGE6IE1ldGFkYXRhKSB7XG4gICAgdGhpcy5fZ3JwY01ldGFkYXRhID0gbWV0YWRhdGE7XG4gIH1cblxuICB0b0pzb25PYmplY3QoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2dycGNNZXRhZGF0YS50b0pTT04oKTtcbiAgfVxuXG4gIHRvSnNvblN0cmluZygpOiBzdHJpbmcge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh0aGlzLl9ncnBjTWV0YWRhdGEudG9KU09OKCkpO1xuICB9XG59XG5leHBvcnQgY2xhc3MgTWlkZGxld2FyZVN0YXR1cyB7XG4gIHJlYWRvbmx5IF9ncnBjU3RhdHVzOiBTdGF0dXNPYmplY3Q7XG4gIGNvbnN0cnVjdG9yKHN0YXR1czogU3RhdHVzT2JqZWN0KSB7XG4gICAgdGhpcy5fZ3JwY1N0YXR1cyA9IHN0YXR1cztcbiAgfVxuXG4gIGNvZGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2dycGNTdGF0dXMuY29kZTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTWlkZGxld2FyZU1lc3NhZ2Uge1xuICByZWFkb25seSBfZ3JwY01lc3NhZ2U6IE1lc3NhZ2U7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IE1lc3NhZ2UpIHtcbiAgICB0aGlzLl9ncnBjTWVzc2FnZSA9IG1lc3NhZ2U7XG4gIH1cblxuICBtZXNzYWdlTGVuZ3RoKCk6IG51bWJlciB7XG4gICAgaWYgKHRoaXMuX2dycGNNZXNzYWdlICE9PSBudWxsICYmIHRoaXMuX2dycGNNZXNzYWdlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB0aGlzLl9ncnBjTWVzc2FnZS5zZXJpYWxpemVCaW5hcnkoKS5sZW5ndGg7XG4gICAgfVxuICAgIHJldHVybiAwO1xuICB9XG5cbiAgY29uc3RydWN0b3JOYW1lKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2dycGNNZXNzYWdlLmNvbnN0cnVjdG9yLm5hbWU7XG4gIH1cblxuICAvLyBOb3RlOiBBUElzIHRoYXQgdXNlIHN0cmVhbWluZyBpbnRlcmNlcHRvcnMgKGUuZy4gR2V0QmF0Y2ggYW5kIFNldEJhdGNoKVxuICAvLyB3aWxsIG5vdCBzZWUgdGhlc2UgZGVidWcgbWVzc2FnZXNcbiAgdG9Mb2dGb3JtYXQoKTogUmVxdWVzdExvZyB7XG4gICAgY29uc3QgcmVxdWVzdFRvTG9nQ29udmVydGVyID0gQ2FjaGVSZXF1ZXN0VG9Mb2dJbnRlcmZhY2VDb252ZXJ0ZXIuZ2V0KFxuICAgICAgdGhpcy5jb25zdHJ1Y3Rvck5hbWUoKVxuICAgICk7XG4gICAgaWYgKHJlcXVlc3RUb0xvZ0NvbnZlcnRlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICdVbmFibGUgdG8gZmluZCByZXF1ZXN0VG9Mb2dDb252ZXJ0ZXIgZm9yJyxcbiAgICAgICAgdGhpcy5jb25zdHJ1Y3Rvck5hbWUoKVxuICAgICAgKTtcbiAgICAgIHJldHVybiB7cmVxdWVzdFR5cGU6IHRoaXMuY29uc3RydWN0b3JOYW1lKCl9O1xuICAgIH1cbiAgICByZXR1cm4gcmVxdWVzdFRvTG9nQ29udmVydGVyKHRoaXMuX2dycGNNZXNzYWdlKTtcbiAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIE1pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlciB7XG4gIG9uUmVxdWVzdE1ldGFkYXRhKG1ldGFkYXRhOiBNaWRkbGV3YXJlTWV0YWRhdGEpOiBQcm9taXNlPE1pZGRsZXdhcmVNZXRhZGF0YT47XG4gIG9uUmVxdWVzdEJvZHkocmVxdWVzdDogTWlkZGxld2FyZU1lc3NhZ2UpOiBQcm9taXNlPE1pZGRsZXdhcmVNZXNzYWdlPjtcblxuICBvblJlc3BvbnNlTWV0YWRhdGEobWV0YWRhdGE6IE1pZGRsZXdhcmVNZXRhZGF0YSk6IFByb21pc2U8TWlkZGxld2FyZU1ldGFkYXRhPjtcbiAgb25SZXNwb25zZUJvZHkoXG4gICAgcmVzcG9uc2U6IE1pZGRsZXdhcmVNZXNzYWdlIHwgbnVsbFxuICApOiBQcm9taXNlPE1pZGRsZXdhcmVNZXNzYWdlIHwgbnVsbD47XG4gIG9uUmVzcG9uc2VTdGF0dXMoc3RhdHVzOiBNaWRkbGV3YXJlU3RhdHVzKTogUHJvbWlzZTxNaWRkbGV3YXJlU3RhdHVzPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXJDb250ZXh0IHtcbiAgW2tleTogc3ltYm9sXTogc3RyaW5nO1xufVxuXG4vKipcbiAqIFRoZSBNaWRkbGV3YXJlIGludGVyZmFjZSBhbGxvd3MgdGhlIENvbmZpZ3VyYXRpb24gdG8gcHJvdmlkZSBhIGhpZ2hlci1vcmRlciBmdW5jdGlvbiB0aGF0IHdyYXBzIGFsbCByZXF1ZXN0cy5cbiAqIFRoaXMgYWxsb3dzIGZ1dHVyZSBzdXBwb3J0IGZvciB0aGluZ3MgbGlrZSBjbGllbnQtc2lkZSBtZXRyaWNzIG9yIG90aGVyIGRpYWdub3N0aWNzIGhlbHBlcnMuXG4gKlxuICogQW4gb3B0aW9uYWwgY29udGV4dCBjYW4gYmUgcHJvdmlkZWQgdGhhdCBpcyBlc3NlbnRpYWxseSBhIDxrZXksIHZhbHVlPiBtYXAge0BsaW5rIE1pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlckNvbnRleHR9LlxuICogVGhlIGNvbnRleHQgb2JqZWN0IGlzIGF2YWlsYWJsZSB0byBlYWNoIGluZGl2aWR1YWwgaW52b2NhdGlvbiBvZiB0aGUgcmVxdWVzdCBoYW5kbGVyIGZvciB0aGUgbWlkZGxld2FyZS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBNaWRkbGV3YXJlIHtcbiAgb25OZXdSZXF1ZXN0KFxuICAgIGNvbnRleHQ/OiBNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXJDb250ZXh0XG4gICk6IE1pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlcjtcbiAgaW5pdD8oKTogdm9pZDtcbiAgY2xvc2U/KCk6IHZvaWQ7XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/transport/cache/grpc-configuration.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=data:application/json;base64,

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/transport/cache/transport-strategy.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StaticTransportStrategy = exports.StaticGrpcConfiguration = void 0;
class StaticGrpcConfiguration {
    constructor(props){
        this.deadlineMillis = props.deadlineMillis;
        this.maxSessionMemoryMb = props.maxSessionMemoryMb;
        if (props.numClients !== undefined && props.numClients !== null) {
            this.numClients = props.numClients;
        } else {
            // This is the previously hardcoded value and a safe default for most environments.
            this.numClients = 6;
        }
        this.maxConcurrentRequests = props.maxConcurrentRequests;
        this.keepAliveTimeMs = props.keepAliveTimeMs;
        this.keepAliveTimeoutMs = props.keepAliveTimeoutMs;
        this.keepAlivePermitWithoutCalls = props.keepAlivePermitWithoutCalls;
        this.maxSendMessageLength = props.maxSendMessageLength;
        this.maxReceiveMessageLength = props.maxReceiveMessageLength;
    }
    getDeadlineMillis() {
        return this.deadlineMillis;
    }
    getMaxSessionMemoryMb() {
        return this.maxSessionMemoryMb;
    }
    getKeepAliveTimeoutMS() {
        return this.keepAliveTimeoutMs;
    }
    getKeepAliveTimeMS() {
        return this.keepAliveTimeMs;
    }
    getKeepAlivePermitWithoutCalls() {
        return this.keepAlivePermitWithoutCalls;
    }
    withDeadlineMillis(deadlineMillis) {
        return new StaticGrpcConfiguration({
            deadlineMillis: deadlineMillis,
            maxSessionMemoryMb: this.maxSessionMemoryMb,
            numClients: this.numClients
        });
    }
    withMaxSessionMemoryMb(maxSessionMemoryMb) {
        return new StaticGrpcConfiguration({
            deadlineMillis: this.deadlineMillis,
            maxSessionMemoryMb: maxSessionMemoryMb,
            numClients: this.numClients
        });
    }
    getMaxSendMessageLength() {
        return this.maxSendMessageLength;
    }
    getMaxReceiveMessageLength() {
        return this.maxReceiveMessageLength;
    }
    getNumClients() {
        return this.numClients;
    }
    withNumClients(numClients) {
        return new StaticGrpcConfiguration({
            deadlineMillis: this.deadlineMillis,
            maxSessionMemoryMb: this.maxSessionMemoryMb,
            numClients: numClients
        });
    }
    getMaxConcurrentRequests() {
        return this.maxConcurrentRequests;
    }
    withMaxConcurrentRequests(maxConcurrentRequests) {
        return new StaticGrpcConfiguration({
            deadlineMillis: this.deadlineMillis,
            maxSessionMemoryMb: this.maxSessionMemoryMb,
            numClients: this.numClients,
            maxConcurrentRequests: maxConcurrentRequests
        });
    }
}
exports.StaticGrpcConfiguration = StaticGrpcConfiguration;
class StaticTransportStrategy {
    constructor(props){
        this.grpcConfig = props.grpcConfiguration;
        this.maxIdleMillis = props.maxIdleMillis;
        this.maxClientAgeMillis = props.maxClientAgeMillis;
    }
    getGrpcConfig() {
        return this.grpcConfig;
    }
    getMaxClientAgeMillis() {
        return this.maxClientAgeMillis;
    }
    withGrpcConfig(grpcConfig) {
        return new StaticTransportStrategy({
            grpcConfiguration: grpcConfig,
            maxIdleMillis: this.maxIdleMillis,
            maxClientAgeMillis: this.maxClientAgeMillis
        });
    }
    getMaxIdleMillis() {
        return this.maxIdleMillis;
    }
    withMaxIdleMillis(maxIdleMillis) {
        return new StaticTransportStrategy({
            grpcConfiguration: this.grpcConfig,
            maxIdleMillis: maxIdleMillis,
            maxClientAgeMillis: this.maxClientAgeMillis
        });
    }
    withMaxClientAgeMillis(maxClientAgeMillis) {
        return new StaticTransportStrategy({
            grpcConfiguration: this.grpcConfig,
            maxIdleMillis: this.maxIdleMillis,
            maxClientAgeMillis: maxClientAgeMillis
        });
    }
    withClientTimeoutMillis(clientTimeout) {
        return new StaticTransportStrategy({
            grpcConfiguration: this.grpcConfig.withDeadlineMillis(clientTimeout),
            maxIdleMillis: this.maxIdleMillis
        });
    }
    getMaxConcurrentRequests() {
        return this.grpcConfig.getMaxConcurrentRequests();
    }
    withMaxConcurrentRequests(maxConcurrentRequests) {
        return new StaticTransportStrategy({
            grpcConfiguration: this.grpcConfig.withMaxConcurrentRequests(maxConcurrentRequests),
            maxIdleMillis: this.maxIdleMillis
        });
    }
}
exports.StaticTransportStrategy = StaticTransportStrategy; //# sourceMappingURL=data:application/json;base64,

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/transport/cache/index.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/transport/cache/grpc-configuration.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/transport/cache/transport-strategy.js [app-route] (ecmascript)"), exports); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29uZmlnL3RyYW5zcG9ydC9jYWNoZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsdURBQXFDO0FBQ3JDLHVEQUFxQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vZ3JwYy1jb25maWd1cmF0aW9uJztcbmV4cG9ydCAqIGZyb20gJy4vdHJhbnNwb3J0LXN0cmF0ZWd5JztcbiJdfQ==

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/configuration.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CacheConfiguration = void 0;
class CacheConfiguration {
    constructor(props){
        this.loggerFactory = props.loggerFactory;
        this.retryStrategy = props.retryStrategy;
        this.transportStrategy = props.transportStrategy;
        this.middlewares = props.middlewares;
        this.throwOnErrors = props.throwOnErrors;
        this.readConcern = props.readConcern;
        this.compression = props.compression;
    }
    getLoggerFactory() {
        return this.loggerFactory;
    }
    getRetryStrategy() {
        return this.retryStrategy;
    }
    withRetryStrategy(retryStrategy) {
        return new CacheConfiguration({
            loggerFactory: this.loggerFactory,
            retryStrategy: retryStrategy,
            transportStrategy: this.transportStrategy,
            middlewares: this.middlewares,
            throwOnErrors: this.throwOnErrors,
            readConcern: this.readConcern,
            compression: this.compression
        });
    }
    getTransportStrategy() {
        return this.transportStrategy;
    }
    withTransportStrategy(transportStrategy) {
        return new CacheConfiguration({
            loggerFactory: this.loggerFactory,
            retryStrategy: this.retryStrategy,
            transportStrategy: transportStrategy,
            middlewares: this.middlewares,
            throwOnErrors: this.throwOnErrors,
            readConcern: this.readConcern,
            compression: this.compression
        });
    }
    withNumConnections(numConnections) {
        return this.withTransportStrategy(this.getTransportStrategy().withGrpcConfig(this.getTransportStrategy().getGrpcConfig().withNumClients(numConnections)));
    }
    getMiddlewares() {
        return this.middlewares;
    }
    withMiddlewares(middlewares) {
        return new CacheConfiguration({
            loggerFactory: this.loggerFactory,
            retryStrategy: this.retryStrategy,
            transportStrategy: this.transportStrategy,
            middlewares: middlewares,
            throwOnErrors: this.throwOnErrors,
            readConcern: this.readConcern,
            compression: this.compression
        });
    }
    addMiddleware(middleware) {
        return new CacheConfiguration({
            loggerFactory: this.loggerFactory,
            retryStrategy: this.retryStrategy,
            transportStrategy: this.transportStrategy,
            middlewares: [
                middleware,
                ...this.middlewares
            ],
            throwOnErrors: this.throwOnErrors,
            readConcern: this.readConcern,
            compression: this.compression
        });
    }
    withClientTimeoutMillis(clientTimeout) {
        return new CacheConfiguration({
            loggerFactory: this.loggerFactory,
            retryStrategy: this.retryStrategy,
            transportStrategy: this.transportStrategy.withClientTimeoutMillis(clientTimeout),
            middlewares: this.middlewares,
            throwOnErrors: this.throwOnErrors,
            readConcern: this.readConcern,
            compression: this.compression
        });
    }
    getThrowOnErrors() {
        return this.throwOnErrors;
    }
    withThrowOnErrors(throwOnErrors) {
        return new CacheConfiguration({
            loggerFactory: this.loggerFactory,
            retryStrategy: this.retryStrategy,
            transportStrategy: this.transportStrategy,
            middlewares: this.middlewares,
            throwOnErrors: throwOnErrors,
            readConcern: this.readConcern,
            compression: this.compression
        });
    }
    getReadConcern() {
        return this.readConcern;
    }
    withReadConcern(readConcern) {
        return new CacheConfiguration({
            loggerFactory: this.loggerFactory,
            retryStrategy: this.retryStrategy,
            transportStrategy: this.transportStrategy,
            middlewares: this.middlewares,
            throwOnErrors: this.throwOnErrors,
            readConcern: readConcern,
            compression: this.compression
        });
    }
    getCompressionStrategy() {
        return this.compression;
    }
    withCompressionStrategy(compressionStrategy) {
        return new CacheConfiguration({
            loggerFactory: this.loggerFactory,
            retryStrategy: this.retryStrategy,
            transportStrategy: this.transportStrategy,
            middlewares: this.middlewares,
            throwOnErrors: this.throwOnErrors,
            readConcern: this.readConcern,
            compression: compressionStrategy
        });
    }
    hasCompressionStrategy() {
        return this.compression !== undefined;
    }
}
exports.CacheConfiguration = CacheConfiguration; //# sourceMappingURL=data:application/json;base64,

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/retry/default-eligibility-strategy.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DefaultEligibilityStrategy = void 0;
const constants_1 = __turbopack_require__("[project]/node_modules/@grpc/grpc-js/build/src/constants.js [app-route] (ecmascript)");
const retryableGrpcStatusCodes = [
    // including all the status codes for reference, but
    // commenting out the ones we don't want to retry on for now.
    // Status.OK,
    // Status.CANCELLED,
    // Status.UNKNOWN,
    // Status.INVALID_ARGUMENT,
    // Status.DEADLINE_EXCEEDED,
    // Status.NOT_FOUND,
    // Status.ALREADY_EXISTS,
    // Status.PERMISSION_DENIED,
    // Status.RESOURCE_EXHAUSTED,
    // Status.FAILED_PRECONDITION,
    // Status.ABORTED,
    // Status.OUT_OF_RANGE,
    // Status.UNIMPLEMENTED,
    constants_1.Status.INTERNAL,
    constants_1.Status.UNAVAILABLE
];
const retryableRequestTypes = [
    '/cache_client.Scs/Set',
    '/cache_client.Scs/Get',
    '/cache_client.Scs/Delete',
    '/cache_client.Scs/DictionarySet',
    // not idempotent: '/cache_client.Scs/DictionaryIncrement',
    '/cache_client.Scs/DictionaryGet',
    '/cache_client.Scs/DictionaryFetch',
    '/cache_client.Scs/DictionaryDelete',
    '/cache_client.Scs/SetUnion',
    '/cache_client.Scs/SetDifference',
    '/cache_client.Scs/SetFetch',
    // not idempotent: '/cache_client.Scs/ListPushFront',
    // not idempotent: '/cache_client.Scs/ListPushBack',
    // not idempotent: '/cache_client.Scs/ListPopFront',
    // not idempotent: '/cache_client.Scs/ListPopBack',
    '/cache_client.Scs/ListFetch',
    /*
     *  Warning: in the future, this may not be idempotent
     *  Currently it supports removing all occurrences of a value.
     *  In the future, we may also add "the first/last N occurrences of a value".
     *  In the latter case it is not idempotent.
     */ '/cache_client.Scs/ListRemove',
    '/cache_client.Scs/ListLength'
];
class DefaultEligibilityStrategy {
    constructor(loggerFactory){
        this.logger = loggerFactory.getLogger(this);
    }
    isEligibleForRetry(props) {
        if (!retryableGrpcStatusCodes.includes(props.grpcStatus.code)) {
            this.logger.debug(`Response with status code ${props.grpcStatus.code} is not retryable.`);
            return false;
        }
        if (!retryableRequestTypes.includes(props.grpcRequest.path)) {
            this.logger.debug(`Request with type ${props.grpcRequest.path} is not retryable.`);
            return false;
        }
        return true;
    }
}
exports.DefaultEligibilityStrategy = DefaultEligibilityStrategy; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1lbGlnaWJpbGl0eS1zdHJhdGVneS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb25maWcvcmV0cnkvZGVmYXVsdC1lbGlnaWJpbGl0eS1zdHJhdGVneS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxpRUFBeUQ7QUFNekQsTUFBTSx3QkFBd0IsR0FBa0I7SUFDOUMsb0RBQW9EO0lBQ3BELDZEQUE2RDtJQUU3RCxhQUFhO0lBQ2Isb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQiwyQkFBMkI7SUFDM0IsNEJBQTRCO0lBQzVCLG9CQUFvQjtJQUNwQix5QkFBeUI7SUFDekIsNEJBQTRCO0lBQzVCLDZCQUE2QjtJQUM3Qiw4QkFBOEI7SUFDOUIsa0JBQWtCO0lBQ2xCLHVCQUF1QjtJQUN2Qix3QkFBd0I7SUFDeEIsa0JBQU0sQ0FBQyxRQUFRO0lBQ2Ysa0JBQU0sQ0FBQyxXQUFXO0lBQ2xCLG9CQUFvQjtJQUNwQix5QkFBeUI7Q0FDMUIsQ0FBQztBQUVGLE1BQU0scUJBQXFCLEdBQWtCO0lBQzNDLHVCQUF1QjtJQUN2Qix1QkFBdUI7SUFDdkIsMEJBQTBCO0lBQzFCLGlDQUFpQztJQUNqQywyREFBMkQ7SUFDM0QsaUNBQWlDO0lBQ2pDLG1DQUFtQztJQUNuQyxvQ0FBb0M7SUFDcEMsNEJBQTRCO0lBQzVCLGlDQUFpQztJQUNqQyw0QkFBNEI7SUFDNUIscURBQXFEO0lBQ3JELG9EQUFvRDtJQUNwRCxvREFBb0Q7SUFDcEQsbURBQW1EO0lBQ25ELDZCQUE2QjtJQUM3Qjs7Ozs7T0FLRztJQUNILDhCQUE4QjtJQUM5Qiw4QkFBOEI7SUFDOUIsNERBQTREO0lBQzVELDBEQUEwRDtDQUMzRCxDQUFDO0FBRUYsTUFBYSwwQkFBMEI7SUFHckMsWUFBWSxhQUFtQztRQUM3QyxJQUFJLENBQUMsTUFBTSxHQUFHLGFBQWEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVELGtCQUFrQixDQUFDLEtBQTRCO1FBQzdDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM3RCxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FDZiw2QkFBNkIsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLG9CQUFvQixDQUN2RSxDQUFDO1lBQ0YsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUVELElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUMzRCxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FDZixxQkFBcUIsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLG9CQUFvQixDQUNoRSxDQUFDO1lBQ0YsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUNGO0FBeEJELGdFQXdCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9tZW50b0xvZ2dlciwgTW9tZW50b0xvZ2dlckZhY3Rvcnl9IGZyb20gJy4uLy4uLyc7XG5pbXBvcnQge1N0YXR1c30gZnJvbSAnQGdycGMvZ3JwYy1qcy9idWlsZC9zcmMvY29uc3RhbnRzJztcbmltcG9ydCB7XG4gIEVsaWdpYmlsaXR5U3RyYXRlZ3ksXG4gIEVsaWdpYmxlRm9yUmV0cnlQcm9wcyxcbn0gZnJvbSAnLi9lbGlnaWJpbGl0eS1zdHJhdGVneSc7XG5cbmNvbnN0IHJldHJ5YWJsZUdycGNTdGF0dXNDb2RlczogQXJyYXk8U3RhdHVzPiA9IFtcbiAgLy8gaW5jbHVkaW5nIGFsbCB0aGUgc3RhdHVzIGNvZGVzIGZvciByZWZlcmVuY2UsIGJ1dFxuICAvLyBjb21tZW50aW5nIG91dCB0aGUgb25lcyB3ZSBkb24ndCB3YW50IHRvIHJldHJ5IG9uIGZvciBub3cuXG5cbiAgLy8gU3RhdHVzLk9LLFxuICAvLyBTdGF0dXMuQ0FOQ0VMTEVELFxuICAvLyBTdGF0dXMuVU5LTk9XTixcbiAgLy8gU3RhdHVzLklOVkFMSURfQVJHVU1FTlQsXG4gIC8vIFN0YXR1cy5ERUFETElORV9FWENFRURFRCxcbiAgLy8gU3RhdHVzLk5PVF9GT1VORCxcbiAgLy8gU3RhdHVzLkFMUkVBRFlfRVhJU1RTLFxuICAvLyBTdGF0dXMuUEVSTUlTU0lPTl9ERU5JRUQsXG4gIC8vIFN0YXR1cy5SRVNPVVJDRV9FWEhBVVNURUQsXG4gIC8vIFN0YXR1cy5GQUlMRURfUFJFQ09ORElUSU9OLFxuICAvLyBTdGF0dXMuQUJPUlRFRCxcbiAgLy8gU3RhdHVzLk9VVF9PRl9SQU5HRSxcbiAgLy8gU3RhdHVzLlVOSU1QTEVNRU5URUQsXG4gIFN0YXR1cy5JTlRFUk5BTCxcbiAgU3RhdHVzLlVOQVZBSUxBQkxFLFxuICAvLyBTdGF0dXMuREFUQV9MT1NTLFxuICAvLyBTdGF0dXMuVU5BVVRIRU5USUNBVEVEXG5dO1xuXG5jb25zdCByZXRyeWFibGVSZXF1ZXN0VHlwZXM6IEFycmF5PHN0cmluZz4gPSBbXG4gICcvY2FjaGVfY2xpZW50LlNjcy9TZXQnLFxuICAnL2NhY2hlX2NsaWVudC5TY3MvR2V0JyxcbiAgJy9jYWNoZV9jbGllbnQuU2NzL0RlbGV0ZScsXG4gICcvY2FjaGVfY2xpZW50LlNjcy9EaWN0aW9uYXJ5U2V0JyxcbiAgLy8gbm90IGlkZW1wb3RlbnQ6ICcvY2FjaGVfY2xpZW50LlNjcy9EaWN0aW9uYXJ5SW5jcmVtZW50JyxcbiAgJy9jYWNoZV9jbGllbnQuU2NzL0RpY3Rpb25hcnlHZXQnLFxuICAnL2NhY2hlX2NsaWVudC5TY3MvRGljdGlvbmFyeUZldGNoJyxcbiAgJy9jYWNoZV9jbGllbnQuU2NzL0RpY3Rpb25hcnlEZWxldGUnLFxuICAnL2NhY2hlX2NsaWVudC5TY3MvU2V0VW5pb24nLFxuICAnL2NhY2hlX2NsaWVudC5TY3MvU2V0RGlmZmVyZW5jZScsXG4gICcvY2FjaGVfY2xpZW50LlNjcy9TZXRGZXRjaCcsXG4gIC8vIG5vdCBpZGVtcG90ZW50OiAnL2NhY2hlX2NsaWVudC5TY3MvTGlzdFB1c2hGcm9udCcsXG4gIC8vIG5vdCBpZGVtcG90ZW50OiAnL2NhY2hlX2NsaWVudC5TY3MvTGlzdFB1c2hCYWNrJyxcbiAgLy8gbm90IGlkZW1wb3RlbnQ6ICcvY2FjaGVfY2xpZW50LlNjcy9MaXN0UG9wRnJvbnQnLFxuICAvLyBub3QgaWRlbXBvdGVudDogJy9jYWNoZV9jbGllbnQuU2NzL0xpc3RQb3BCYWNrJyxcbiAgJy9jYWNoZV9jbGllbnQuU2NzL0xpc3RGZXRjaCcsXG4gIC8qXG4gICAqICBXYXJuaW5nOiBpbiB0aGUgZnV0dXJlLCB0aGlzIG1heSBub3QgYmUgaWRlbXBvdGVudFxuICAgKiAgQ3VycmVudGx5IGl0IHN1cHBvcnRzIHJlbW92aW5nIGFsbCBvY2N1cnJlbmNlcyBvZiBhIHZhbHVlLlxuICAgKiAgSW4gdGhlIGZ1dHVyZSwgd2UgbWF5IGFsc28gYWRkIFwidGhlIGZpcnN0L2xhc3QgTiBvY2N1cnJlbmNlcyBvZiBhIHZhbHVlXCIuXG4gICAqICBJbiB0aGUgbGF0dGVyIGNhc2UgaXQgaXMgbm90IGlkZW1wb3RlbnQuXG4gICAqL1xuICAnL2NhY2hlX2NsaWVudC5TY3MvTGlzdFJlbW92ZScsXG4gICcvY2FjaGVfY2xpZW50LlNjcy9MaXN0TGVuZ3RoJyxcbiAgLy8gbm90IGlkZW1wb3RlbnQ6ICcvY2FjaGVfY2xpZW50LlNjcy9MaXN0Q29uY2F0ZW5hdGVGcm9udCcsXG4gIC8vIG5vdCBpZGVtcG90ZW50OiAnL2NhY2hlX2NsaWVudC5TY3MvTGlzdENvbmNhdGVuYXRlQmFjaydcbl07XG5cbmV4cG9ydCBjbGFzcyBEZWZhdWx0RWxpZ2liaWxpdHlTdHJhdGVneSBpbXBsZW1lbnRzIEVsaWdpYmlsaXR5U3RyYXRlZ3kge1xuICBwcml2YXRlIHJlYWRvbmx5IGxvZ2dlcjogTW9tZW50b0xvZ2dlcjtcblxuICBjb25zdHJ1Y3Rvcihsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeSkge1xuICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyRmFjdG9yeS5nZXRMb2dnZXIodGhpcyk7XG4gIH1cblxuICBpc0VsaWdpYmxlRm9yUmV0cnkocHJvcHM6IEVsaWdpYmxlRm9yUmV0cnlQcm9wcyk6IGJvb2xlYW4ge1xuICAgIGlmICghcmV0cnlhYmxlR3JwY1N0YXR1c0NvZGVzLmluY2x1ZGVzKHByb3BzLmdycGNTdGF0dXMuY29kZSkpIHtcbiAgICAgIHRoaXMubG9nZ2VyLmRlYnVnKFxuICAgICAgICBgUmVzcG9uc2Ugd2l0aCBzdGF0dXMgY29kZSAke3Byb3BzLmdycGNTdGF0dXMuY29kZX0gaXMgbm90IHJldHJ5YWJsZS5gXG4gICAgICApO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICghcmV0cnlhYmxlUmVxdWVzdFR5cGVzLmluY2x1ZGVzKHByb3BzLmdycGNSZXF1ZXN0LnBhdGgpKSB7XG4gICAgICB0aGlzLmxvZ2dlci5kZWJ1ZyhcbiAgICAgICAgYFJlcXVlc3Qgd2l0aCB0eXBlICR7cHJvcHMuZ3JwY1JlcXVlc3QucGF0aH0gaXMgbm90IHJldHJ5YWJsZS5gXG4gICAgICApO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/retry/fixed-count-retry-strategy.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FixedCountRetryStrategy = void 0;
const default_eligibility_strategy_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/retry/default-eligibility-strategy.js [app-route] (ecmascript)");
class FixedCountRetryStrategy {
    constructor(props){
        var _a;
        this.logger = props.loggerFactory.getLogger(this);
        this.eligibilityStrategy = (_a = props.eligibilityStrategy) !== null && _a !== void 0 ? _a : new default_eligibility_strategy_1.DefaultEligibilityStrategy(props.loggerFactory);
        this.maxAttempts = props.maxAttempts;
    }
    determineWhenToRetryRequest(props) {
        this.logger.debug(`Determining whether request is eligible for retry; status code: ${props.grpcStatus.code}, request type: ${props.grpcRequest.path}, attemptNumber: ${props.attemptNumber}, maxAttempts: ${this.maxAttempts}`);
        if (!this.eligibilityStrategy.isEligibleForRetry(props)) {
            // null means do not retry
            return null;
        }
        if (props.attemptNumber > this.maxAttempts) {
            this.logger.debug(`Exceeded max attempt count (${this.maxAttempts})`);
            // null means do not retry
            return null;
        }
        this.logger.debug(`Request is eligible for retry (attempt ${props.attemptNumber} of ${this.maxAttempts}, retrying immediately.`);
        // 0 means retry immediately
        return 0;
    }
}
exports.FixedCountRetryStrategy = FixedCountRetryStrategy; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZml4ZWQtY291bnQtcmV0cnktc3RyYXRlZ3kuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29uZmlnL3JldHJ5L2ZpeGVkLWNvdW50LXJldHJ5LXN0cmF0ZWd5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUtBLGlGQUEwRTtBQVMxRSxNQUFhLHVCQUF1QjtJQUtsQyxZQUFZLEtBQW1DOztRQUM3QyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xELElBQUksQ0FBQyxtQkFBbUI7WUFDdEIsTUFBQSxLQUFLLENBQUMsbUJBQW1CLG1DQUN6QixJQUFJLHlEQUEwQixDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQyxXQUFXLENBQUM7SUFDdkMsQ0FBQztJQUVELDJCQUEyQixDQUN6QixLQUF1QztRQUV2QyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FDZixtRUFBbUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLG1CQUFtQixLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksb0JBQW9CLEtBQUssQ0FBQyxhQUFhLGtCQUFrQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQzdNLENBQUM7UUFDRixJQUFJLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3ZELDBCQUEwQjtZQUMxQixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsSUFBSSxLQUFLLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDMUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsK0JBQStCLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO1lBQ3RFLDBCQUEwQjtZQUMxQixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQ2YsMENBQTBDLEtBQUssQ0FBQyxhQUFhLE9BQU8sSUFBSSxDQUFDLFdBQVcseUJBQXlCLENBQzlHLENBQUM7UUFDRiw0QkFBNEI7UUFDNUIsT0FBTyxDQUFDLENBQUM7SUFDWCxDQUFDO0NBQ0Y7QUFsQ0QsMERBa0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGV0ZXJtaW5ld2hlblRvUmV0cnlSZXF1ZXN0UHJvcHMsXG4gIFJldHJ5U3RyYXRlZ3ksXG59IGZyb20gJy4vcmV0cnktc3RyYXRlZ3knO1xuaW1wb3J0IHtFbGlnaWJpbGl0eVN0cmF0ZWd5fSBmcm9tICcuL2VsaWdpYmlsaXR5LXN0cmF0ZWd5JztcbmltcG9ydCB7RGVmYXVsdEVsaWdpYmlsaXR5U3RyYXRlZ3l9IGZyb20gJy4vZGVmYXVsdC1lbGlnaWJpbGl0eS1zdHJhdGVneSc7XG5pbXBvcnQge01vbWVudG9Mb2dnZXJGYWN0b3J5LCBNb21lbnRvTG9nZ2VyfSBmcm9tICcuLi8uLi8nO1xuXG5leHBvcnQgaW50ZXJmYWNlIEZpeGVkQ291bnRSZXRyeVN0cmF0ZWd5UHJvcHMge1xuICBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeTtcbiAgbWF4QXR0ZW1wdHM6IG51bWJlcjtcbiAgZWxpZ2liaWxpdHlTdHJhdGVneT86IEVsaWdpYmlsaXR5U3RyYXRlZ3k7XG59XG5cbmV4cG9ydCBjbGFzcyBGaXhlZENvdW50UmV0cnlTdHJhdGVneSBpbXBsZW1lbnRzIFJldHJ5U3RyYXRlZ3kge1xuICBwcml2YXRlIHJlYWRvbmx5IGxvZ2dlcjogTW9tZW50b0xvZ2dlcjtcbiAgcHJpdmF0ZSByZWFkb25seSBlbGlnaWJpbGl0eVN0cmF0ZWd5OiBFbGlnaWJpbGl0eVN0cmF0ZWd5O1xuICBwcml2YXRlIHJlYWRvbmx5IG1heEF0dGVtcHRzOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IocHJvcHM6IEZpeGVkQ291bnRSZXRyeVN0cmF0ZWd5UHJvcHMpIHtcbiAgICB0aGlzLmxvZ2dlciA9IHByb3BzLmxvZ2dlckZhY3RvcnkuZ2V0TG9nZ2VyKHRoaXMpO1xuICAgIHRoaXMuZWxpZ2liaWxpdHlTdHJhdGVneSA9XG4gICAgICBwcm9wcy5lbGlnaWJpbGl0eVN0cmF0ZWd5ID8/XG4gICAgICBuZXcgRGVmYXVsdEVsaWdpYmlsaXR5U3RyYXRlZ3kocHJvcHMubG9nZ2VyRmFjdG9yeSk7XG4gICAgdGhpcy5tYXhBdHRlbXB0cyA9IHByb3BzLm1heEF0dGVtcHRzO1xuICB9XG5cbiAgZGV0ZXJtaW5lV2hlblRvUmV0cnlSZXF1ZXN0KFxuICAgIHByb3BzOiBEZXRlcm1pbmV3aGVuVG9SZXRyeVJlcXVlc3RQcm9wc1xuICApOiBudW1iZXIgfCBudWxsIHtcbiAgICB0aGlzLmxvZ2dlci5kZWJ1ZyhcbiAgICAgIGBEZXRlcm1pbmluZyB3aGV0aGVyIHJlcXVlc3QgaXMgZWxpZ2libGUgZm9yIHJldHJ5OyBzdGF0dXMgY29kZTogJHtwcm9wcy5ncnBjU3RhdHVzLmNvZGV9LCByZXF1ZXN0IHR5cGU6ICR7cHJvcHMuZ3JwY1JlcXVlc3QucGF0aH0sIGF0dGVtcHROdW1iZXI6ICR7cHJvcHMuYXR0ZW1wdE51bWJlcn0sIG1heEF0dGVtcHRzOiAke3RoaXMubWF4QXR0ZW1wdHN9YFxuICAgICk7XG4gICAgaWYgKCF0aGlzLmVsaWdpYmlsaXR5U3RyYXRlZ3kuaXNFbGlnaWJsZUZvclJldHJ5KHByb3BzKSkge1xuICAgICAgLy8gbnVsbCBtZWFucyBkbyBub3QgcmV0cnlcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBpZiAocHJvcHMuYXR0ZW1wdE51bWJlciA+IHRoaXMubWF4QXR0ZW1wdHMpIHtcbiAgICAgIHRoaXMubG9nZ2VyLmRlYnVnKGBFeGNlZWRlZCBtYXggYXR0ZW1wdCBjb3VudCAoJHt0aGlzLm1heEF0dGVtcHRzfSlgKTtcbiAgICAgIC8vIG51bGwgbWVhbnMgZG8gbm90IHJldHJ5XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgdGhpcy5sb2dnZXIuZGVidWcoXG4gICAgICBgUmVxdWVzdCBpcyBlbGlnaWJsZSBmb3IgcmV0cnkgKGF0dGVtcHQgJHtwcm9wcy5hdHRlbXB0TnVtYmVyfSBvZiAke3RoaXMubWF4QXR0ZW1wdHN9LCByZXRyeWluZyBpbW1lZGlhdGVseS5gXG4gICAgKTtcbiAgICAvLyAwIG1lYW5zIHJldHJ5IGltbWVkaWF0ZWx5XG4gICAgcmV0dXJuIDA7XG4gIH1cbn1cbiJdfQ==

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/logging/default-momento-logger.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DefaultMomentoLogger = exports.DefaultMomentoLoggerFactory = exports.DefaultMomentoLoggerLevel = void 0;
const printf = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/internal/vendor/printf/printf.js [app-route] (ecmascript)");
var DefaultMomentoLoggerLevel;
(function(DefaultMomentoLoggerLevel) {
    DefaultMomentoLoggerLevel[DefaultMomentoLoggerLevel["TRACE"] = 5] = "TRACE";
    DefaultMomentoLoggerLevel[DefaultMomentoLoggerLevel["DEBUG"] = 10] = "DEBUG";
    DefaultMomentoLoggerLevel[DefaultMomentoLoggerLevel["INFO"] = 20] = "INFO";
    DefaultMomentoLoggerLevel[DefaultMomentoLoggerLevel["WARN"] = 30] = "WARN";
    DefaultMomentoLoggerLevel[DefaultMomentoLoggerLevel["ERROR"] = 40] = "ERROR";
})(DefaultMomentoLoggerLevel = exports.DefaultMomentoLoggerLevel || (exports.DefaultMomentoLoggerLevel = {}));
class DefaultMomentoLoggerFactory {
    constructor(level = DefaultMomentoLoggerLevel.INFO){
        this.level = level;
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    getLogger(loggerName) {
        return new DefaultMomentoLogger(loggerName, this.level);
    }
}
exports.DefaultMomentoLoggerFactory = DefaultMomentoLoggerFactory;
class DefaultMomentoLogger {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    constructor(loggerName, level){
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        this.loggerName = typeof loggerName === 'string' || loggerName instanceof String ? loggerName : loggerName.constructor.name;
        this.level = level;
    }
    trace(msg, ...args) {
        if (this.level > DefaultMomentoLoggerLevel.TRACE) {
            return;
        }
        this.outputMessage(console.log, DefaultMomentoLoggerLevel.TRACE, msg, args);
    }
    debug(msg, ...args) {
        if (this.level > DefaultMomentoLoggerLevel.DEBUG) {
            return;
        }
        this.outputMessage(console.log, DefaultMomentoLoggerLevel.DEBUG, msg, args);
    }
    info(msg, ...args) {
        if (this.level > DefaultMomentoLoggerLevel.INFO) {
            return;
        }
        this.outputMessage(console.log, DefaultMomentoLoggerLevel.INFO, msg, args);
    }
    warn(msg, ...args) {
        if (this.level > DefaultMomentoLoggerLevel.WARN) {
            return;
        }
        this.outputMessage(console.warn, DefaultMomentoLoggerLevel.WARN, msg, args);
    }
    error(msg, ...args) {
        if (this.level > DefaultMomentoLoggerLevel.ERROR) {
            return;
        }
        this.outputMessage(console.error, DefaultMomentoLoggerLevel.ERROR, msg, args);
    }
    outputMessage(outputFn, level, msg, args) {
        outputFn(printf('[%s] %s (Momento: %s): %s', new Date().toISOString(), DefaultMomentoLoggerLevel[level], this.loggerName, printf(msg, ...args)));
    }
}
exports.DefaultMomentoLogger = DefaultMomentoLogger; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1tb21lbnRvLWxvZ2dlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb25maWcvbG9nZ2luZy9kZWZhdWx0LW1vbWVudG8tbG9nZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUlBLDhEQUErRDtBQUUvRCxJQUFZLHlCQU1YO0FBTkQsV0FBWSx5QkFBeUI7SUFDbkMsMkVBQVMsQ0FBQTtJQUNULDRFQUFVLENBQUE7SUFDViwwRUFBUyxDQUFBO0lBQ1QsMEVBQVMsQ0FBQTtJQUNULDRFQUFVLENBQUE7QUFDWixDQUFDLEVBTlcseUJBQXlCLEdBQXpCLGlDQUF5QixLQUF6QixpQ0FBeUIsUUFNcEM7QUFFRCxNQUFhLDJCQUEyQjtJQUV0QyxZQUNFLFFBQW1DLHlCQUF5QixDQUFDLElBQUk7UUFFakUsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDckIsQ0FBQztJQUVELDhEQUE4RDtJQUM5RCxTQUFTLENBQUMsVUFBd0I7UUFDaEMsT0FBTyxJQUFJLG9CQUFvQixDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDMUQsQ0FBQztDQUNGO0FBWkQsa0VBWUM7QUFFRCxNQUFhLG9CQUFvQjtJQUcvQiw4REFBOEQ7SUFDOUQsWUFBWSxVQUF3QixFQUFFLEtBQWdDO1FBQ3BFLG1FQUFtRTtRQUNuRSxJQUFJLENBQUMsVUFBVTtZQUNiLE9BQU8sVUFBVSxLQUFLLFFBQVEsSUFBSSxVQUFVLFlBQVksTUFBTTtnQkFDNUQsQ0FBQyxDQUFDLFVBQVU7Z0JBQ1osQ0FBQyxDQUFDLHNFQUFzRTtvQkFDdEUsVUFBVSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUM7UUFDbEMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDckIsQ0FBQztJQUVELEtBQUssQ0FBQyxHQUFXLEVBQUUsR0FBRyxJQUFlO1FBQ25DLElBQUksSUFBSSxDQUFDLEtBQUssR0FBRyx5QkFBeUIsQ0FBQyxLQUFLLEVBQUU7WUFDaEQsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLHlCQUF5QixDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDOUUsQ0FBQztJQUVELEtBQUssQ0FBQyxHQUFXLEVBQUUsR0FBRyxJQUFlO1FBQ25DLElBQUksSUFBSSxDQUFDLEtBQUssR0FBRyx5QkFBeUIsQ0FBQyxLQUFLLEVBQUU7WUFDaEQsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLHlCQUF5QixDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDOUUsQ0FBQztJQUVELElBQUksQ0FBQyxHQUFXLEVBQUUsR0FBRyxJQUFlO1FBQ2xDLElBQUksSUFBSSxDQUFDLEtBQUssR0FBRyx5QkFBeUIsQ0FBQyxJQUFJLEVBQUU7WUFDL0MsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLHlCQUF5QixDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDN0UsQ0FBQztJQUVELElBQUksQ0FBQyxHQUFXLEVBQUUsR0FBRyxJQUFlO1FBQ2xDLElBQUksSUFBSSxDQUFDLEtBQUssR0FBRyx5QkFBeUIsQ0FBQyxJQUFJLEVBQUU7WUFDL0MsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLHlCQUF5QixDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDOUUsQ0FBQztJQUVELEtBQUssQ0FBQyxHQUFXLEVBQUUsR0FBRyxJQUFlO1FBQ25DLElBQUksSUFBSSxDQUFDLEtBQUssR0FBRyx5QkFBeUIsQ0FBQyxLQUFLLEVBQUU7WUFDaEQsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLGFBQWEsQ0FDaEIsT0FBTyxDQUFDLEtBQUssRUFDYix5QkFBeUIsQ0FBQyxLQUFLLEVBQy9CLEdBQUcsRUFDSCxJQUFJLENBQ0wsQ0FBQztJQUNKLENBQUM7SUFFTyxhQUFhLENBQ25CLFFBQWtDLEVBQ2xDLEtBQWdDLEVBQ2hDLEdBQVcsRUFDWCxJQUFlO1FBRWYsUUFBUSxDQUNOLE1BQU0sQ0FDSiwyQkFBMkIsRUFDM0IsSUFBSSxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsRUFDeEIseUJBQXlCLENBQUMsS0FBSyxDQUFDLEVBQ2hDLElBQUksQ0FBQyxVQUFVLEVBQ2YsTUFBTSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUNyQixDQUNGLENBQUM7SUFDSixDQUFDO0NBQ0Y7QUF0RUQsb0RBc0VDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgTW9tZW50b0xvZ2dlcixcbiAgTW9tZW50b0xvZ2dlckZhY3RvcnksXG59IGZyb20gJ0Bnb21vbWVudG8vc2RrLWNvcmUvZGlzdC9zcmMvY29uZmlnL2xvZ2dpbmcvbW9tZW50by1sb2dnZXInO1xuaW1wb3J0IHByaW50ZiA9IHJlcXVpcmUoJy4uLy4uL2ludGVybmFsL3ZlbmRvci9wcmludGYvcHJpbnRmJyk7XG5cbmV4cG9ydCBlbnVtIERlZmF1bHRNb21lbnRvTG9nZ2VyTGV2ZWwge1xuICBUUkFDRSA9IDUsXG4gIERFQlVHID0gMTAsXG4gIElORk8gPSAyMCxcbiAgV0FSTiA9IDMwLFxuICBFUlJPUiA9IDQwLFxufVxuXG5leHBvcnQgY2xhc3MgRGVmYXVsdE1vbWVudG9Mb2dnZXJGYWN0b3J5IGltcGxlbWVudHMgTW9tZW50b0xvZ2dlckZhY3Rvcnkge1xuICBwcml2YXRlIHJlYWRvbmx5IGxldmVsOiBEZWZhdWx0TW9tZW50b0xvZ2dlckxldmVsO1xuICBjb25zdHJ1Y3RvcihcbiAgICBsZXZlbDogRGVmYXVsdE1vbWVudG9Mb2dnZXJMZXZlbCA9IERlZmF1bHRNb21lbnRvTG9nZ2VyTGV2ZWwuSU5GT1xuICApIHtcbiAgICB0aGlzLmxldmVsID0gbGV2ZWw7XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICBnZXRMb2dnZXIobG9nZ2VyTmFtZTogc3RyaW5nIHwgYW55KTogTW9tZW50b0xvZ2dlciB7XG4gICAgcmV0dXJuIG5ldyBEZWZhdWx0TW9tZW50b0xvZ2dlcihsb2dnZXJOYW1lLCB0aGlzLmxldmVsKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgRGVmYXVsdE1vbWVudG9Mb2dnZXIgaW1wbGVtZW50cyBNb21lbnRvTG9nZ2VyIHtcbiAgcHJpdmF0ZSByZWFkb25seSBsb2dnZXJOYW1lOiBzdHJpbmc7XG4gIHByaXZhdGUgcmVhZG9ubHkgbGV2ZWw6IERlZmF1bHRNb21lbnRvTG9nZ2VyTGV2ZWw7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gIGNvbnN0cnVjdG9yKGxvZ2dlck5hbWU6IHN0cmluZyB8IGFueSwgbGV2ZWw6IERlZmF1bHRNb21lbnRvTG9nZ2VyTGV2ZWwpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1hc3NpZ25tZW50XG4gICAgdGhpcy5sb2dnZXJOYW1lID1cbiAgICAgIHR5cGVvZiBsb2dnZXJOYW1lID09PSAnc3RyaW5nJyB8fCBsb2dnZXJOYW1lIGluc3RhbmNlb2YgU3RyaW5nXG4gICAgICAgID8gbG9nZ2VyTmFtZVxuICAgICAgICA6IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgICAgICAgICBsb2dnZXJOYW1lLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgdGhpcy5sZXZlbCA9IGxldmVsO1xuICB9XG5cbiAgdHJhY2UobXNnOiBzdHJpbmcsIC4uLmFyZ3M6IHVua25vd25bXSk6IHZvaWQge1xuICAgIGlmICh0aGlzLmxldmVsID4gRGVmYXVsdE1vbWVudG9Mb2dnZXJMZXZlbC5UUkFDRSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLm91dHB1dE1lc3NhZ2UoY29uc29sZS5sb2csIERlZmF1bHRNb21lbnRvTG9nZ2VyTGV2ZWwuVFJBQ0UsIG1zZywgYXJncyk7XG4gIH1cblxuICBkZWJ1Zyhtc2c6IHN0cmluZywgLi4uYXJnczogdW5rbm93bltdKTogdm9pZCB7XG4gICAgaWYgKHRoaXMubGV2ZWwgPiBEZWZhdWx0TW9tZW50b0xvZ2dlckxldmVsLkRFQlVHKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMub3V0cHV0TWVzc2FnZShjb25zb2xlLmxvZywgRGVmYXVsdE1vbWVudG9Mb2dnZXJMZXZlbC5ERUJVRywgbXNnLCBhcmdzKTtcbiAgfVxuXG4gIGluZm8obXNnOiBzdHJpbmcsIC4uLmFyZ3M6IHVua25vd25bXSk6IHZvaWQge1xuICAgIGlmICh0aGlzLmxldmVsID4gRGVmYXVsdE1vbWVudG9Mb2dnZXJMZXZlbC5JTkZPKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMub3V0cHV0TWVzc2FnZShjb25zb2xlLmxvZywgRGVmYXVsdE1vbWVudG9Mb2dnZXJMZXZlbC5JTkZPLCBtc2csIGFyZ3MpO1xuICB9XG5cbiAgd2Fybihtc2c6IHN0cmluZywgLi4uYXJnczogdW5rbm93bltdKTogdm9pZCB7XG4gICAgaWYgKHRoaXMubGV2ZWwgPiBEZWZhdWx0TW9tZW50b0xvZ2dlckxldmVsLldBUk4pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5vdXRwdXRNZXNzYWdlKGNvbnNvbGUud2FybiwgRGVmYXVsdE1vbWVudG9Mb2dnZXJMZXZlbC5XQVJOLCBtc2csIGFyZ3MpO1xuICB9XG5cbiAgZXJyb3IobXNnOiBzdHJpbmcsIC4uLmFyZ3M6IHVua25vd25bXSk6IHZvaWQge1xuICAgIGlmICh0aGlzLmxldmVsID4gRGVmYXVsdE1vbWVudG9Mb2dnZXJMZXZlbC5FUlJPUikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLm91dHB1dE1lc3NhZ2UoXG4gICAgICBjb25zb2xlLmVycm9yLFxuICAgICAgRGVmYXVsdE1vbWVudG9Mb2dnZXJMZXZlbC5FUlJPUixcbiAgICAgIG1zZyxcbiAgICAgIGFyZ3NcbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBvdXRwdXRNZXNzYWdlKFxuICAgIG91dHB1dEZuOiAob3V0cHV0OiBzdHJpbmcpID0+IHZvaWQsXG4gICAgbGV2ZWw6IERlZmF1bHRNb21lbnRvTG9nZ2VyTGV2ZWwsXG4gICAgbXNnOiBzdHJpbmcsXG4gICAgYXJnczogdW5rbm93bltdXG4gICkge1xuICAgIG91dHB1dEZuKFxuICAgICAgcHJpbnRmKFxuICAgICAgICAnWyVzXSAlcyAoTW9tZW50bzogJXMpOiAlcycsXG4gICAgICAgIG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgRGVmYXVsdE1vbWVudG9Mb2dnZXJMZXZlbFtsZXZlbF0sXG4gICAgICAgIHRoaXMubG9nZ2VyTmFtZSxcbiAgICAgICAgcHJpbnRmKG1zZywgLi4uYXJncylcbiAgICAgIClcbiAgICApO1xuICB9XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/configurations.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.InRegion = exports.Lambda = exports.Laptop = void 0;
const configuration_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/configuration.js [app-route] (ecmascript)");
const fixed_count_retry_strategy_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/retry/fixed-count-retry-strategy.js [app-route] (ecmascript)");
const sdk_core_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk-core/dist/src/index.js [app-route] (ecmascript)");
const __1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/index.js [app-route] (ecmascript)");
const default_momento_logger_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/logging/default-momento-logger.js [app-route] (ecmascript)");
// 4 minutes.  We want to remain comfortably underneath the idle timeout for AWS NLB, which is 350s.
const defaultMaxIdleMillis = 4 * 60 * 1000;
const defaultMaxSessionMemoryMb = 256;
const defaultLoggerFactory = new default_momento_logger_1.DefaultMomentoLoggerFactory();
const defaultMiddlewares = [];
function defaultRetryStrategy(loggerFactory) {
    return new fixed_count_retry_strategy_1.FixedCountRetryStrategy({
        loggerFactory: loggerFactory,
        maxAttempts: 3
    });
}
/**
 * Laptop config provides defaults suitable for a medium-to-high-latency dev environment.  Permissive timeouts, retries, and
 * relaxed latency and throughput targets.
 * @export
 * @class Laptop
 */ class Laptop extends configuration_1.CacheConfiguration {
    /**
     * Provides the latest recommended configuration for a laptop development environment.  NOTE: this configuration may
     * change in future releases to take advantage of improvements we identify for default configurations.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {CacheConfiguration}
     */ static latest(loggerFactory = defaultLoggerFactory) {
        return Laptop.v1(loggerFactory);
    }
    /**
     * Provides v1 recommended configuration for a laptop development environment.  This configuration is guaranteed not
     * to change in future releases of the Momento node.js SDK.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {CacheConfiguration}
     */ static v1(loggerFactory = defaultLoggerFactory) {
        const deadlineMillis = 5000;
        const grpcConfig = new __1.StaticGrpcConfiguration({
            deadlineMillis: deadlineMillis,
            maxSessionMemoryMb: defaultMaxSessionMemoryMb,
            keepAlivePermitWithoutCalls: 1,
            keepAliveTimeMs: 5000,
            keepAliveTimeoutMs: 1000
        });
        const transportStrategy = new __1.StaticTransportStrategy({
            grpcConfiguration: grpcConfig,
            maxIdleMillis: defaultMaxIdleMillis
        });
        return new Laptop({
            loggerFactory: loggerFactory,
            retryStrategy: defaultRetryStrategy(loggerFactory),
            transportStrategy: transportStrategy,
            middlewares: defaultMiddlewares,
            throwOnErrors: false,
            readConcern: sdk_core_1.ReadConcern.BALANCED,
            compression: undefined
        });
    }
}
exports.Laptop = Laptop;
class Lambda extends configuration_1.CacheConfiguration {
    /**
     * Provides the latest recommended configuration for a lambda environment.  NOTE: this configuration may
     * change in future releases to take advantage of improvements we identify for default configurations.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {CacheConfiguration}
     */ static latest(loggerFactory = defaultLoggerFactory) {
        const deadlineMillis = 1100;
        const grpcConfig = new __1.StaticGrpcConfiguration({
            deadlineMillis: deadlineMillis,
            maxSessionMemoryMb: defaultMaxSessionMemoryMb,
            numClients: 1
        });
        const transportStrategy = new __1.StaticTransportStrategy({
            grpcConfiguration: grpcConfig,
            maxIdleMillis: defaultMaxIdleMillis
        });
        return new Lambda({
            loggerFactory: loggerFactory,
            retryStrategy: defaultRetryStrategy(loggerFactory),
            transportStrategy: transportStrategy,
            middlewares: defaultMiddlewares,
            throwOnErrors: false,
            readConcern: sdk_core_1.ReadConcern.BALANCED,
            compression: undefined
        });
    }
}
exports.Lambda = Lambda;
class InRegionDefault extends configuration_1.CacheConfiguration {
    /**
     * Provides the latest recommended configuration for a typical in-region environment.  NOTE: this configuration may
     * change in future releases to take advantage of improvements we identify for default configurations.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {CacheConfiguration}
     */ static latest(loggerFactory = defaultLoggerFactory) {
        return InRegionDefault.v1(loggerFactory);
    }
    /**
     * Provides v1 recommended configuration for a typical in-region environment.  This configuration is guaranteed not
     * to change in future releases of the Momento node.js SDK.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {CacheConfiguration}
     */ static v1(loggerFactory = defaultLoggerFactory) {
        const deadlineMillis = 1100;
        const grpcConfig = new __1.StaticGrpcConfiguration({
            deadlineMillis: deadlineMillis,
            maxSessionMemoryMb: defaultMaxSessionMemoryMb,
            keepAlivePermitWithoutCalls: 1,
            keepAliveTimeMs: 5000,
            keepAliveTimeoutMs: 1000
        });
        const transportStrategy = new __1.StaticTransportStrategy({
            grpcConfiguration: grpcConfig,
            maxIdleMillis: defaultMaxIdleMillis
        });
        return new InRegionDefault({
            loggerFactory: loggerFactory,
            retryStrategy: defaultRetryStrategy(loggerFactory),
            transportStrategy: transportStrategy,
            middlewares: defaultMiddlewares,
            throwOnErrors: false,
            readConcern: sdk_core_1.ReadConcern.BALANCED,
            compression: undefined
        });
    }
}
class InRegionLowLatency extends configuration_1.CacheConfiguration {
    /**
     * Provides the latest recommended configuration for an in-region environment with aggressive low-latency requirements.
     * NOTE: this configuration may change in future releases to take advantage of improvements we identify for default
     * configurations.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {CacheConfiguration}
     */ static latest(loggerFactory = defaultLoggerFactory) {
        return InRegionLowLatency.v1(loggerFactory);
    }
    /**
     * Provides v1 recommended configuration for an in-region environment with aggressive low-latency requirements.
     * This configuration is guaranteed not to change in future releases of the Momento node.js SDK.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {CacheConfiguration}
     */ static v1(loggerFactory = defaultLoggerFactory) {
        const deadlineMillis = 500;
        const grpcConfig = new __1.StaticGrpcConfiguration({
            deadlineMillis: deadlineMillis,
            maxSessionMemoryMb: defaultMaxSessionMemoryMb,
            keepAlivePermitWithoutCalls: 1,
            keepAliveTimeMs: 5000,
            keepAliveTimeoutMs: 1000
        });
        const transportStrategy = new __1.StaticTransportStrategy({
            grpcConfiguration: grpcConfig,
            maxIdleMillis: defaultMaxIdleMillis
        });
        return new InRegionDefault({
            loggerFactory: loggerFactory,
            retryStrategy: defaultRetryStrategy(loggerFactory),
            transportStrategy: transportStrategy,
            middlewares: defaultMiddlewares,
            throwOnErrors: false,
            readConcern: sdk_core_1.ReadConcern.BALANCED,
            compression: undefined
        });
    }
}
/**
 * InRegion provides defaults suitable for an environment where your client is running in the same region as the Momento
 * service.  It has more aggressive timeouts and retry behavior than the Laptop config.
 * @export
 * @class InRegion
 */ class InRegion {
}
exports.InRegion = InRegion;
/**
 * This config prioritizes throughput and client resource utilization.  It has a slightly relaxed client-side timeout
 * setting to maximize throughput.
 * @type {InRegionDefault}
 */ InRegion.Default = InRegionDefault;
/**
 * This config prioritizes keeping p99.9 latencies as low as possible, potentially sacrificing
 * some throughput to achieve this.  It has a very aggressive client-side timeout.  Use this
 * configuration if the most important factor is to ensure that cache unavailability doesn't force
 * unacceptably high latencies for your own application.
 * @type {InRegionLowLatency}
 */ InRegion.LowLatency = InRegionLowLatency; //# sourceMappingURL=data:application/json;base64,

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/auth-client-configuration.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AuthClientConfiguration = void 0;
class AuthClientConfiguration {
    constructor(props){
        this.loggerFactory = props.loggerFactory;
    }
    getLoggerFactory() {
        return this.loggerFactory;
    }
}
exports.AuthClientConfiguration = AuthClientConfiguration; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1jbGllbnQtY29uZmlndXJhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb25maWcvYXV0aC1jbGllbnQtY29uZmlndXJhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFzQkEsTUFBYSx1QkFBdUI7SUFHbEMsWUFBWSxLQUFtQztRQUM3QyxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQyxhQUFhLENBQUM7SUFDM0MsQ0FBQztJQUVELGdCQUFnQjtRQUNkLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM1QixDQUFDO0NBQ0Y7QUFWRCwwREFVQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9tZW50b0xvZ2dlckZhY3Rvcnl9IGZyb20gJ0Bnb21vbWVudG8vc2RrLWNvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEF1dGhDbGllbnRDb25maWd1cmF0aW9uUHJvcHMge1xuICAvKipcbiAgICogQ29uZmlndXJlcyBsb2dnaW5nIHZlcmJvc2l0eSBhbmQgZm9ybWF0XG4gICAqL1xuICBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeTtcbn1cblxuLyoqXG4gKiBDb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIE1vbWVudG8gQ2FjaGVDbGllbnQuXG4gKlxuICogQGV4cG9ydFxuICogQGludGVyZmFjZSBDb25maWd1cmF0aW9uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQXV0aENvbmZpZ3VyYXRpb24ge1xuICAvKipcbiAgICogQHJldHVybnMge01vbWVudG9Mb2dnZXJGYWN0b3J5fSB0aGUgY3VycmVudCBjb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIGxvZ2dpbmcgdmVyYm9zaXR5IGFuZCBmb3JtYXRcbiAgICovXG4gIGdldExvZ2dlckZhY3RvcnkoKTogTW9tZW50b0xvZ2dlckZhY3Rvcnk7XG59XG5cbmV4cG9ydCBjbGFzcyBBdXRoQ2xpZW50Q29uZmlndXJhdGlvbiBpbXBsZW1lbnRzIEF1dGhDb25maWd1cmF0aW9uIHtcbiAgcHJpdmF0ZSByZWFkb25seSBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeTtcblxuICBjb25zdHJ1Y3Rvcihwcm9wczogQXV0aENsaWVudENvbmZpZ3VyYXRpb25Qcm9wcykge1xuICAgIHRoaXMubG9nZ2VyRmFjdG9yeSA9IHByb3BzLmxvZ2dlckZhY3Rvcnk7XG4gIH1cblxuICBnZXRMb2dnZXJGYWN0b3J5KCk6IE1vbWVudG9Mb2dnZXJGYWN0b3J5IHtcbiAgICByZXR1cm4gdGhpcy5sb2dnZXJGYWN0b3J5O1xuICB9XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/auth-client-configurations.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Default = void 0;
const auth_client_configuration_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/auth-client-configuration.js [app-route] (ecmascript)");
const default_momento_logger_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/logging/default-momento-logger.js [app-route] (ecmascript)");
const defaultLoggerFactory = new default_momento_logger_1.DefaultMomentoLoggerFactory();
/**
 * Laptop config provides defaults suitable for a medium-to-high-latency dev environment.  Permissive timeouts, retries, and
 * relaxed latency and throughput targets.
 * @export
 * @class Laptop
 */ class Default extends auth_client_configuration_1.AuthClientConfiguration {
    /**
     * Provides the latest recommended configuration for a laptop development environment.  NOTE: this configuration may
     * change in future releases to take advantage of improvements we identify for default configurations.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {CacheConfiguration}
     */ static latest(loggerFactory = defaultLoggerFactory) {
        return new auth_client_configuration_1.AuthClientConfiguration({
            loggerFactory: loggerFactory
        });
    }
}
exports.Default = Default; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1jbGllbnQtY29uZmlndXJhdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29uZmlnL2F1dGgtY2xpZW50LWNvbmZpZ3VyYXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDJFQUFvRTtBQUVwRSw2RUFBNkU7QUFFN0UsTUFBTSxvQkFBb0IsR0FDeEIsSUFBSSxvREFBMkIsRUFBRSxDQUFDO0FBRXBDOzs7OztHQUtHO0FBQ0gsTUFBYSxPQUFRLFNBQVEsbURBQXVCO0lBQ2xEOzs7OztPQUtHO0lBQ0gsTUFBTSxDQUFDLE1BQU0sQ0FDWCxnQkFBc0Msb0JBQW9CO1FBRTFELE9BQU8sSUFBSSxtREFBdUIsQ0FBQztZQUNqQyxhQUFhLEVBQUUsYUFBYTtTQUM3QixDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUFkRCwwQkFjQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXV0aENsaWVudENvbmZpZ3VyYXRpb259IGZyb20gJy4vYXV0aC1jbGllbnQtY29uZmlndXJhdGlvbic7XG5pbXBvcnQge01vbWVudG9Mb2dnZXJGYWN0b3J5fSBmcm9tICdAZ29tb21lbnRvL3Nkay1jb3JlJztcbmltcG9ydCB7RGVmYXVsdE1vbWVudG9Mb2dnZXJGYWN0b3J5fSBmcm9tICcuL2xvZ2dpbmcvZGVmYXVsdC1tb21lbnRvLWxvZ2dlcic7XG5cbmNvbnN0IGRlZmF1bHRMb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeSA9XG4gIG5ldyBEZWZhdWx0TW9tZW50b0xvZ2dlckZhY3RvcnkoKTtcblxuLyoqXG4gKiBMYXB0b3AgY29uZmlnIHByb3ZpZGVzIGRlZmF1bHRzIHN1aXRhYmxlIGZvciBhIG1lZGl1bS10by1oaWdoLWxhdGVuY3kgZGV2IGVudmlyb25tZW50LiAgUGVybWlzc2l2ZSB0aW1lb3V0cywgcmV0cmllcywgYW5kXG4gKiByZWxheGVkIGxhdGVuY3kgYW5kIHRocm91Z2hwdXQgdGFyZ2V0cy5cbiAqIEBleHBvcnRcbiAqIEBjbGFzcyBMYXB0b3BcbiAqL1xuZXhwb3J0IGNsYXNzIERlZmF1bHQgZXh0ZW5kcyBBdXRoQ2xpZW50Q29uZmlndXJhdGlvbiB7XG4gIC8qKlxuICAgKiBQcm92aWRlcyB0aGUgbGF0ZXN0IHJlY29tbWVuZGVkIGNvbmZpZ3VyYXRpb24gZm9yIGEgbGFwdG9wIGRldmVsb3BtZW50IGVudmlyb25tZW50LiAgTk9URTogdGhpcyBjb25maWd1cmF0aW9uIG1heVxuICAgKiBjaGFuZ2UgaW4gZnV0dXJlIHJlbGVhc2VzIHRvIHRha2UgYWR2YW50YWdlIG9mIGltcHJvdmVtZW50cyB3ZSBpZGVudGlmeSBmb3IgZGVmYXVsdCBjb25maWd1cmF0aW9ucy5cbiAgICogQHBhcmFtIHtNb21lbnRvTG9nZ2VyRmFjdG9yeX0gW2xvZ2dlckZhY3Rvcnk9ZGVmYXVsdExvZ2dlckZhY3RvcnldXG4gICAqIEByZXR1cm5zIHtDYWNoZUNvbmZpZ3VyYXRpb259XG4gICAqL1xuICBzdGF0aWMgbGF0ZXN0KFxuICAgIGxvZ2dlckZhY3Rvcnk6IE1vbWVudG9Mb2dnZXJGYWN0b3J5ID0gZGVmYXVsdExvZ2dlckZhY3RvcnlcbiAgKTogQXV0aENsaWVudENvbmZpZ3VyYXRpb24ge1xuICAgIHJldHVybiBuZXcgQXV0aENsaWVudENvbmZpZ3VyYXRpb24oe1xuICAgICAgbG9nZ2VyRmFjdG9yeTogbG9nZ2VyRmFjdG9yeSxcbiAgICB9KTtcbiAgfVxufVxuIl19

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/topic-configuration.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TopicClientConfiguration = void 0;
class TopicClientConfiguration {
    constructor(props){
        this.loggerFactory = props.loggerFactory;
        this.transportStrategy = props.transportStrategy;
        this.throwOnErrors = props.throwOnErrors;
    }
    getLoggerFactory() {
        return this.loggerFactory;
    }
    getTransportStrategy() {
        return this.transportStrategy;
    }
    withTransportStrategy(transportStrategy) {
        return new TopicClientConfiguration({
            loggerFactory: this.loggerFactory,
            transportStrategy: transportStrategy,
            throwOnErrors: this.throwOnErrors
        });
    }
    withNumConnections(numConnections) {
        return this.withTransportStrategy(this.getTransportStrategy().withGrpcConfig(this.getTransportStrategy().getGrpcConfig().withNumClients(numConnections)));
    }
    getThrowOnErrors() {
        return this.throwOnErrors;
    }
    withThrowOnErrors(throwOnErrors) {
        return new TopicClientConfiguration({
            loggerFactory: this.loggerFactory,
            transportStrategy: this.transportStrategy,
            throwOnErrors: throwOnErrors
        });
    }
}
exports.TopicClientConfiguration = TopicClientConfiguration; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9waWMtY29uZmlndXJhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb25maWcvdG9waWMtY29uZmlndXJhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFpRUEsTUFBYSx3QkFBd0I7SUFLbkMsWUFBWSxLQUE4QjtRQUN4QyxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQyxhQUFhLENBQUM7UUFDekMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQztRQUNqRCxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQyxhQUFhLENBQUM7SUFDM0MsQ0FBQztJQUVELGdCQUFnQjtRQUNkLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM1QixDQUFDO0lBRUQsb0JBQW9CO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDO0lBQ2hDLENBQUM7SUFFRCxxQkFBcUIsQ0FDbkIsaUJBQXlDO1FBRXpDLE9BQU8sSUFBSSx3QkFBd0IsQ0FBQztZQUNsQyxhQUFhLEVBQUUsSUFBSSxDQUFDLGFBQWE7WUFDakMsaUJBQWlCLEVBQUUsaUJBQWlCO1lBQ3BDLGFBQWEsRUFBRSxJQUFJLENBQUMsYUFBYTtTQUNsQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsa0JBQWtCLENBQUMsY0FBc0I7UUFDdkMsT0FBTyxJQUFJLENBQUMscUJBQXFCLENBQy9CLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLGNBQWMsQ0FDeEMsSUFBSSxDQUFDLG9CQUFvQixFQUFFO2FBQ3hCLGFBQWEsRUFBRTthQUNmLGNBQWMsQ0FBQyxjQUFjLENBQUMsQ0FDbEMsQ0FDRixDQUFDO0lBQ0osQ0FBQztJQUVELGdCQUFnQjtRQUNkLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM1QixDQUFDO0lBRUQsaUJBQWlCLENBQUMsYUFBc0I7UUFDdEMsT0FBTyxJQUFJLHdCQUF3QixDQUFDO1lBQ2xDLGFBQWEsRUFBRSxJQUFJLENBQUMsYUFBYTtZQUNqQyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1lBQ3pDLGFBQWEsRUFBRSxhQUFhO1NBQzdCLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQWxERCw0REFrREMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01vbWVudG9Mb2dnZXJGYWN0b3J5fSBmcm9tICdAZ29tb21lbnRvL3Nkay1jb3JlJztcbmltcG9ydCB7VG9waWNUcmFuc3BvcnRTdHJhdGVneX0gZnJvbSAnLi90cmFuc3BvcnQvdG9waWNzJztcblxuZXhwb3J0IGludGVyZmFjZSBUb3BpY0NvbmZpZ3VyYXRpb25Qcm9wcyB7XG4gIC8qKlxuICAgKiBDb25maWd1cmVzIGxvZ2dpbmcgdmVyYm9zaXR5IGFuZCBmb3JtYXRcbiAgICovXG4gIGxvZ2dlckZhY3Rvcnk6IE1vbWVudG9Mb2dnZXJGYWN0b3J5O1xuXG4gIC8qKlxuICAgKiBDb25maWd1cmVzIGxvdy1sZXZlbCBvcHRpb25zIGZvciBuZXR3b3JrIGludGVyYWN0aW9ucyB3aXRoIHRoZSBNb21lbnRvIHNlcnZpY2VcbiAgICovXG4gIHRyYW5zcG9ydFN0cmF0ZWd5OiBUb3BpY1RyYW5zcG9ydFN0cmF0ZWd5O1xuXG4gIC8qKlxuICAgKiBDb25maWd1cmVzIHdoZXRoZXIgdGhlIGNsaWVudCBzaG91bGQgcmV0dXJuIGEgTW9tZW50byBFcnJvciBvYmplY3Qgb3IgdGhyb3cgYW4gZXhjZXB0aW9uIHdoZW4gYW4gZXJyb3Igb2NjdXJzLlxuICAgKi9cbiAgdGhyb3dPbkVycm9yczogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBDb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIE1vbWVudG8gVG9waWNDbGllbnRcbiAqXG4gKiBAZXhwb3J0XG4gKiBAaW50ZXJmYWNlIFRvcGljQ29uZmlndXJhdGlvblxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRvcGljQ29uZmlndXJhdGlvbiB7XG4gIC8qKlxuICAgKiBAcmV0dXJucyB7TW9tZW50b0xvZ2dlckZhY3Rvcnl9IHRoZSBjdXJyZW50IGNvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgbG9nZ2luZyB2ZXJib3NpdHkgYW5kIGZvcm1hdFxuICAgKi9cbiAgZ2V0TG9nZ2VyRmFjdG9yeSgpOiBNb21lbnRvTG9nZ2VyRmFjdG9yeTtcblxuICAvKipcbiAgICogQHJldHVybnMge1RyYW5zcG9ydFN0cmF0ZWd5fSB0aGUgY3VycmVudCBjb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIHdpcmUgaW50ZXJhY3Rpb25zIHdpdGggdGhlIE1vbWVudG8gc2VydmljZVxuICAgKi9cbiAgZ2V0VHJhbnNwb3J0U3RyYXRlZ3koKTogVG9waWNUcmFuc3BvcnRTdHJhdGVneTtcblxuICAvKipcbiAgICogU2hvcnRoYW5kIGNvcHkgY29uc3RydWN0b3IgZm9yIG92ZXJyaWRpbmcgVHJhbnNwb3J0U3RyYXRlZ3kuR3JwY1N0cmF0ZWd5Lk51bUNsaWVudHMuIFRoaXMgd2lsbFxuICAgKiBhbGxvdyB5b3UgdG8gY29udHJvbCB0aGUgbnVtYmVyIG9mIFRDUCBjb25uZWN0aW9ucyB0aGF0IHRoZSBjbGllbnQgd2lsbCBvcGVuIHRvIHRoZSBzZXJ2ZXIuIFVzdWFsbHlcbiAgICogeW91IHNob3VsZCBzdGljayB3aXRoIHRoZSBkZWZhdWx0IHZhbHVlIGZyb20geW91ciBwcmUtYnVpbHQgY29uZmlndXJhdGlvbiwgYnV0IGl0IGNhbiBiZSB2YWx1YWJsZVxuICAgKiB0byBpbmNyZWFzZSB0aGlzIHZhbHVlIGluIG9yZGVyIHRvIGVuc3VyZSBtb3JlIGV2ZW5seSBkaXN0cmlidXRlZCBsb2FkIG9uIE1vbWVudG8gc2VydmVycy5cbiAgICpcbiAgICogQHBhcmFtIHtudW1iZXJ9IG51bUNvbm5lY3Rpb25zXG4gICAqIEByZXR1cm5zIHtDb25maWd1cmF0aW9ufSBhIG5ldyBDb25maWd1cmF0aW9uIG9iamVjdCB3aXRoIHRoZSB1cGRhdGVkIFRyYW5zcG9ydFN0cmF0ZWd5XG4gICAqL1xuICB3aXRoTnVtQ29ubmVjdGlvbnMobnVtQ29ubmVjdGlvbnM6IG51bWJlcik6IFRvcGljQ29uZmlndXJhdGlvbjtcblxuICAvKipcbiAgICogQHJldHVybnMge2Jvb2xlYW59IENvbmZpZ3VyZXMgd2hldGhlciB0aGUgY2xpZW50IHNob3VsZCByZXR1cm4gYSBNb21lbnRvIEVycm9yIG9iamVjdCBvciB0aHJvdyBhbiBleGNlcHRpb24gd2hlbiBhblxuICAgKiBlcnJvciBvY2N1cnMuIEJ5IGRlZmF1bHQsIHRoaXMgaXMgc2V0IHRvIGZhbHNlLCBhbmQgdGhlIGNsaWVudCB3aWxsIHJldHVybiBhIE1vbWVudG8gRXJyb3Igb2JqZWN0IG9uIGVycm9ycy4gU2V0IGl0XG4gICAqIHRvIHRydWUgaWYgeW91IHByZWZlciBmb3IgZXhjZXB0aW9ucyB0byBiZSB0aHJvd24uXG4gICAqL1xuICBnZXRUaHJvd09uRXJyb3JzKCk6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIENvcHkgY29uc3RydWN0b3IgZm9yIGNvbmZpZ3VyaW5nIHdoZXRoZXIgdGhlIGNsaWVudCBzaG91bGQgcmV0dXJuIGEgTW9tZW50byBFcnJvciBvYmplY3Qgb3IgdGhyb3cgYW4gZXhjZXB0aW9uIHdoZW4gYW5cbiAgICogZXJyb3Igb2NjdXJzLiBCeSBkZWZhdWx0LCB0aGlzIGlzIHNldCB0byBmYWxzZSwgYW5kIHRoZSBjbGllbnQgd2lsbCByZXR1cm4gYSBNb21lbnRvIEVycm9yIG9iamVjdCBvbiBlcnJvcnMuIFNldCBpdFxuICAgKiB0byB0cnVlIGlmIHlvdSBwcmVmZXIgZm9yIGV4Y2VwdGlvbnMgdG8gYmUgdGhyb3duLlxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHRocm93T25FcnJvcnNcbiAgICogQHJldHVybnMge0NvbmZpZ3VyYXRpb259IGEgbmV3IENvbmZpZ3VyYXRpb24gb2JqZWN0IHdpdGggdGhlIHNwZWNpZmllZCB0aHJvd09uRXJyb3JzIHNldHRpbmdcbiAgICovXG4gIHdpdGhUaHJvd09uRXJyb3JzKHRocm93T25FcnJvcnM6IGJvb2xlYW4pOiBUb3BpY0NvbmZpZ3VyYXRpb247XG59XG5cbmV4cG9ydCBjbGFzcyBUb3BpY0NsaWVudENvbmZpZ3VyYXRpb24gaW1wbGVtZW50cyBUb3BpY0NvbmZpZ3VyYXRpb24ge1xuICBwcml2YXRlIHJlYWRvbmx5IGxvZ2dlckZhY3Rvcnk6IE1vbWVudG9Mb2dnZXJGYWN0b3J5O1xuICBwcml2YXRlIHJlYWRvbmx5IHRyYW5zcG9ydFN0cmF0ZWd5OiBUb3BpY1RyYW5zcG9ydFN0cmF0ZWd5O1xuICBwcml2YXRlIHJlYWRvbmx5IHRocm93T25FcnJvcnM6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IocHJvcHM6IFRvcGljQ29uZmlndXJhdGlvblByb3BzKSB7XG4gICAgdGhpcy5sb2dnZXJGYWN0b3J5ID0gcHJvcHMubG9nZ2VyRmFjdG9yeTtcbiAgICB0aGlzLnRyYW5zcG9ydFN0cmF0ZWd5ID0gcHJvcHMudHJhbnNwb3J0U3RyYXRlZ3k7XG4gICAgdGhpcy50aHJvd09uRXJyb3JzID0gcHJvcHMudGhyb3dPbkVycm9ycztcbiAgfVxuXG4gIGdldExvZ2dlckZhY3RvcnkoKTogTW9tZW50b0xvZ2dlckZhY3Rvcnkge1xuICAgIHJldHVybiB0aGlzLmxvZ2dlckZhY3Rvcnk7XG4gIH1cblxuICBnZXRUcmFuc3BvcnRTdHJhdGVneSgpOiBUb3BpY1RyYW5zcG9ydFN0cmF0ZWd5IHtcbiAgICByZXR1cm4gdGhpcy50cmFuc3BvcnRTdHJhdGVneTtcbiAgfVxuXG4gIHdpdGhUcmFuc3BvcnRTdHJhdGVneShcbiAgICB0cmFuc3BvcnRTdHJhdGVneTogVG9waWNUcmFuc3BvcnRTdHJhdGVneVxuICApOiBUb3BpY0NvbmZpZ3VyYXRpb24ge1xuICAgIHJldHVybiBuZXcgVG9waWNDbGllbnRDb25maWd1cmF0aW9uKHtcbiAgICAgIGxvZ2dlckZhY3Rvcnk6IHRoaXMubG9nZ2VyRmFjdG9yeSxcbiAgICAgIHRyYW5zcG9ydFN0cmF0ZWd5OiB0cmFuc3BvcnRTdHJhdGVneSxcbiAgICAgIHRocm93T25FcnJvcnM6IHRoaXMudGhyb3dPbkVycm9ycyxcbiAgICB9KTtcbiAgfVxuXG4gIHdpdGhOdW1Db25uZWN0aW9ucyhudW1Db25uZWN0aW9uczogbnVtYmVyKTogVG9waWNDb25maWd1cmF0aW9uIHtcbiAgICByZXR1cm4gdGhpcy53aXRoVHJhbnNwb3J0U3RyYXRlZ3koXG4gICAgICB0aGlzLmdldFRyYW5zcG9ydFN0cmF0ZWd5KCkud2l0aEdycGNDb25maWcoXG4gICAgICAgIHRoaXMuZ2V0VHJhbnNwb3J0U3RyYXRlZ3koKVxuICAgICAgICAgIC5nZXRHcnBjQ29uZmlnKClcbiAgICAgICAgICAud2l0aE51bUNsaWVudHMobnVtQ29ubmVjdGlvbnMpXG4gICAgICApXG4gICAgKTtcbiAgfVxuXG4gIGdldFRocm93T25FcnJvcnMoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMudGhyb3dPbkVycm9ycztcbiAgfVxuXG4gIHdpdGhUaHJvd09uRXJyb3JzKHRocm93T25FcnJvcnM6IGJvb2xlYW4pOiBUb3BpY0NvbmZpZ3VyYXRpb24ge1xuICAgIHJldHVybiBuZXcgVG9waWNDbGllbnRDb25maWd1cmF0aW9uKHtcbiAgICAgIGxvZ2dlckZhY3Rvcnk6IHRoaXMubG9nZ2VyRmFjdG9yeSxcbiAgICAgIHRyYW5zcG9ydFN0cmF0ZWd5OiB0aGlzLnRyYW5zcG9ydFN0cmF0ZWd5LFxuICAgICAgdGhyb3dPbkVycm9yczogdGhyb3dPbkVycm9ycyxcbiAgICB9KTtcbiAgfVxufVxuIl19

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/transport/topics/grpc-configuration.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JwYy1jb25maWd1cmF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbmZpZy90cmFuc3BvcnQvdG9waWNzL2dycGMtY29uZmlndXJhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBUb3BpY0dycGNDb25maWd1cmF0aW9uUHJvcHMge1xuICAvKipcbiAgICogVGhlIG51bWJlciBvZiBpbnRlcm5hbCBjbGllbnRzIGEgdG9waWMgY2xpZW50IHdpbGwgY3JlYXRlIHRvIGNvbW11bmljYXRlIHdpdGggTW9tZW50by4gTW9yZSBvZiB0aGVtIGFsbG93c1xuICAgKiBtb3JlIGNvbmN1cnJlbnQgcmVxdWVzdHMsIGF0IHRoZSBjb3N0IG9mIG1vcmUgb3BlbiBjb25uZWN0aW9ucyBhbmQgdGhlIGxhdGVuY3kgb2Ygc2V0dGluZyB1cCBlYWNoIGNsaWVudC5cbiAgICovXG4gIG51bUNsaWVudHM/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEluZGljYXRlcyBpZiBpdCBwZXJtaXNzaWJsZSB0byBzZW5kIGtlZXBhbGl2ZSBwaW5ncyBmcm9tIHRoZSBjbGllbnQgd2l0aG91dCBhbnkgb3V0c3RhbmRpbmcgc3RyZWFtcy5cbiAgICpcbiAgICogTk9URToga2VlcC1hbGl2ZXMgYXJlIHZlcnkgaW1wb3J0YW50IGZvciBsb25nLWxpdmVkIHNlcnZlciBlbnZpcm9ubWVudHMgd2hlcmUgdGhlcmUgbWF5IGJlIHBlcmlvZHMgb2YgdGltZVxuICAgKiB3aGVuIHRoZSBjb25uZWN0aW9uIGlzIGlkbGUuIEhvd2V2ZXIsIHRoZXkgYXJlIHZlcnkgcHJvYmxlbWF0aWMgZm9yIGxhbWJkYSBlbnZpcm9ubWVudHMgd2hlcmUgdGhlIGxhbWJkYVxuICAgKiBydW50aW1lIGlzIGNvbnRpbnVvdXNseSBmcm96ZW4gYW5kIHVuZnJvemVuLCBiZWNhdXNlIHRoZSBsYW1iZGEgbWF5IGJlIGZyb3plbiBiZWZvcmUgdGhlIFwiQUNLXCIgaXMgcmVjZWl2ZWRcbiAgICogZnJvbSB0aGUgc2VydmVyLiBUaGlzIGNhbiBjYXVzZSB0aGUga2VlcC1hbGl2ZSB0byB0aW1lb3V0IGV2ZW4gdGhvdWdoIHRoZSBjb25uZWN0aW9uIGlzIGNvbXBsZXRlbHkgaGVhbHRoeS5cbiAgICogVGhlcmVmb3JlLCBrZWVwLWFsaXZlcyBzaG91bGQgYmUgZGlzYWJsZWQgaW4gbGFtYmRhIGFuZCBzaW1pbGFyIGVudmlyb25tZW50cy5cbiAgICovXG4gIGtlZXBBbGl2ZVBlcm1pdFdpdGhvdXRDYWxscz86IG51bWJlcjtcblxuICAvKipcbiAgICogQWZ0ZXIgd2FpdGluZyBmb3IgYSBkdXJhdGlvbiBvZiB0aGlzIHRpbWUsIGlmIHRoZSBrZWVwYWxpdmUgcGluZyBzZW5kZXIgZG9lcyBub3QgcmVjZWl2ZSB0aGUgcGluZyBhY2ssXG4gICAqIGl0IHdpbGwgY2xvc2UgdGhlIHRyYW5zcG9ydC5cbiAgICpcbiAgICogTk9URToga2VlcC1hbGl2ZXMgYXJlIHZlcnkgaW1wb3J0YW50IGZvciBsb25nLWxpdmVkIHNlcnZlciBlbnZpcm9ubWVudHMgd2hlcmUgdGhlcmUgbWF5IGJlIHBlcmlvZHMgb2YgdGltZVxuICAgKiB3aGVuIHRoZSBjb25uZWN0aW9uIGlzIGlkbGUuIEhvd2V2ZXIsIHRoZXkgYXJlIHZlcnkgcHJvYmxlbWF0aWMgZm9yIGxhbWJkYSBlbnZpcm9ubWVudHMgd2hlcmUgdGhlIGxhbWJkYVxuICAgKiBydW50aW1lIGlzIGNvbnRpbnVvdXNseSBmcm96ZW4gYW5kIHVuZnJvemVuLCBiZWNhdXNlIHRoZSBsYW1iZGEgbWF5IGJlIGZyb3plbiBiZWZvcmUgdGhlIFwiQUNLXCIgaXMgcmVjZWl2ZWRcbiAgICogZnJvbSB0aGUgc2VydmVyLiBUaGlzIGNhbiBjYXVzZSB0aGUga2VlcC1hbGl2ZSB0byB0aW1lb3V0IGV2ZW4gdGhvdWdoIHRoZSBjb25uZWN0aW9uIGlzIGNvbXBsZXRlbHkgaGVhbHRoeS5cbiAgICogVGhlcmVmb3JlLCBrZWVwLWFsaXZlcyBzaG91bGQgYmUgZGlzYWJsZWQgaW4gbGFtYmRhIGFuZCBzaW1pbGFyIGVudmlyb25tZW50cy5cbiAgICovXG4gIGtlZXBBbGl2ZVRpbWVvdXRNcz86IG51bWJlcjtcblxuICAvKipcbiAgICogQWZ0ZXIgYSBkdXJhdGlvbiBvZiB0aGlzIHRpbWUgdGhlIGNsaWVudC9zZXJ2ZXIgcGluZ3MgaXRzIHBlZXIgdG8gc2VlIGlmIHRoZSB0cmFuc3BvcnQgaXMgc3RpbGwgYWxpdmUuXG4gICAqXG4gICAqIE5PVEU6IGtlZXAtYWxpdmVzIGFyZSB2ZXJ5IGltcG9ydGFudCBmb3IgbG9uZy1saXZlZCBzZXJ2ZXIgZW52aXJvbm1lbnRzIHdoZXJlIHRoZXJlIG1heSBiZSBwZXJpb2RzIG9mIHRpbWVcbiAgICogd2hlbiB0aGUgY29ubmVjdGlvbiBpcyBpZGxlLiBIb3dldmVyLCB0aGV5IGFyZSB2ZXJ5IHByb2JsZW1hdGljIGZvciBsYW1iZGEgZW52aXJvbm1lbnRzIHdoZXJlIHRoZSBsYW1iZGFcbiAgICogcnVudGltZSBpcyBjb250aW51b3VzbHkgZnJvemVuIGFuZCB1bmZyb3plbiwgYmVjYXVzZSB0aGUgbGFtYmRhIG1heSBiZSBmcm96ZW4gYmVmb3JlIHRoZSBcIkFDS1wiIGlzIHJlY2VpdmVkXG4gICAqIGZyb20gdGhlIHNlcnZlci4gVGhpcyBjYW4gY2F1c2UgdGhlIGtlZXAtYWxpdmUgdG8gdGltZW91dCBldmVuIHRob3VnaCB0aGUgY29ubmVjdGlvbiBpcyBjb21wbGV0ZWx5IGhlYWx0aHkuXG4gICAqIFRoZXJlZm9yZSwga2VlcC1hbGl2ZXMgc2hvdWxkIGJlIGRpc2FibGVkIGluIGxhbWJkYSBhbmQgc2ltaWxhciBlbnZpcm9ubWVudHMuXG4gICAqL1xuICBrZWVwQWxpdmVUaW1lTXM/OiBudW1iZXI7XG59XG5cbi8qKlxuICogRW5jYXBzdWxhdGVzIGdSUEMgY29uZmlndXJhdGlvbiB0dW5hYmxlcy5cbiAqIEBleHBvcnRcbiAqIEBpbnRlcmZhY2UgVG9waWNHcnBjQ29uZmlndXJhdGlvblxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRvcGljR3JwY0NvbmZpZ3VyYXRpb24ge1xuICAvKipcbiAgICogQHJldHVybnMge251bWJlcn0gdGhlIG51bWJlciBvZiBpbnRlcm5hbCBjbGllbnRzIGEgdG9waWMgY2xpZW50IHdpbGwgY3JlYXRlIHRvIGNvbW11bmljYXRlIHdpdGggTW9tZW50by4gTW9yZSBvZlxuICAgKiB0aGVtIHdpbGwgYWxsb3cgZm9yIG1vcmUgY29uY3VycmVudCByZXF1ZXN0cy5cbiAgICovXG4gIGdldE51bUNsaWVudHMoKTogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBDb3B5IGNvbnN0cnVjdG9yIGZvciBvdmVycmlkaW5nIHRoZSBudW1iZXIgb2YgY2xpZW50cyB0byBjcmVhdGVcbiAgICogQHBhcmFtIHtudW1iZXJ9IG51bUNsaWVudHMgdGhlIG51bWJlciBvZiBpbnRlcm5hbCBjbGllbnRzIHRvIGNyZWF0ZVxuICAgKiBAcmV0dXJucyB7R3JwY0NvbmZpZ3VyYXRpb259IGEgbmV3IEdycGNDb25maWd1cmF0aW9uIHdpdGggdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgY2xpZW50c1xuICAgKi9cbiAgd2l0aE51bUNsaWVudHMobnVtQ2xpZW50czogbnVtYmVyKTogVG9waWNHcnBjQ29uZmlndXJhdGlvbjtcblxuICAvKipcbiAgICogTk9URToga2VlcC1hbGl2ZXMgYXJlIHZlcnkgaW1wb3J0YW50IGZvciBsb25nLWxpdmVkIHNlcnZlciBlbnZpcm9ubWVudHMgd2hlcmUgdGhlcmUgbWF5IGJlIHBlcmlvZHMgb2YgdGltZVxuICAgKiB3aGVuIHRoZSBjb25uZWN0aW9uIGlzIGlkbGUuIEhvd2V2ZXIsIHRoZXkgYXJlIHZlcnkgcHJvYmxlbWF0aWMgZm9yIGxhbWJkYSBlbnZpcm9ubWVudHMgd2hlcmUgdGhlIGxhbWJkYVxuICAgKiBydW50aW1lIGlzIGNvbnRpbnVvdXNseSBmcm96ZW4gYW5kIHVuZnJvemVuLCBiZWNhdXNlIHRoZSBsYW1iZGEgbWF5IGJlIGZyb3plbiBiZWZvcmUgdGhlIFwiQUNLXCIgaXMgcmVjZWl2ZWRcbiAgICogZnJvbSB0aGUgc2VydmVyLiBUaGlzIGNhbiBjYXVzZSB0aGUga2VlcC1hbGl2ZSB0byB0aW1lb3V0IGV2ZW4gdGhvdWdoIHRoZSBjb25uZWN0aW9uIGlzIGNvbXBsZXRlbHkgaGVhbHRoeS5cbiAgICogVGhlcmVmb3JlLCBrZWVwLWFsaXZlcyBzaG91bGQgYmUgZGlzYWJsZWQgaW4gbGFtYmRhIGFuZCBzaW1pbGFyIGVudmlyb25tZW50cy5cbiAgICpcbiAgICogQHJldHVybnMge251bWJlcn0gMCBvciAxLCBpZiBpdCBpcyBwZXJtaXNzaWJsZSB0byBzZW5kIGEga2VlcGFsaXZlL3Bpbmcgd2l0aG91dCBhbnkgb3V0c3RhbmRpbmcgY2FsbHMuXG4gICAqL1xuICBnZXRLZWVwQWxpdmVQZXJtaXRXaXRob3V0Q2FsbHMoKTogbnVtYmVyIHwgdW5kZWZpbmVkO1xuXG4gIC8qKlxuICAgKiBOT1RFOiBrZWVwLWFsaXZlcyBhcmUgdmVyeSBpbXBvcnRhbnQgZm9yIGxvbmctbGl2ZWQgc2VydmVyIGVudmlyb25tZW50cyB3aGVyZSB0aGVyZSBtYXkgYmUgcGVyaW9kcyBvZiB0aW1lXG4gICAqIHdoZW4gdGhlIGNvbm5lY3Rpb24gaXMgaWRsZS4gSG93ZXZlciwgdGhleSBhcmUgdmVyeSBwcm9ibGVtYXRpYyBmb3IgbGFtYmRhIGVudmlyb25tZW50cyB3aGVyZSB0aGUgbGFtYmRhXG4gICAqIHJ1bnRpbWUgaXMgY29udGludW91c2x5IGZyb3plbiBhbmQgdW5mcm96ZW4sIGJlY2F1c2UgdGhlIGxhbWJkYSBtYXkgYmUgZnJvemVuIGJlZm9yZSB0aGUgXCJBQ0tcIiBpcyByZWNlaXZlZFxuICAgKiBmcm9tIHRoZSBzZXJ2ZXIuIFRoaXMgY2FuIGNhdXNlIHRoZSBrZWVwLWFsaXZlIHRvIHRpbWVvdXQgZXZlbiB0aG91Z2ggdGhlIGNvbm5lY3Rpb24gaXMgY29tcGxldGVseSBoZWFsdGh5LlxuICAgKiBUaGVyZWZvcmUsIGtlZXAtYWxpdmVzIHNob3VsZCBiZSBkaXNhYmxlZCBpbiBsYW1iZGEgYW5kIHNpbWlsYXIgZW52aXJvbm1lbnRzLlxuICAgKlxuICAgKiBAcmV0dXJucyB7bnVtYmVyfSB0aGUgdGltZSB0byB3YWl0IGZvciBhIHJlc3BvbnNlIGZyb20gYSBrZWVwYWxpdmUgb3IgcGluZy5cbiAgICovXG4gIGdldEtlZXBBbGl2ZVRpbWVvdXRNUygpOiBudW1iZXIgfCB1bmRlZmluZWQ7XG5cbiAgLyoqXG4gICAqIE5PVEU6IGtlZXAtYWxpdmVzIGFyZSB2ZXJ5IGltcG9ydGFudCBmb3IgbG9uZy1saXZlZCBzZXJ2ZXIgZW52aXJvbm1lbnRzIHdoZXJlIHRoZXJlIG1heSBiZSBwZXJpb2RzIG9mIHRpbWVcbiAgICogd2hlbiB0aGUgY29ubmVjdGlvbiBpcyBpZGxlLiBIb3dldmVyLCB0aGV5IGFyZSB2ZXJ5IHByb2JsZW1hdGljIGZvciBsYW1iZGEgZW52aXJvbm1lbnRzIHdoZXJlIHRoZSBsYW1iZGFcbiAgICogcnVudGltZSBpcyBjb250aW51b3VzbHkgZnJvemVuIGFuZCB1bmZyb3plbiwgYmVjYXVzZSB0aGUgbGFtYmRhIG1heSBiZSBmcm96ZW4gYmVmb3JlIHRoZSBcIkFDS1wiIGlzIHJlY2VpdmVkXG4gICAqIGZyb20gdGhlIHNlcnZlci4gVGhpcyBjYW4gY2F1c2UgdGhlIGtlZXAtYWxpdmUgdG8gdGltZW91dCBldmVuIHRob3VnaCB0aGUgY29ubmVjdGlvbiBpcyBjb21wbGV0ZWx5IGhlYWx0aHkuXG4gICAqIFRoZXJlZm9yZSwga2VlcC1hbGl2ZXMgc2hvdWxkIGJlIGRpc2FibGVkIGluIGxhbWJkYSBhbmQgc2ltaWxhciBlbnZpcm9ubWVudHMuXG4gICAqXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IHRoZSBpbnRlcnZhbCBhdCB3aGljaCB0byBzZW5kIHRoZSBrZWVwYWxpdmUgb3IgcGluZy5cbiAgICovXG4gIGdldEtlZXBBbGl2ZVRpbWVNUygpOiBudW1iZXIgfCB1bmRlZmluZWQ7XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/transport/topics/transport-strategy.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StaticTopicTransportStrategy = exports.StaticTopicGrpcConfiguration = void 0;
class StaticTopicGrpcConfiguration {
    constructor(props){
        if (props.numClients !== undefined && props.numClients !== null) {
            this.numClients = props.numClients;
        } else {
            this.numClients = 1;
        }
        this.keepAliveTimeMs = props.keepAliveTimeMs;
        this.keepAliveTimeoutMs = props.keepAliveTimeoutMs;
        this.keepAlivePermitWithoutCalls = props.keepAlivePermitWithoutCalls;
    }
    getNumClients() {
        return this.numClients;
    }
    withNumClients(numClients) {
        return new StaticTopicGrpcConfiguration({
            numClients: numClients,
            keepAlivePermitWithoutCalls: this.keepAlivePermitWithoutCalls,
            keepAliveTimeoutMs: this.keepAliveTimeoutMs,
            keepAliveTimeMs: this.keepAliveTimeMs
        });
    }
    getKeepAliveTimeoutMS() {
        return this.keepAliveTimeoutMs;
    }
    getKeepAliveTimeMS() {
        return this.keepAliveTimeMs;
    }
    getKeepAlivePermitWithoutCalls() {
        return this.keepAlivePermitWithoutCalls;
    }
}
exports.StaticTopicGrpcConfiguration = StaticTopicGrpcConfiguration;
class StaticTopicTransportStrategy {
    constructor(props){
        this.grpcConfig = props.grpcConfiguration;
    }
    getGrpcConfig() {
        return this.grpcConfig;
    }
    withGrpcConfig(grpcConfig) {
        return new StaticTopicTransportStrategy({
            grpcConfiguration: grpcConfig
        });
    }
}
exports.StaticTopicTransportStrategy = StaticTopicTransportStrategy; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNwb3J0LXN0cmF0ZWd5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbmZpZy90cmFuc3BvcnQvdG9waWNzL3RyYW5zcG9ydC1zdHJhdGVneS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUE0QkEsTUFBYSw0QkFBNEI7SUFNdkMsWUFBWSxLQUFrQztRQUM1QyxJQUFJLEtBQUssQ0FBQyxVQUFVLEtBQUssU0FBUyxJQUFJLEtBQUssQ0FBQyxVQUFVLEtBQUssSUFBSSxFQUFFO1lBQy9ELElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FBQztTQUNwQzthQUFNO1lBQ0wsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7U0FDckI7UUFFRCxJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQyxlQUFlLENBQUM7UUFDN0MsSUFBSSxDQUFDLGtCQUFrQixHQUFHLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQztRQUNuRCxJQUFJLENBQUMsMkJBQTJCLEdBQUcsS0FBSyxDQUFDLDJCQUEyQixDQUFDO0lBQ3ZFLENBQUM7SUFFRCxhQUFhO1FBQ1gsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxjQUFjLENBQUMsVUFBa0I7UUFDL0IsT0FBTyxJQUFJLDRCQUE0QixDQUFDO1lBQ3RDLFVBQVUsRUFBRSxVQUFVO1lBQ3RCLDJCQUEyQixFQUFFLElBQUksQ0FBQywyQkFBMkI7WUFDN0Qsa0JBQWtCLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjtZQUMzQyxlQUFlLEVBQUUsSUFBSSxDQUFDLGVBQWU7U0FDdEMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELHFCQUFxQjtRQUNuQixPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztJQUNqQyxDQUFDO0lBRUQsa0JBQWtCO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQztJQUM5QixDQUFDO0lBRUQsOEJBQThCO1FBQzVCLE9BQU8sSUFBSSxDQUFDLDJCQUEyQixDQUFDO0lBQzFDLENBQUM7Q0FDRjtBQTFDRCxvRUEwQ0M7QUFFRCxNQUFhLDRCQUE0QjtJQUd2QyxZQUFZLEtBQWtDO1FBQzVDLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDLGlCQUFpQixDQUFDO0lBQzVDLENBQUM7SUFFRCxhQUFhO1FBQ1gsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxjQUFjLENBQ1osVUFBa0M7UUFFbEMsT0FBTyxJQUFJLDRCQUE0QixDQUFDO1lBQ3RDLGlCQUFpQixFQUFFLFVBQVU7U0FDOUIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGO0FBbEJELG9FQWtCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIFRvcGljR3JwY0NvbmZpZ3VyYXRpb24sXG4gIFRvcGljR3JwY0NvbmZpZ3VyYXRpb25Qcm9wcyxcbn0gZnJvbSAnLi9ncnBjLWNvbmZpZ3VyYXRpb24nO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRvcGljVHJhbnNwb3J0U3RyYXRlZ3kge1xuICAvKipcbiAgICogQ29uZmlndXJlcyB0aGUgbG93LWxldmVsIGdSUEMgc2V0dGluZ3MgZm9yIHRoZSBNb21lbnRvIGNsaWVudCdzIGNvbW11bmljYXRpb25cbiAgICogd2l0aCB0aGUgTW9tZW50byBzZXJ2ZXIuXG4gICAqIEByZXR1cm5zIHtUb3BpY0dycGNDb25maWd1cmF0aW9ufVxuICAgKi9cbiAgZ2V0R3JwY0NvbmZpZygpOiBUb3BpY0dycGNDb25maWd1cmF0aW9uO1xuXG4gIC8qKlxuICAgKiBDb3B5IGNvbnN0cnVjdG9yIGZvciBvdmVycmlkaW5nIHRoZSBnUlBDIGNvbmZpZ3VyYXRpb25cbiAgICogQHBhcmFtIHtUb3BpY0dycGNDb25maWd1cmF0aW9ufSBncnBjQ29uZmlnXG4gICAqIEByZXR1cm5zIHtUb3BpY1RyYW5zcG9ydFN0cmF0ZWd5fSBhIG5ldyBUcmFuc3BvcnRTdHJhdGVneSB3aXRoIHRoZSBzcGVjaWZpZWQgZ1JQQyBjb25maWcuXG4gICAqL1xuICB3aXRoR3JwY0NvbmZpZyhncnBjQ29uZmlnOiBUb3BpY0dycGNDb25maWd1cmF0aW9uKTogVG9waWNUcmFuc3BvcnRTdHJhdGVneTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUb3BpY1RyYW5zcG9ydFN0cmF0ZWd5UHJvcHMge1xuICAvKipcbiAgICogbG93LWxldmVsIGdSUEMgc2V0dGluZ3MgZm9yIGNvbW11bmljYXRpb24gd2l0aCB0aGUgTW9tZW50byBzZXJ2ZXJcbiAgICovXG4gIGdycGNDb25maWd1cmF0aW9uOiBUb3BpY0dycGNDb25maWd1cmF0aW9uO1xufVxuXG5leHBvcnQgY2xhc3MgU3RhdGljVG9waWNHcnBjQ29uZmlndXJhdGlvbiBpbXBsZW1lbnRzIFRvcGljR3JwY0NvbmZpZ3VyYXRpb24ge1xuICBwcml2YXRlIHJlYWRvbmx5IG51bUNsaWVudHM6IG51bWJlcjtcbiAgcHJpdmF0ZSByZWFkb25seSBrZWVwQWxpdmVQZXJtaXRXaXRob3V0Q2FsbHM/OiBudW1iZXI7XG4gIHByaXZhdGUgcmVhZG9ubHkga2VlcEFsaXZlVGltZW91dE1zPzogbnVtYmVyO1xuICBwcml2YXRlIHJlYWRvbmx5IGtlZXBBbGl2ZVRpbWVNcz86IG51bWJlcjtcblxuICBjb25zdHJ1Y3Rvcihwcm9wczogVG9waWNHcnBjQ29uZmlndXJhdGlvblByb3BzKSB7XG4gICAgaWYgKHByb3BzLm51bUNsaWVudHMgIT09IHVuZGVmaW5lZCAmJiBwcm9wcy5udW1DbGllbnRzICE9PSBudWxsKSB7XG4gICAgICB0aGlzLm51bUNsaWVudHMgPSBwcm9wcy5udW1DbGllbnRzO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm51bUNsaWVudHMgPSAxO1xuICAgIH1cblxuICAgIHRoaXMua2VlcEFsaXZlVGltZU1zID0gcHJvcHMua2VlcEFsaXZlVGltZU1zO1xuICAgIHRoaXMua2VlcEFsaXZlVGltZW91dE1zID0gcHJvcHMua2VlcEFsaXZlVGltZW91dE1zO1xuICAgIHRoaXMua2VlcEFsaXZlUGVybWl0V2l0aG91dENhbGxzID0gcHJvcHMua2VlcEFsaXZlUGVybWl0V2l0aG91dENhbGxzO1xuICB9XG5cbiAgZ2V0TnVtQ2xpZW50cygpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLm51bUNsaWVudHM7XG4gIH1cblxuICB3aXRoTnVtQ2xpZW50cyhudW1DbGllbnRzOiBudW1iZXIpOiBUb3BpY0dycGNDb25maWd1cmF0aW9uIHtcbiAgICByZXR1cm4gbmV3IFN0YXRpY1RvcGljR3JwY0NvbmZpZ3VyYXRpb24oe1xuICAgICAgbnVtQ2xpZW50czogbnVtQ2xpZW50cyxcbiAgICAgIGtlZXBBbGl2ZVBlcm1pdFdpdGhvdXRDYWxsczogdGhpcy5rZWVwQWxpdmVQZXJtaXRXaXRob3V0Q2FsbHMsXG4gICAgICBrZWVwQWxpdmVUaW1lb3V0TXM6IHRoaXMua2VlcEFsaXZlVGltZW91dE1zLFxuICAgICAga2VlcEFsaXZlVGltZU1zOiB0aGlzLmtlZXBBbGl2ZVRpbWVNcyxcbiAgICB9KTtcbiAgfVxuXG4gIGdldEtlZXBBbGl2ZVRpbWVvdXRNUygpOiBudW1iZXIgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLmtlZXBBbGl2ZVRpbWVvdXRNcztcbiAgfVxuXG4gIGdldEtlZXBBbGl2ZVRpbWVNUygpOiBudW1iZXIgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLmtlZXBBbGl2ZVRpbWVNcztcbiAgfVxuXG4gIGdldEtlZXBBbGl2ZVBlcm1pdFdpdGhvdXRDYWxscygpOiBudW1iZXIgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLmtlZXBBbGl2ZVBlcm1pdFdpdGhvdXRDYWxscztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU3RhdGljVG9waWNUcmFuc3BvcnRTdHJhdGVneSBpbXBsZW1lbnRzIFRvcGljVHJhbnNwb3J0U3RyYXRlZ3kge1xuICBwcml2YXRlIHJlYWRvbmx5IGdycGNDb25maWc6IFRvcGljR3JwY0NvbmZpZ3VyYXRpb247XG5cbiAgY29uc3RydWN0b3IocHJvcHM6IFRvcGljVHJhbnNwb3J0U3RyYXRlZ3lQcm9wcykge1xuICAgIHRoaXMuZ3JwY0NvbmZpZyA9IHByb3BzLmdycGNDb25maWd1cmF0aW9uO1xuICB9XG5cbiAgZ2V0R3JwY0NvbmZpZygpOiBUb3BpY0dycGNDb25maWd1cmF0aW9uIHtcbiAgICByZXR1cm4gdGhpcy5ncnBjQ29uZmlnO1xuICB9XG5cbiAgd2l0aEdycGNDb25maWcoXG4gICAgZ3JwY0NvbmZpZzogVG9waWNHcnBjQ29uZmlndXJhdGlvblxuICApOiBTdGF0aWNUb3BpY1RyYW5zcG9ydFN0cmF0ZWd5IHtcbiAgICByZXR1cm4gbmV3IFN0YXRpY1RvcGljVHJhbnNwb3J0U3RyYXRlZ3koe1xuICAgICAgZ3JwY0NvbmZpZ3VyYXRpb246IGdycGNDb25maWcsXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/transport/topics/index.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/transport/topics/grpc-configuration.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/transport/topics/transport-strategy.js [app-route] (ecmascript)"), exports); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29uZmlnL3RyYW5zcG9ydC90b3BpY3MvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHVEQUFxQztBQUNyQyx1REFBcUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2dycGMtY29uZmlndXJhdGlvbic7XG5leHBvcnQgKiBmcm9tICcuL3RyYW5zcG9ydC1zdHJhdGVneSc7XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/topic-configurations.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Lambda = exports.Default = void 0;
const default_momento_logger_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/logging/default-momento-logger.js [app-route] (ecmascript)");
const topic_configuration_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/topic-configuration.js [app-route] (ecmascript)");
const topics_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/transport/topics/index.js [app-route] (ecmascript)");
const defaultLoggerFactory = new default_momento_logger_1.DefaultMomentoLoggerFactory();
/**
 * Default config provides defaults suitable for most environments; prioritizes success of publishing and receiving messages.
 * @export
 * @class Default
 */ class Default extends topic_configuration_1.TopicClientConfiguration {
    /**
     * Provides the latest recommended configuration for a default environment.  NOTE: this configuration may
     * change in future releases to take advantage of improvements we identify for default configurations.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {TopicConfiguration}
     */ static latest(loggerFactory = defaultLoggerFactory) {
        return new topic_configuration_1.TopicClientConfiguration({
            loggerFactory: loggerFactory,
            transportStrategy: new topics_1.StaticTopicTransportStrategy({
                grpcConfiguration: new topics_1.StaticTopicGrpcConfiguration({
                    numClients: 1,
                    keepAlivePermitWithoutCalls: 1,
                    keepAliveTimeMs: 5000,
                    keepAliveTimeoutMs: 1000
                })
            }),
            throwOnErrors: false
        });
    }
}
exports.Default = Default;
/**
 * Default config provides defaults suitable for AWS lambda or similar environments; relaxes timeouts, disables keep-alives
 * to avoid issues with execution environments being frozen and resumed, etc.
 * @export
 * @class Lambda
 */ class Lambda extends topic_configuration_1.TopicClientConfiguration {
    /**
     * Provides the latest recommended configuration for a lambda environment.  NOTE: this configuration may
     * change in future releases to take advantage of improvements we identify for default configurations.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {CacheConfiguration}
     */ static latest(loggerFactory = defaultLoggerFactory) {
        const grpcConfig = new topics_1.StaticTopicGrpcConfiguration({
            numClients: 1
        });
        const transportStrategy = new topics_1.StaticTopicTransportStrategy({
            grpcConfiguration: grpcConfig
        });
        return new Lambda({
            loggerFactory: loggerFactory,
            transportStrategy: transportStrategy,
            throwOnErrors: false
        });
    }
}
exports.Lambda = Lambda; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9waWMtY29uZmlndXJhdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29uZmlnL3RvcGljLWNvbmZpZ3VyYXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLDZFQUE2RTtBQUM3RSwrREFHK0I7QUFDL0IsK0NBRzRCO0FBRTVCLE1BQU0sb0JBQW9CLEdBQ3hCLElBQUksb0RBQTJCLEVBQUUsQ0FBQztBQUVwQzs7OztHQUlHO0FBQ0gsTUFBYSxPQUFRLFNBQVEsOENBQXdCO0lBQ25EOzs7OztPQUtHO0lBQ0gsTUFBTSxDQUFDLE1BQU0sQ0FDWCxnQkFBc0Msb0JBQW9CO1FBRTFELE9BQU8sSUFBSSw4Q0FBd0IsQ0FBQztZQUNsQyxhQUFhLEVBQUUsYUFBYTtZQUM1QixpQkFBaUIsRUFBRSxJQUFJLHFDQUE0QixDQUFDO2dCQUNsRCxpQkFBaUIsRUFBRSxJQUFJLHFDQUE0QixDQUFDO29CQUNsRCxVQUFVLEVBQUUsQ0FBQztvQkFDYiwyQkFBMkIsRUFBRSxDQUFDO29CQUM5QixlQUFlLEVBQUUsSUFBSTtvQkFDckIsa0JBQWtCLEVBQUUsSUFBSTtpQkFDekIsQ0FBQzthQUNILENBQUM7WUFDRixhQUFhLEVBQUUsS0FBSztTQUNyQixDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUF2QkQsMEJBdUJDO0FBRUQ7Ozs7O0dBS0c7QUFDSCxNQUFhLE1BQU8sU0FBUSw4Q0FBd0I7SUFDbEQ7Ozs7O09BS0c7SUFDSCxNQUFNLENBQUMsTUFBTSxDQUNYLGdCQUFzQyxvQkFBb0I7UUFFMUQsTUFBTSxVQUFVLEdBQUcsSUFBSSxxQ0FBNEIsQ0FBQztZQUNsRCxVQUFVLEVBQUUsQ0FBQztTQUNkLENBQUMsQ0FBQztRQUNILE1BQU0saUJBQWlCLEdBQUcsSUFBSSxxQ0FBNEIsQ0FBQztZQUN6RCxpQkFBaUIsRUFBRSxVQUFVO1NBQzlCLENBQUMsQ0FBQztRQUNILE9BQU8sSUFBSSxNQUFNLENBQUM7WUFDaEIsYUFBYSxFQUFFLGFBQWE7WUFDNUIsaUJBQWlCLEVBQUUsaUJBQWlCO1lBQ3BDLGFBQWEsRUFBRSxLQUFLO1NBQ3JCLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQXRCRCx3QkFzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01vbWVudG9Mb2dnZXJGYWN0b3J5fSBmcm9tICdAZ29tb21lbnRvL3Nkay1jb3JlJztcbmltcG9ydCB7RGVmYXVsdE1vbWVudG9Mb2dnZXJGYWN0b3J5fSBmcm9tICcuL2xvZ2dpbmcvZGVmYXVsdC1tb21lbnRvLWxvZ2dlcic7XG5pbXBvcnQge1xuICBUb3BpY0NsaWVudENvbmZpZ3VyYXRpb24sXG4gIFRvcGljQ29uZmlndXJhdGlvbixcbn0gZnJvbSAnLi90b3BpYy1jb25maWd1cmF0aW9uJztcbmltcG9ydCB7XG4gIFN0YXRpY1RvcGljR3JwY0NvbmZpZ3VyYXRpb24sXG4gIFN0YXRpY1RvcGljVHJhbnNwb3J0U3RyYXRlZ3ksXG59IGZyb20gJy4vdHJhbnNwb3J0L3RvcGljcyc7XG5cbmNvbnN0IGRlZmF1bHRMb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeSA9XG4gIG5ldyBEZWZhdWx0TW9tZW50b0xvZ2dlckZhY3RvcnkoKTtcblxuLyoqXG4gKiBEZWZhdWx0IGNvbmZpZyBwcm92aWRlcyBkZWZhdWx0cyBzdWl0YWJsZSBmb3IgbW9zdCBlbnZpcm9ubWVudHM7IHByaW9yaXRpemVzIHN1Y2Nlc3Mgb2YgcHVibGlzaGluZyBhbmQgcmVjZWl2aW5nIG1lc3NhZ2VzLlxuICogQGV4cG9ydFxuICogQGNsYXNzIERlZmF1bHRcbiAqL1xuZXhwb3J0IGNsYXNzIERlZmF1bHQgZXh0ZW5kcyBUb3BpY0NsaWVudENvbmZpZ3VyYXRpb24ge1xuICAvKipcbiAgICogUHJvdmlkZXMgdGhlIGxhdGVzdCByZWNvbW1lbmRlZCBjb25maWd1cmF0aW9uIGZvciBhIGRlZmF1bHQgZW52aXJvbm1lbnQuICBOT1RFOiB0aGlzIGNvbmZpZ3VyYXRpb24gbWF5XG4gICAqIGNoYW5nZSBpbiBmdXR1cmUgcmVsZWFzZXMgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgaW1wcm92ZW1lbnRzIHdlIGlkZW50aWZ5IGZvciBkZWZhdWx0IGNvbmZpZ3VyYXRpb25zLlxuICAgKiBAcGFyYW0ge01vbWVudG9Mb2dnZXJGYWN0b3J5fSBbbG9nZ2VyRmFjdG9yeT1kZWZhdWx0TG9nZ2VyRmFjdG9yeV1cbiAgICogQHJldHVybnMge1RvcGljQ29uZmlndXJhdGlvbn1cbiAgICovXG4gIHN0YXRpYyBsYXRlc3QoXG4gICAgbG9nZ2VyRmFjdG9yeTogTW9tZW50b0xvZ2dlckZhY3RvcnkgPSBkZWZhdWx0TG9nZ2VyRmFjdG9yeVxuICApOiBUb3BpY0NvbmZpZ3VyYXRpb24ge1xuICAgIHJldHVybiBuZXcgVG9waWNDbGllbnRDb25maWd1cmF0aW9uKHtcbiAgICAgIGxvZ2dlckZhY3Rvcnk6IGxvZ2dlckZhY3RvcnksXG4gICAgICB0cmFuc3BvcnRTdHJhdGVneTogbmV3IFN0YXRpY1RvcGljVHJhbnNwb3J0U3RyYXRlZ3koe1xuICAgICAgICBncnBjQ29uZmlndXJhdGlvbjogbmV3IFN0YXRpY1RvcGljR3JwY0NvbmZpZ3VyYXRpb24oe1xuICAgICAgICAgIG51bUNsaWVudHM6IDEsXG4gICAgICAgICAga2VlcEFsaXZlUGVybWl0V2l0aG91dENhbGxzOiAxLFxuICAgICAgICAgIGtlZXBBbGl2ZVRpbWVNczogNTAwMCxcbiAgICAgICAgICBrZWVwQWxpdmVUaW1lb3V0TXM6IDEwMDAsXG4gICAgICAgIH0pLFxuICAgICAgfSksXG4gICAgICB0aHJvd09uRXJyb3JzOiBmYWxzZSxcbiAgICB9KTtcbiAgfVxufVxuXG4vKipcbiAqIERlZmF1bHQgY29uZmlnIHByb3ZpZGVzIGRlZmF1bHRzIHN1aXRhYmxlIGZvciBBV1MgbGFtYmRhIG9yIHNpbWlsYXIgZW52aXJvbm1lbnRzOyByZWxheGVzIHRpbWVvdXRzLCBkaXNhYmxlcyBrZWVwLWFsaXZlc1xuICogdG8gYXZvaWQgaXNzdWVzIHdpdGggZXhlY3V0aW9uIGVudmlyb25tZW50cyBiZWluZyBmcm96ZW4gYW5kIHJlc3VtZWQsIGV0Yy5cbiAqIEBleHBvcnRcbiAqIEBjbGFzcyBMYW1iZGFcbiAqL1xuZXhwb3J0IGNsYXNzIExhbWJkYSBleHRlbmRzIFRvcGljQ2xpZW50Q29uZmlndXJhdGlvbiB7XG4gIC8qKlxuICAgKiBQcm92aWRlcyB0aGUgbGF0ZXN0IHJlY29tbWVuZGVkIGNvbmZpZ3VyYXRpb24gZm9yIGEgbGFtYmRhIGVudmlyb25tZW50LiAgTk9URTogdGhpcyBjb25maWd1cmF0aW9uIG1heVxuICAgKiBjaGFuZ2UgaW4gZnV0dXJlIHJlbGVhc2VzIHRvIHRha2UgYWR2YW50YWdlIG9mIGltcHJvdmVtZW50cyB3ZSBpZGVudGlmeSBmb3IgZGVmYXVsdCBjb25maWd1cmF0aW9ucy5cbiAgICogQHBhcmFtIHtNb21lbnRvTG9nZ2VyRmFjdG9yeX0gW2xvZ2dlckZhY3Rvcnk9ZGVmYXVsdExvZ2dlckZhY3RvcnldXG4gICAqIEByZXR1cm5zIHtDYWNoZUNvbmZpZ3VyYXRpb259XG4gICAqL1xuICBzdGF0aWMgbGF0ZXN0KFxuICAgIGxvZ2dlckZhY3Rvcnk6IE1vbWVudG9Mb2dnZXJGYWN0b3J5ID0gZGVmYXVsdExvZ2dlckZhY3RvcnlcbiAgKTogVG9waWNDbGllbnRDb25maWd1cmF0aW9uIHtcbiAgICBjb25zdCBncnBjQ29uZmlnID0gbmV3IFN0YXRpY1RvcGljR3JwY0NvbmZpZ3VyYXRpb24oe1xuICAgICAgbnVtQ2xpZW50czogMSxcbiAgICB9KTtcbiAgICBjb25zdCB0cmFuc3BvcnRTdHJhdGVneSA9IG5ldyBTdGF0aWNUb3BpY1RyYW5zcG9ydFN0cmF0ZWd5KHtcbiAgICAgIGdycGNDb25maWd1cmF0aW9uOiBncnBjQ29uZmlnLFxuICAgIH0pO1xuICAgIHJldHVybiBuZXcgTGFtYmRhKHtcbiAgICAgIGxvZ2dlckZhY3Rvcnk6IGxvZ2dlckZhY3RvcnksXG4gICAgICB0cmFuc3BvcnRTdHJhdGVneTogdHJhbnNwb3J0U3RyYXRlZ3ksXG4gICAgICB0aHJvd09uRXJyb3JzOiBmYWxzZSxcbiAgICB9KTtcbiAgfVxufVxuIl19

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/storage-configuration.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StorageClientConfiguration = void 0;
class StorageClientConfiguration {
    constructor(props){
        this.loggerFactory = props.loggerFactory;
        this.transportStrategy = props.transportStrategy;
        this.retryStrategy = props.retryStrategy;
    }
    getLoggerFactory() {
        return this.loggerFactory;
    }
    getTransportStrategy() {
        return this.transportStrategy;
    }
    getRetryStrategy() {
        return this.retryStrategy;
    }
    withClientTimeoutMillis(clientTimeoutMillis) {
        return new StorageClientConfiguration({
            loggerFactory: this.loggerFactory,
            transportStrategy: this.transportStrategy.withClientTimeoutMillis(clientTimeoutMillis),
            retryStrategy: this.retryStrategy
        });
    }
    withTransportStrategy(transportStrategy) {
        return new StorageClientConfiguration({
            loggerFactory: this.loggerFactory,
            transportStrategy: transportStrategy,
            retryStrategy: this.retryStrategy
        });
    }
    withRetryStrategy(retryStrategy) {
        return new StorageClientConfiguration({
            loggerFactory: this.loggerFactory,
            transportStrategy: this.transportStrategy,
            retryStrategy: retryStrategy
        });
    }
}
exports.StorageClientConfiguration = StorageClientConfiguration; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS1jb25maWd1cmF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbmZpZy9zdG9yYWdlLWNvbmZpZ3VyYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBZ0VBLE1BQWEsMEJBQTBCO0lBS3JDLFlBQVksS0FBZ0M7UUFDMUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFDO1FBQ3pDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUMsaUJBQWlCLENBQUM7UUFDakQsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFDO0lBQzNDLENBQUM7SUFFRCxnQkFBZ0I7UUFDZCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUM7SUFDNUIsQ0FBQztJQUVELG9CQUFvQjtRQUNsQixPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztJQUNoQyxDQUFDO0lBRUQsZ0JBQWdCO1FBQ2QsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzVCLENBQUM7SUFFRCx1QkFBdUIsQ0FBQyxtQkFBMkI7UUFDakQsT0FBTyxJQUFJLDBCQUEwQixDQUFDO1lBQ3BDLGFBQWEsRUFBRSxJQUFJLENBQUMsYUFBYTtZQUNqQyxpQkFBaUIsRUFDZixJQUFJLENBQUMsaUJBQWlCLENBQUMsdUJBQXVCLENBQUMsbUJBQW1CLENBQUM7WUFDckUsYUFBYSxFQUFFLElBQUksQ0FBQyxhQUFhO1NBQ2xDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxxQkFBcUIsQ0FDbkIsaUJBQTJDO1FBRTNDLE9BQU8sSUFBSSwwQkFBMEIsQ0FBQztZQUNwQyxhQUFhLEVBQUUsSUFBSSxDQUFDLGFBQWE7WUFDakMsaUJBQWlCLEVBQUUsaUJBQWlCO1lBQ3BDLGFBQWEsRUFBRSxJQUFJLENBQUMsYUFBYTtTQUNsQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsaUJBQWlCLENBQUMsYUFBNEI7UUFDNUMsT0FBTyxJQUFJLDBCQUEwQixDQUFDO1lBQ3BDLGFBQWEsRUFBRSxJQUFJLENBQUMsYUFBYTtZQUNqQyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1lBQ3pDLGFBQWEsRUFBRSxhQUFhO1NBQzdCLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQWpERCxnRUFpREMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01vbWVudG9Mb2dnZXJGYWN0b3J5LCBSZXRyeVN0cmF0ZWd5fSBmcm9tICcuLi8nO1xuaW1wb3J0IHtTdG9yYWdlVHJhbnNwb3J0U3RyYXRlZ3l9IGZyb20gJy4vdHJhbnNwb3J0L3N0b3JhZ2UnO1xuXG4vKipcbiAqIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgTW9tZW50byBTdG9yYWdlQ2xpZW50XG4gKlxuICogQGV4cG9ydFxuICogQGludGVyZmFjZSBTdG9yYWdlQ29uZmlndXJhdGlvblxuICovXG5leHBvcnQgaW50ZXJmYWNlIFN0b3JhZ2VDb25maWd1cmF0aW9uIHtcbiAgLyoqXG4gICAqIEByZXR1cm5zIHtNb21lbnRvTG9nZ2VyRmFjdG9yeX0gdGhlIGN1cnJlbnQgY29uZmlndXJhdGlvbiBvcHRpb25zIGZvciBsb2dnaW5nIHZlcmJvc2l0eSBhbmQgZm9ybWF0XG4gICAqL1xuICBnZXRMb2dnZXJGYWN0b3J5KCk6IE1vbWVudG9Mb2dnZXJGYWN0b3J5O1xuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7U3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5fSB0aGUgY3VycmVudCBjb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIHdpcmUgaW50ZXJhY3Rpb25zIHdpdGggdGhlIE1vbWVudG8gc2VydmljZVxuICAgKi9cbiAgZ2V0VHJhbnNwb3J0U3RyYXRlZ3koKTogU3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5O1xuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7UmV0cnlTdHJhdGVneX0gdGhlIGN1cnJlbnQgY29uZmlndXJhdGlvbiBvcHRpb25zIGZvciBob3cgYW5kIHdoZW4gZmFpbGVkIHJlcXVlc3RzIHdpbGwgYmUgcmV0cmllZFxuICAgKi9cbiAgZ2V0UmV0cnlTdHJhdGVneSgpOiBSZXRyeVN0cmF0ZWd5O1xuXG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb3B5IGNvbnN0cnVjdG9yIHRoYXQgdXBkYXRlcyB0aGUgY2xpZW50LXNpZGUgdGltZW91dCBzZXR0aW5nIGluIHRoZSBUcmFuc3BvcnRTdHJhdGVneVxuICAgKiBAcGFyYW0ge251bWJlcn0gY2xpZW50VGltZW91dE1pbGxpc1xuICAgKiBAcmV0dXJucyB7U3RvcmFnZUNvbmZpZ3VyYXRpb259IGEgbmV3IENvbmZpZ3VyYXRpb24gb2JqZWN0IHdpdGggaXRzIFRyYW5zcG9ydFN0cmF0ZWd5IHVwZGF0ZWQgdG8gdXNlIHRoZSBzcGVjaWZpZWQgY2xpZW50IHRpbWVvdXRcbiAgICovXG4gIHdpdGhDbGllbnRUaW1lb3V0TWlsbGlzKGNsaWVudFRpbWVvdXRNaWxsaXM6IG51bWJlcik6IFN0b3JhZ2VDb25maWd1cmF0aW9uO1xuXG4gIC8qKlxuICAgKiBDb3B5IGNvbnN0cnVjdG9yIGZvciBvdmVycmlkaW5nIFRyYW5zcG9ydFN0cmF0ZWd5XG4gICAqIEBwYXJhbSB7U3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5fSB0cmFuc3BvcnRTdHJhdGVneVxuICAgKiBAcmV0dXJucyB7U3RvcmFnZUNvbmZpZ3VyYXRpb259IGEgbmV3IENvbmZpZ3VyYXRpb24gb2JqZWN0IHdpdGggdGhlIHNwZWNpZmllZCBUcmFuc3BvcnRTdHJhdGVneVxuICAgKi9cbiAgd2l0aFRyYW5zcG9ydFN0cmF0ZWd5KFxuICAgIHRyYW5zcG9ydFN0cmF0ZWd5OiBTdG9yYWdlVHJhbnNwb3J0U3RyYXRlZ3lcbiAgKTogU3RvcmFnZUNvbmZpZ3VyYXRpb247XG5cbiAgLyoqXG4gICAqIENvcHkgY29uc3RydWN0b3IgZm9yIG92ZXJyaWRpbmcgUmV0cnlTdHJhdGVneVxuICAgKiBAcGFyYW0ge1JldHJ5U3RyYXRlZ3l9IHJldHJ5U3RyYXRlZ3lcbiAgICogQHJldHVybnMge1N0b3JhZ2VDb25maWd1cmF0aW9ufSBhIG5ldyBDb25maWd1cmF0aW9uIG9iamVjdCB3aXRoIHRoZSBzcGVjaWZpZWQgUmV0cnlTdHJhdGVneVxuICAgKi9cbiAgd2l0aFJldHJ5U3RyYXRlZ3kocmV0cnlTdHJhdGVneTogUmV0cnlTdHJhdGVneSk6IFN0b3JhZ2VDb25maWd1cmF0aW9uO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0b3JhZ2VDb25maWd1cmF0aW9uUHJvcHMge1xuICAvKipcbiAgICogQ29uZmlndXJlcyBsb2dnaW5nIHZlcmJvc2l0eSBhbmQgZm9ybWF0XG4gICAqL1xuICBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeTtcbiAgLyoqXG4gICAqIENvbmZpZ3VyZXMgbG93LWxldmVsIG9wdGlvbnMgZm9yIG5ldHdvcmsgaW50ZXJhY3Rpb25zIHdpdGggdGhlIE1vbWVudG8gc2VydmljZVxuICAgKi9cbiAgdHJhbnNwb3J0U3RyYXRlZ3k6IFN0b3JhZ2VUcmFuc3BvcnRTdHJhdGVneTtcbiAgLyoqXG4gICAqIENvbmZpZ3VyZXMgaG93IGFuZCB3aGVuIGZhaWxlZCByZXF1ZXN0cyB3aWxsIGJlIHJldHJpZWRcbiAgICovXG4gIHJldHJ5U3RyYXRlZ3k6IFJldHJ5U3RyYXRlZ3k7XG59XG5cbmV4cG9ydCBjbGFzcyBTdG9yYWdlQ2xpZW50Q29uZmlndXJhdGlvbiBpbXBsZW1lbnRzIFN0b3JhZ2VDb25maWd1cmF0aW9uIHtcbiAgcHJpdmF0ZSByZWFkb25seSBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeTtcbiAgcHJpdmF0ZSByZWFkb25seSB0cmFuc3BvcnRTdHJhdGVneTogU3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5O1xuICBwcml2YXRlIHJlYWRvbmx5IHJldHJ5U3RyYXRlZ3k6IFJldHJ5U3RyYXRlZ3k7XG5cbiAgY29uc3RydWN0b3IocHJvcHM6IFN0b3JhZ2VDb25maWd1cmF0aW9uUHJvcHMpIHtcbiAgICB0aGlzLmxvZ2dlckZhY3RvcnkgPSBwcm9wcy5sb2dnZXJGYWN0b3J5O1xuICAgIHRoaXMudHJhbnNwb3J0U3RyYXRlZ3kgPSBwcm9wcy50cmFuc3BvcnRTdHJhdGVneTtcbiAgICB0aGlzLnJldHJ5U3RyYXRlZ3kgPSBwcm9wcy5yZXRyeVN0cmF0ZWd5O1xuICB9XG5cbiAgZ2V0TG9nZ2VyRmFjdG9yeSgpOiBNb21lbnRvTG9nZ2VyRmFjdG9yeSB7XG4gICAgcmV0dXJuIHRoaXMubG9nZ2VyRmFjdG9yeTtcbiAgfVxuXG4gIGdldFRyYW5zcG9ydFN0cmF0ZWd5KCk6IFN0b3JhZ2VUcmFuc3BvcnRTdHJhdGVneSB7XG4gICAgcmV0dXJuIHRoaXMudHJhbnNwb3J0U3RyYXRlZ3k7XG4gIH1cblxuICBnZXRSZXRyeVN0cmF0ZWd5KCk6IFJldHJ5U3RyYXRlZ3kge1xuICAgIHJldHVybiB0aGlzLnJldHJ5U3RyYXRlZ3k7XG4gIH1cblxuICB3aXRoQ2xpZW50VGltZW91dE1pbGxpcyhjbGllbnRUaW1lb3V0TWlsbGlzOiBudW1iZXIpOiBTdG9yYWdlQ29uZmlndXJhdGlvbiB7XG4gICAgcmV0dXJuIG5ldyBTdG9yYWdlQ2xpZW50Q29uZmlndXJhdGlvbih7XG4gICAgICBsb2dnZXJGYWN0b3J5OiB0aGlzLmxvZ2dlckZhY3RvcnksXG4gICAgICB0cmFuc3BvcnRTdHJhdGVneTpcbiAgICAgICAgdGhpcy50cmFuc3BvcnRTdHJhdGVneS53aXRoQ2xpZW50VGltZW91dE1pbGxpcyhjbGllbnRUaW1lb3V0TWlsbGlzKSxcbiAgICAgIHJldHJ5U3RyYXRlZ3k6IHRoaXMucmV0cnlTdHJhdGVneSxcbiAgICB9KTtcbiAgfVxuXG4gIHdpdGhUcmFuc3BvcnRTdHJhdGVneShcbiAgICB0cmFuc3BvcnRTdHJhdGVneTogU3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5XG4gICk6IFN0b3JhZ2VDb25maWd1cmF0aW9uIHtcbiAgICByZXR1cm4gbmV3IFN0b3JhZ2VDbGllbnRDb25maWd1cmF0aW9uKHtcbiAgICAgIGxvZ2dlckZhY3Rvcnk6IHRoaXMubG9nZ2VyRmFjdG9yeSxcbiAgICAgIHRyYW5zcG9ydFN0cmF0ZWd5OiB0cmFuc3BvcnRTdHJhdGVneSxcbiAgICAgIHJldHJ5U3RyYXRlZ3k6IHRoaXMucmV0cnlTdHJhdGVneSxcbiAgICB9KTtcbiAgfVxuXG4gIHdpdGhSZXRyeVN0cmF0ZWd5KHJldHJ5U3RyYXRlZ3k6IFJldHJ5U3RyYXRlZ3kpOiBTdG9yYWdlQ29uZmlndXJhdGlvbiB7XG4gICAgcmV0dXJuIG5ldyBTdG9yYWdlQ2xpZW50Q29uZmlndXJhdGlvbih7XG4gICAgICBsb2dnZXJGYWN0b3J5OiB0aGlzLmxvZ2dlckZhY3RvcnksXG4gICAgICB0cmFuc3BvcnRTdHJhdGVneTogdGhpcy50cmFuc3BvcnRTdHJhdGVneSxcbiAgICAgIHJldHJ5U3RyYXRlZ3k6IHJldHJ5U3RyYXRlZ3ksXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/transport/storage/grpc-configuration.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
}); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JwYy1jb25maWd1cmF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbmZpZy90cmFuc3BvcnQvc3RvcmFnZS9ncnBjLWNvbmZpZ3VyYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZUdycGNDb25maWd1cmF0aW9uUHJvcHMge1xuICAvKipcbiAgICogbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0aGUgY2xpZW50IGlzIHdpbGxpbmcgdG8gd2FpdCBmb3IgYW4gUlBDIHRvIGNvbXBsZXRlIGJlZm9yZSBpdCBpcyB0ZXJtaW5hdGVkXG4gICAqIHdpdGggYSBEZWFkbGluZUV4Y2VlZGVkIGVycm9yLlxuICAgKi9cbiAgZGVhZGxpbmVNaWxsaXM6IG51bWJlcjtcbn1cblxuLyoqXG4gKiBFbmNhcHN1bGF0ZXMgZ1JQQyBjb25maWd1cmF0aW9uIHR1bmFibGVzLlxuICogQGV4cG9ydFxuICogQGludGVyZmFjZSBTdG9yYWdlR3JwY0NvbmZpZ3VyYXRpb25cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBTdG9yYWdlR3JwY0NvbmZpZ3VyYXRpb24ge1xuICAvKipcbiAgICogQHJldHVybnMge251bWJlcn0gbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0aGUgY2xpZW50IGlzIHdpbGxpbmcgdG8gd2FpdCBmb3IgYW4gUlBDIHRvIGNvbXBsZXRlIGJlZm9yZSBpdCBpcyB0ZXJtaW5hdGVkXG4gICAqIHdpdGggYSBEZWFkbGluZUV4Y2VlZGVkIGVycm9yLlxuICAgKi9cbiAgZ2V0RGVhZGxpbmVNaWxsaXMoKTogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBDb3B5IGNvbnN0cnVjdG9yIGZvciBvdmVycmlkaW5nIHRoZSBjbGllbnQtc2lkZSBkZWFkbGluZVxuICAgKiBAcGFyYW0ge251bWJlcn0gZGVhZGxpbmVNaWxsaXNcbiAgICogQHJldHVybnMge1N0b3JhZ2VHcnBjQ29uZmlndXJhdGlvbn0gYSBuZXcgU3RvcmFnZUdycGNDb25maWd1cmF0aW9uIHdpdGggdGhlIHNwZWNpZmllZCBjbGllbnQtc2lkZSBkZWFkbGluZVxuICAgKi9cbiAgd2l0aERlYWRsaW5lTWlsbGlzKGRlYWRsaW5lTWlsbGlzOiBudW1iZXIpOiBTdG9yYWdlR3JwY0NvbmZpZ3VyYXRpb247XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/transport/storage/transport-strategy.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StaticStorageTransportStrategy = exports.StaticStorageGrpcConfiguration = void 0;
class StaticStorageGrpcConfiguration {
    constructor(props){
        this.deadlineMillis = props.deadlineMillis;
    }
    getDeadlineMillis() {
        return this.deadlineMillis;
    }
    withDeadlineMillis(deadlineMillis) {
        return new StaticStorageGrpcConfiguration({
            deadlineMillis: deadlineMillis
        });
    }
}
exports.StaticStorageGrpcConfiguration = StaticStorageGrpcConfiguration;
class StaticStorageTransportStrategy {
    constructor(props){
        this.grpcConfig = props.grpcConfiguration;
    }
    getGrpcConfig() {
        return this.grpcConfig;
    }
    withGrpcConfig(grpcConfig) {
        return new StaticStorageTransportStrategy({
            grpcConfiguration: grpcConfig
        });
    }
    withClientTimeoutMillis(clientTimeoutMillis) {
        return new StaticStorageTransportStrategy({
            grpcConfiguration: this.grpcConfig.withDeadlineMillis(clientTimeoutMillis)
        });
    }
}
exports.StaticStorageTransportStrategy = StaticStorageTransportStrategy; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNwb3J0LXN0cmF0ZWd5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbmZpZy90cmFuc3BvcnQvc3RvcmFnZS90cmFuc3BvcnQtc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBdUNBLE1BQWEsOEJBQThCO0lBS3pDLFlBQVksS0FBb0M7UUFDOUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUMsY0FBYyxDQUFDO0lBQzdDLENBQUM7SUFFRCxpQkFBaUI7UUFDZixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDN0IsQ0FBQztJQUVELGtCQUFrQixDQUFDLGNBQXNCO1FBQ3ZDLE9BQU8sSUFBSSw4QkFBOEIsQ0FBQztZQUN4QyxjQUFjLEVBQUUsY0FBYztTQUMvQixDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUFsQkQsd0VBa0JDO0FBRUQsTUFBYSw4QkFBOEI7SUFLekMsWUFBWSxLQUFvQztRQUM5QyxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQztJQUM1QyxDQUFDO0lBRUQsYUFBYTtRQUNYLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN6QixDQUFDO0lBRUQsY0FBYyxDQUNaLFVBQW9DO1FBRXBDLE9BQU8sSUFBSSw4QkFBOEIsQ0FBQztZQUN4QyxpQkFBaUIsRUFBRSxVQUFVO1NBQzlCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCx1QkFBdUIsQ0FDckIsbUJBQTJCO1FBRTNCLE9BQU8sSUFBSSw4QkFBOEIsQ0FBQztZQUN4QyxpQkFBaUIsRUFDZixJQUFJLENBQUMsVUFBVSxDQUFDLGtCQUFrQixDQUFDLG1CQUFtQixDQUFDO1NBQzFELENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQTdCRCx3RUE2QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBTdG9yYWdlR3JwY0NvbmZpZ3VyYXRpb24sXG4gIFN0b3JhZ2VHcnBjQ29uZmlndXJhdGlvblByb3BzLFxufSBmcm9tICcuL2dycGMtY29uZmlndXJhdGlvbic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5IHtcbiAgLyoqXG4gICAqIENvbmZpZ3VyZXMgdGhlIGxvdy1sZXZlbCBnUlBDIHNldHRpbmdzIGZvciB0aGUgTW9tZW50byBjbGllbnQncyBjb21tdW5pY2F0aW9uXG4gICAqIHdpdGggdGhlIE1vbWVudG8gc2VydmVyLlxuICAgKiBAcmV0dXJucyB7U3RvcmFnZUdycGNDb25maWd1cmF0aW9ufVxuICAgKi9cbiAgZ2V0R3JwY0NvbmZpZygpOiBTdG9yYWdlR3JwY0NvbmZpZ3VyYXRpb247XG5cbiAgLyoqXG4gICAqIENvcHkgY29uc3RydWN0b3IgZm9yIG92ZXJyaWRpbmcgdGhlIGdSUEMgY29uZmlndXJhdGlvblxuICAgKiBAcGFyYW0ge1RvcGljR3JwY0NvbmZpZ3VyYXRpb259IGdycGNDb25maWdcbiAgICogQHJldHVybnMge1RvcGljVHJhbnNwb3J0U3RyYXRlZ3l9IGEgbmV3IFN0b3JhZ2VUcmFuc3BvcnRTdHJhdGVneSB3aXRoIHRoZSBzcGVjaWZpZWQgZ1JQQyBjb25maWcuXG4gICAqL1xuICB3aXRoR3JwY0NvbmZpZyhcbiAgICBncnBjQ29uZmlnOiBTdG9yYWdlR3JwY0NvbmZpZ3VyYXRpb25cbiAgKTogU3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5O1xuXG4gIC8qKlxuICAgKiBDb3B5IGNvbnN0cnVjdG9yIHRvIHVwZGF0ZSB0aGUgY2xpZW50LXNpZGUgdGltZW91dFxuICAgKiBAcGFyYW0ge251bWJlcn0gY2xpZW50VGltZW91dE1pbGxpc1xuICAgKiBAcmV0dXJucyB7U3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5fSBhIG5ldyBTdG9yYWdlVHJhbnNwb3J0U3RyYXRlZ3kgd2l0aCB0aGUgc3BlY2lmaWVkIGNsaWVudCB0aW1lb3V0XG4gICAqL1xuICB3aXRoQ2xpZW50VGltZW91dE1pbGxpcyhcbiAgICBjbGllbnRUaW1lb3V0TWlsbGlzOiBudW1iZXJcbiAgKTogU3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0b3JhZ2VUcmFuc3BvcnRTdHJhdGVneVByb3BzIHtcbiAgLyoqXG4gICAqIGxvdy1sZXZlbCBnUlBDIHNldHRpbmdzIGZvciBjb21tdW5pY2F0aW9uIHdpdGggdGhlIE1vbWVudG8gc2VydmVyXG4gICAqL1xuICBncnBjQ29uZmlndXJhdGlvbjogU3RvcmFnZUdycGNDb25maWd1cmF0aW9uO1xufVxuXG5leHBvcnQgY2xhc3MgU3RhdGljU3RvcmFnZUdycGNDb25maWd1cmF0aW9uXG4gIGltcGxlbWVudHMgU3RvcmFnZUdycGNDb25maWd1cmF0aW9uXG57XG4gIHByaXZhdGUgcmVhZG9ubHkgZGVhZGxpbmVNaWxsaXM6IG51bWJlcjtcblxuICBjb25zdHJ1Y3Rvcihwcm9wczogU3RvcmFnZUdycGNDb25maWd1cmF0aW9uUHJvcHMpIHtcbiAgICB0aGlzLmRlYWRsaW5lTWlsbGlzID0gcHJvcHMuZGVhZGxpbmVNaWxsaXM7XG4gIH1cblxuICBnZXREZWFkbGluZU1pbGxpcygpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmRlYWRsaW5lTWlsbGlzO1xuICB9XG5cbiAgd2l0aERlYWRsaW5lTWlsbGlzKGRlYWRsaW5lTWlsbGlzOiBudW1iZXIpOiBTdG9yYWdlR3JwY0NvbmZpZ3VyYXRpb24ge1xuICAgIHJldHVybiBuZXcgU3RhdGljU3RvcmFnZUdycGNDb25maWd1cmF0aW9uKHtcbiAgICAgIGRlYWRsaW5lTWlsbGlzOiBkZWFkbGluZU1pbGxpcyxcbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU3RhdGljU3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5XG4gIGltcGxlbWVudHMgU3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5XG57XG4gIHByaXZhdGUgcmVhZG9ubHkgZ3JwY0NvbmZpZzogU3RvcmFnZUdycGNDb25maWd1cmF0aW9uO1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzOiBTdG9yYWdlVHJhbnNwb3J0U3RyYXRlZ3lQcm9wcykge1xuICAgIHRoaXMuZ3JwY0NvbmZpZyA9IHByb3BzLmdycGNDb25maWd1cmF0aW9uO1xuICB9XG5cbiAgZ2V0R3JwY0NvbmZpZygpOiBTdG9yYWdlR3JwY0NvbmZpZ3VyYXRpb24ge1xuICAgIHJldHVybiB0aGlzLmdycGNDb25maWc7XG4gIH1cblxuICB3aXRoR3JwY0NvbmZpZyhcbiAgICBncnBjQ29uZmlnOiBTdG9yYWdlR3JwY0NvbmZpZ3VyYXRpb25cbiAgKTogU3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5IHtcbiAgICByZXR1cm4gbmV3IFN0YXRpY1N0b3JhZ2VUcmFuc3BvcnRTdHJhdGVneSh7XG4gICAgICBncnBjQ29uZmlndXJhdGlvbjogZ3JwY0NvbmZpZyxcbiAgICB9KTtcbiAgfVxuXG4gIHdpdGhDbGllbnRUaW1lb3V0TWlsbGlzKFxuICAgIGNsaWVudFRpbWVvdXRNaWxsaXM6IG51bWJlclxuICApOiBTdG9yYWdlVHJhbnNwb3J0U3RyYXRlZ3kge1xuICAgIHJldHVybiBuZXcgU3RhdGljU3RvcmFnZVRyYW5zcG9ydFN0cmF0ZWd5KHtcbiAgICAgIGdycGNDb25maWd1cmF0aW9uOlxuICAgICAgICB0aGlzLmdycGNDb25maWcud2l0aERlYWRsaW5lTWlsbGlzKGNsaWVudFRpbWVvdXRNaWxsaXMpLFxuICAgIH0pO1xuICB9XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/transport/storage/index.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/transport/storage/grpc-configuration.js [app-route] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/transport/storage/transport-strategy.js [app-route] (ecmascript)"), exports); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29uZmlnL3RyYW5zcG9ydC9zdG9yYWdlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx1REFBcUM7QUFDckMsdURBQXFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9ncnBjLWNvbmZpZ3VyYXRpb24nO1xuZXhwb3J0ICogZnJvbSAnLi90cmFuc3BvcnQtc3RyYXRlZ3knO1xuIl19

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/retry/storage-default-eligibility-strategy.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DefaultStorageEligibilityStrategy = void 0;
const constants_1 = __turbopack_require__("[project]/node_modules/@grpc/grpc-js/build/src/constants.js [app-route] (ecmascript)");
const retryableGrpcStatusCodes = [
    // including all the status codes for reference, but
    // commenting out the ones we don't want to retry on for now.
    // Status.OK,
    // Status.CANCELLED,
    // Status.UNKNOWN,
    // Status.INVALID_ARGUMENT,
    constants_1.Status.DEADLINE_EXCEEDED,
    // Status.NOT_FOUND,
    // Status.ALREADY_EXISTS,
    // Status.PERMISSION_DENIED,
    // Status.RESOURCE_EXHAUSTED,
    // Status.FAILED_PRECONDITION,
    // Status.ABORTED,
    // Status.OUT_OF_RANGE,
    // Status.UNIMPLEMENTED,
    constants_1.Status.INTERNAL,
    constants_1.Status.UNAVAILABLE
];
const retryableRequestTypes = [
    '/store.Store/Put',
    '/store.Store/Get',
    '/store.Store/Delete'
];
class DefaultStorageEligibilityStrategy {
    constructor(loggerFactory){
        this.logger = loggerFactory.getLogger(this);
    }
    isEligibleForRetry(props) {
        if (!retryableGrpcStatusCodes.includes(props.grpcStatus.code)) {
            this.logger.debug(`Response with status code ${props.grpcStatus.code} is not retryable.`);
            return false;
        }
        // If retry disposition metadata is available and the value is "retryable",
        // it is safe to retry regardless of idempotency.
        const retryMetadata = this.getRetryDispositionMetadata(props.grpcStatus.metadata);
        if (retryMetadata === 'retryable') {
            return true;
        }
        // Otherwise, if there is no retry metadata or the retry disposition is
        // "possibly_retryable", it is safe to retry only idempotent commands.
        if (!retryableRequestTypes.includes(props.grpcRequest.path)) {
            this.logger.debug(`Request with type ${props.grpcRequest.path} is not retryable.`);
            return false;
        }
        return true;
    }
    getRetryDispositionMetadata(metadata) {
        const retryMetadata = metadata.get('retry_disposition');
        if (retryMetadata.length === 1) {
            return retryMetadata[0].toString();
        }
        return undefined;
    }
}
exports.DefaultStorageEligibilityStrategy = DefaultStorageEligibilityStrategy; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS1kZWZhdWx0LWVsaWdpYmlsaXR5LXN0cmF0ZWd5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbmZpZy9yZXRyeS9zdG9yYWdlLWRlZmF1bHQtZWxpZ2liaWxpdHktc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsaUVBQXlEO0FBT3pELE1BQU0sd0JBQXdCLEdBQWtCO0lBQzlDLG9EQUFvRDtJQUNwRCw2REFBNkQ7SUFFN0QsYUFBYTtJQUNiLG9CQUFvQjtJQUNwQixrQkFBa0I7SUFDbEIsMkJBQTJCO0lBQzNCLGtCQUFNLENBQUMsaUJBQWlCO0lBQ3hCLG9CQUFvQjtJQUNwQix5QkFBeUI7SUFDekIsNEJBQTRCO0lBQzVCLDZCQUE2QjtJQUM3Qiw4QkFBOEI7SUFDOUIsa0JBQWtCO0lBQ2xCLHVCQUF1QjtJQUN2Qix3QkFBd0I7SUFDeEIsa0JBQU0sQ0FBQyxRQUFRO0lBQ2Ysa0JBQU0sQ0FBQyxXQUFXO0lBQ2xCLG9CQUFvQjtJQUNwQix5QkFBeUI7Q0FDMUIsQ0FBQztBQUVGLE1BQU0scUJBQXFCLEdBQWtCO0lBQzNDLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIscUJBQXFCO0NBQ3RCLENBQUM7QUFFRixNQUFhLGlDQUFpQztJQUc1QyxZQUFZLGFBQW1DO1FBQzdDLElBQUksQ0FBQyxNQUFNLEdBQUcsYUFBYSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBRUQsa0JBQWtCLENBQUMsS0FBNEI7UUFDN0MsSUFBSSxDQUFDLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzdELElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUNmLDZCQUE2QixLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksb0JBQW9CLENBQ3ZFLENBQUM7WUFDRixPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsMkVBQTJFO1FBQzNFLGlEQUFpRDtRQUNqRCxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsMkJBQTJCLENBQ3BELEtBQUssQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUMxQixDQUFDO1FBQ0YsSUFBSSxhQUFhLEtBQUssV0FBVyxFQUFFO1lBQ2pDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCx1RUFBdUU7UUFDdkUsc0VBQXNFO1FBQ3RFLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUMzRCxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FDZixxQkFBcUIsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLG9CQUFvQixDQUNoRSxDQUFDO1lBQ0YsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVPLDJCQUEyQixDQUFDLFFBQWtCO1FBQ3BELE1BQU0sYUFBYSxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUN4RCxJQUFJLGFBQWEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQzlCLE9BQU8sYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ3BDO1FBQ0QsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztDQUNGO0FBM0NELDhFQTJDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9tZW50b0xvZ2dlciwgTW9tZW50b0xvZ2dlckZhY3Rvcnl9IGZyb20gJy4uLy4uLyc7XG5pbXBvcnQge1N0YXR1c30gZnJvbSAnQGdycGMvZ3JwYy1qcy9idWlsZC9zcmMvY29uc3RhbnRzJztcbmltcG9ydCB7XG4gIEVsaWdpYmlsaXR5U3RyYXRlZ3ksXG4gIEVsaWdpYmxlRm9yUmV0cnlQcm9wcyxcbn0gZnJvbSAnLi9lbGlnaWJpbGl0eS1zdHJhdGVneSc7XG5pbXBvcnQge01ldGFkYXRhfSBmcm9tICdAZ3JwYy9ncnBjLWpzJztcblxuY29uc3QgcmV0cnlhYmxlR3JwY1N0YXR1c0NvZGVzOiBBcnJheTxTdGF0dXM+ID0gW1xuICAvLyBpbmNsdWRpbmcgYWxsIHRoZSBzdGF0dXMgY29kZXMgZm9yIHJlZmVyZW5jZSwgYnV0XG4gIC8vIGNvbW1lbnRpbmcgb3V0IHRoZSBvbmVzIHdlIGRvbid0IHdhbnQgdG8gcmV0cnkgb24gZm9yIG5vdy5cblxuICAvLyBTdGF0dXMuT0ssXG4gIC8vIFN0YXR1cy5DQU5DRUxMRUQsXG4gIC8vIFN0YXR1cy5VTktOT1dOLFxuICAvLyBTdGF0dXMuSU5WQUxJRF9BUkdVTUVOVCxcbiAgU3RhdHVzLkRFQURMSU5FX0VYQ0VFREVELFxuICAvLyBTdGF0dXMuTk9UX0ZPVU5ELFxuICAvLyBTdGF0dXMuQUxSRUFEWV9FWElTVFMsXG4gIC8vIFN0YXR1cy5QRVJNSVNTSU9OX0RFTklFRCxcbiAgLy8gU3RhdHVzLlJFU09VUkNFX0VYSEFVU1RFRCxcbiAgLy8gU3RhdHVzLkZBSUxFRF9QUkVDT05ESVRJT04sXG4gIC8vIFN0YXR1cy5BQk9SVEVELFxuICAvLyBTdGF0dXMuT1VUX09GX1JBTkdFLFxuICAvLyBTdGF0dXMuVU5JTVBMRU1FTlRFRCxcbiAgU3RhdHVzLklOVEVSTkFMLFxuICBTdGF0dXMuVU5BVkFJTEFCTEUsXG4gIC8vIFN0YXR1cy5EQVRBX0xPU1MsXG4gIC8vIFN0YXR1cy5VTkFVVEhFTlRJQ0FURURcbl07XG5cbmNvbnN0IHJldHJ5YWJsZVJlcXVlc3RUeXBlczogQXJyYXk8c3RyaW5nPiA9IFtcbiAgJy9zdG9yZS5TdG9yZS9QdXQnLFxuICAnL3N0b3JlLlN0b3JlL0dldCcsXG4gICcvc3RvcmUuU3RvcmUvRGVsZXRlJyxcbl07XG5cbmV4cG9ydCBjbGFzcyBEZWZhdWx0U3RvcmFnZUVsaWdpYmlsaXR5U3RyYXRlZ3kgaW1wbGVtZW50cyBFbGlnaWJpbGl0eVN0cmF0ZWd5IHtcbiAgcHJpdmF0ZSByZWFkb25seSBsb2dnZXI6IE1vbWVudG9Mb2dnZXI7XG5cbiAgY29uc3RydWN0b3IobG9nZ2VyRmFjdG9yeTogTW9tZW50b0xvZ2dlckZhY3RvcnkpIHtcbiAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlckZhY3RvcnkuZ2V0TG9nZ2VyKHRoaXMpO1xuICB9XG5cbiAgaXNFbGlnaWJsZUZvclJldHJ5KHByb3BzOiBFbGlnaWJsZUZvclJldHJ5UHJvcHMpOiBib29sZWFuIHtcbiAgICBpZiAoIXJldHJ5YWJsZUdycGNTdGF0dXNDb2Rlcy5pbmNsdWRlcyhwcm9wcy5ncnBjU3RhdHVzLmNvZGUpKSB7XG4gICAgICB0aGlzLmxvZ2dlci5kZWJ1ZyhcbiAgICAgICAgYFJlc3BvbnNlIHdpdGggc3RhdHVzIGNvZGUgJHtwcm9wcy5ncnBjU3RhdHVzLmNvZGV9IGlzIG5vdCByZXRyeWFibGUuYFxuICAgICAgKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBJZiByZXRyeSBkaXNwb3NpdGlvbiBtZXRhZGF0YSBpcyBhdmFpbGFibGUgYW5kIHRoZSB2YWx1ZSBpcyBcInJldHJ5YWJsZVwiLFxuICAgIC8vIGl0IGlzIHNhZmUgdG8gcmV0cnkgcmVnYXJkbGVzcyBvZiBpZGVtcG90ZW5jeS5cbiAgICBjb25zdCByZXRyeU1ldGFkYXRhID0gdGhpcy5nZXRSZXRyeURpc3Bvc2l0aW9uTWV0YWRhdGEoXG4gICAgICBwcm9wcy5ncnBjU3RhdHVzLm1ldGFkYXRhXG4gICAgKTtcbiAgICBpZiAocmV0cnlNZXRhZGF0YSA9PT0gJ3JldHJ5YWJsZScpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIC8vIE90aGVyd2lzZSwgaWYgdGhlcmUgaXMgbm8gcmV0cnkgbWV0YWRhdGEgb3IgdGhlIHJldHJ5IGRpc3Bvc2l0aW9uIGlzXG4gICAgLy8gXCJwb3NzaWJseV9yZXRyeWFibGVcIiwgaXQgaXMgc2FmZSB0byByZXRyeSBvbmx5IGlkZW1wb3RlbnQgY29tbWFuZHMuXG4gICAgaWYgKCFyZXRyeWFibGVSZXF1ZXN0VHlwZXMuaW5jbHVkZXMocHJvcHMuZ3JwY1JlcXVlc3QucGF0aCkpIHtcbiAgICAgIHRoaXMubG9nZ2VyLmRlYnVnKFxuICAgICAgICBgUmVxdWVzdCB3aXRoIHR5cGUgJHtwcm9wcy5ncnBjUmVxdWVzdC5wYXRofSBpcyBub3QgcmV0cnlhYmxlLmBcbiAgICAgICk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBwcml2YXRlIGdldFJldHJ5RGlzcG9zaXRpb25NZXRhZGF0YShtZXRhZGF0YTogTWV0YWRhdGEpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICAgIGNvbnN0IHJldHJ5TWV0YWRhdGEgPSBtZXRhZGF0YS5nZXQoJ3JldHJ5X2Rpc3Bvc2l0aW9uJyk7XG4gICAgaWYgKHJldHJ5TWV0YWRhdGEubGVuZ3RoID09PSAxKSB7XG4gICAgICByZXR1cm4gcmV0cnlNZXRhZGF0YVswXS50b1N0cmluZygpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/retry/fixed-timeout-retry-strategy.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FixedTimeoutRetryStrategy = void 0;
const storage_default_eligibility_strategy_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/retry/storage-default-eligibility-strategy.js [app-route] (ecmascript)");
class FixedTimeoutRetryStrategy {
    constructor(props){
        var _a, _b, _c;
        this.logger = props.loggerFactory.getLogger(this);
        this.eligibilityStrategy = (_a = props.eligibilityStrategy) !== null && _a !== void 0 ? _a : new storage_default_eligibility_strategy_1.DefaultStorageEligibilityStrategy(props.loggerFactory);
        this.retryDelayIntervalMillis = (_b = props.retryDelayIntervalMillis) !== null && _b !== void 0 ? _b : 100;
        this.responseDataReceivedTimeoutMillis = (_c = props.responseDataReceivedTimeoutMillis) !== null && _c !== void 0 ? _c : 1000;
    }
    determineWhenToRetryRequest(props) {
        this.logger.debug(`Determining whether request is eligible for retry; status code: ${props.grpcStatus.code}, request type: ${props.grpcRequest.path}, attemptNumber: ${props.attemptNumber}`);
        if (!this.eligibilityStrategy.isEligibleForRetry(props)) {
            // null means do not retry
            return null;
        }
        this.logger.debug(`Request is eligible for retry (attempt ${props.attemptNumber}), retrying after ${this.retryDelayIntervalMillis} ms +/- jitter.`);
        // retry after a fixed time interval has passed (+/- some jitter)
        return addJitter(this.retryDelayIntervalMillis);
    }
}
exports.FixedTimeoutRetryStrategy = FixedTimeoutRetryStrategy;
function addJitter(whenToRetry) {
    return (0.2 * Math.random() + 0.9) * whenToRetry;
} //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZml4ZWQtdGltZW91dC1yZXRyeS1zdHJhdGVneS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb25maWcvcmV0cnkvZml4ZWQtdGltZW91dC1yZXRyeS1zdHJhdGVneS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFNQSxpR0FBeUY7QUFhekYsTUFBYSx5QkFBeUI7SUFNcEMsWUFBWSxLQUFxQzs7UUFDL0MsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsbUJBQW1CO1lBQ3RCLE1BQUEsS0FBSyxDQUFDLG1CQUFtQixtQ0FDekIsSUFBSSx3RUFBaUMsQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDN0QsSUFBSSxDQUFDLHdCQUF3QixHQUFHLE1BQUEsS0FBSyxDQUFDLHdCQUF3QixtQ0FBSSxHQUFHLENBQUM7UUFDdEUsSUFBSSxDQUFDLGlDQUFpQztZQUNwQyxNQUFBLEtBQUssQ0FBQyxpQ0FBaUMsbUNBQUksSUFBSSxDQUFDO0lBQ3BELENBQUM7SUFFRCwyQkFBMkIsQ0FDekIsS0FBdUM7UUFFdkMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQ2YsbUVBQW1FLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxtQkFBbUIsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLG9CQUFvQixLQUFLLENBQUMsYUFBYSxFQUFFLENBQzNLLENBQUM7UUFDRixJQUFJLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3ZELDBCQUEwQjtZQUMxQixPQUFPLElBQUksQ0FBQztTQUNiO1FBRUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQ2YsMENBQTBDLEtBQUssQ0FBQyxhQUFhLHFCQUFxQixJQUFJLENBQUMsd0JBQXdCLGlCQUFpQixDQUNqSSxDQUFDO1FBQ0YsaUVBQWlFO1FBQ2pFLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0lBQ2xELENBQUM7Q0FDRjtBQWpDRCw4REFpQ0M7QUFFRCxTQUFTLFNBQVMsQ0FBQyxXQUFtQjtJQUNwQyxPQUFPLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUMsR0FBRyxXQUFXLENBQUM7QUFDbkQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIERldGVybWluZXdoZW5Ub1JldHJ5UmVxdWVzdFByb3BzLFxuICBSZXRyeVN0cmF0ZWd5LFxufSBmcm9tICcuL3JldHJ5LXN0cmF0ZWd5JztcbmltcG9ydCB7RWxpZ2liaWxpdHlTdHJhdGVneX0gZnJvbSAnLi9lbGlnaWJpbGl0eS1zdHJhdGVneSc7XG5pbXBvcnQge01vbWVudG9Mb2dnZXJGYWN0b3J5LCBNb21lbnRvTG9nZ2VyfSBmcm9tICcuLi8uLic7XG5pbXBvcnQge0RlZmF1bHRTdG9yYWdlRWxpZ2liaWxpdHlTdHJhdGVneX0gZnJvbSAnLi9zdG9yYWdlLWRlZmF1bHQtZWxpZ2liaWxpdHktc3RyYXRlZ3knO1xuXG5leHBvcnQgaW50ZXJmYWNlIEZpeGVkVGltZW91dFJldHJ5U3RyYXRlZ3lQcm9wcyB7XG4gIGxvZ2dlckZhY3Rvcnk6IE1vbWVudG9Mb2dnZXJGYWN0b3J5O1xuICBlbGlnaWJpbGl0eVN0cmF0ZWd5PzogRWxpZ2liaWxpdHlTdHJhdGVneTtcblxuICAvLyBSZXRyeSByZXF1ZXN0IGFmdGVyIGEgZml4ZWQgdGltZSBpbnRlcnZhbCAoZGVmYXVsdHMgdG8gMTAwbXMpXG4gIHJldHJ5RGVsYXlJbnRlcnZhbE1pbGxpcz86IG51bWJlcjtcblxuICAvLyBOdW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRoZSBjbGllbnQgaXMgd2lsbGluZyB0byB3YWl0IGZvciByZXNwb25zZSBkYXRhIHRvIGJlIHJlY2VpdmVkIGJlZm9yZSByZXRyeWluZyAoZGVmYXVsdHMgdG8gMTAwMG1zKS4gQWZ0ZXIgdGhlIG92ZXJhcmNoaW5nIEdSUEMgY29uZmlnIGRlYWRsaW5lTWlsbGlzIGhhcyBiZWVuIHJlYWNoZWQsIHRoZSBjbGllbnQgd2lsbCB0ZXJtaW5hdGUgdGhlIFJQQyB3aXRoIGEgQ2FuY2VsbGVkIGVycm9yLlxuICByZXNwb25zZURhdGFSZWNlaXZlZFRpbWVvdXRNaWxsaXM/OiBudW1iZXI7XG59XG5cbmV4cG9ydCBjbGFzcyBGaXhlZFRpbWVvdXRSZXRyeVN0cmF0ZWd5IGltcGxlbWVudHMgUmV0cnlTdHJhdGVneSB7XG4gIHByaXZhdGUgcmVhZG9ubHkgbG9nZ2VyOiBNb21lbnRvTG9nZ2VyO1xuICBwcml2YXRlIHJlYWRvbmx5IGVsaWdpYmlsaXR5U3RyYXRlZ3k6IEVsaWdpYmlsaXR5U3RyYXRlZ3k7XG4gIHByaXZhdGUgcmVhZG9ubHkgcmV0cnlEZWxheUludGVydmFsTWlsbGlzOiBudW1iZXI7XG4gIHJlYWRvbmx5IHJlc3BvbnNlRGF0YVJlY2VpdmVkVGltZW91dE1pbGxpczogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzOiBGaXhlZFRpbWVvdXRSZXRyeVN0cmF0ZWd5UHJvcHMpIHtcbiAgICB0aGlzLmxvZ2dlciA9IHByb3BzLmxvZ2dlckZhY3RvcnkuZ2V0TG9nZ2VyKHRoaXMpO1xuICAgIHRoaXMuZWxpZ2liaWxpdHlTdHJhdGVneSA9XG4gICAgICBwcm9wcy5lbGlnaWJpbGl0eVN0cmF0ZWd5ID8/XG4gICAgICBuZXcgRGVmYXVsdFN0b3JhZ2VFbGlnaWJpbGl0eVN0cmF0ZWd5KHByb3BzLmxvZ2dlckZhY3RvcnkpO1xuICAgIHRoaXMucmV0cnlEZWxheUludGVydmFsTWlsbGlzID0gcHJvcHMucmV0cnlEZWxheUludGVydmFsTWlsbGlzID8/IDEwMDtcbiAgICB0aGlzLnJlc3BvbnNlRGF0YVJlY2VpdmVkVGltZW91dE1pbGxpcyA9XG4gICAgICBwcm9wcy5yZXNwb25zZURhdGFSZWNlaXZlZFRpbWVvdXRNaWxsaXMgPz8gMTAwMDtcbiAgfVxuXG4gIGRldGVybWluZVdoZW5Ub1JldHJ5UmVxdWVzdChcbiAgICBwcm9wczogRGV0ZXJtaW5ld2hlblRvUmV0cnlSZXF1ZXN0UHJvcHNcbiAgKTogbnVtYmVyIHwgbnVsbCB7XG4gICAgdGhpcy5sb2dnZXIuZGVidWcoXG4gICAgICBgRGV0ZXJtaW5pbmcgd2hldGhlciByZXF1ZXN0IGlzIGVsaWdpYmxlIGZvciByZXRyeTsgc3RhdHVzIGNvZGU6ICR7cHJvcHMuZ3JwY1N0YXR1cy5jb2RlfSwgcmVxdWVzdCB0eXBlOiAke3Byb3BzLmdycGNSZXF1ZXN0LnBhdGh9LCBhdHRlbXB0TnVtYmVyOiAke3Byb3BzLmF0dGVtcHROdW1iZXJ9YFxuICAgICk7XG4gICAgaWYgKCF0aGlzLmVsaWdpYmlsaXR5U3RyYXRlZ3kuaXNFbGlnaWJsZUZvclJldHJ5KHByb3BzKSkge1xuICAgICAgLy8gbnVsbCBtZWFucyBkbyBub3QgcmV0cnlcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHRoaXMubG9nZ2VyLmRlYnVnKFxuICAgICAgYFJlcXVlc3QgaXMgZWxpZ2libGUgZm9yIHJldHJ5IChhdHRlbXB0ICR7cHJvcHMuYXR0ZW1wdE51bWJlcn0pLCByZXRyeWluZyBhZnRlciAke3RoaXMucmV0cnlEZWxheUludGVydmFsTWlsbGlzfSBtcyArLy0gaml0dGVyLmBcbiAgICApO1xuICAgIC8vIHJldHJ5IGFmdGVyIGEgZml4ZWQgdGltZSBpbnRlcnZhbCBoYXMgcGFzc2VkICgrLy0gc29tZSBqaXR0ZXIpXG4gICAgcmV0dXJuIGFkZEppdHRlcih0aGlzLnJldHJ5RGVsYXlJbnRlcnZhbE1pbGxpcyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkSml0dGVyKHdoZW5Ub1JldHJ5OiBudW1iZXIpOiBudW1iZXIge1xuICByZXR1cm4gKDAuMiAqIE1hdGgucmFuZG9tKCkgKyAwLjkpICogd2hlblRvUmV0cnk7XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/storage-configurations.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Laptop = void 0;
const default_momento_logger_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/logging/default-momento-logger.js [app-route] (ecmascript)");
const storage_configuration_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/storage-configuration.js [app-route] (ecmascript)");
const storage_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/transport/storage/index.js [app-route] (ecmascript)");
const fixed_timeout_retry_strategy_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/retry/fixed-timeout-retry-strategy.js [app-route] (ecmascript)");
const defaultLoggerFactory = new default_momento_logger_1.DefaultMomentoLoggerFactory();
function defaultRetryStrategy(loggerFactory) {
    return new fixed_timeout_retry_strategy_1.FixedTimeoutRetryStrategy({
        loggerFactory: loggerFactory
    });
}
/**
 * Laptop config provides defaults suitable for a medium-to-high-latency dev environment.
 * @export
 * @class Laptop
 */ class Laptop extends storage_configuration_1.StorageClientConfiguration {
    /**
     * Provides the latest recommended configuration for a laptop development environment.  NOTE: this configuration may
     * change in future releases to take advantage of improvements we identify for default configurations.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {StorageConfiguration}
     */ static latest(loggerFactory = defaultLoggerFactory) {
        return new storage_configuration_1.StorageClientConfiguration({
            loggerFactory: loggerFactory,
            transportStrategy: new storage_1.StaticStorageTransportStrategy({
                grpcConfiguration: new storage_1.StaticStorageGrpcConfiguration({
                    deadlineMillis: 5000
                })
            }),
            retryStrategy: defaultRetryStrategy(loggerFactory)
        });
    }
}
exports.Laptop = Laptop; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS1jb25maWd1cmF0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb25maWcvc3RvcmFnZS1jb25maWd1cmF0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSw2RUFBNkU7QUFDN0UsbUVBR2lDO0FBQ2pDLGlEQUc2QjtBQUM3Qix1RkFBK0U7QUFHL0UsTUFBTSxvQkFBb0IsR0FDeEIsSUFBSSxvREFBMkIsRUFBRSxDQUFDO0FBRXBDLFNBQVMsb0JBQW9CLENBQzNCLGFBQW1DO0lBRW5DLE9BQU8sSUFBSSx3REFBeUIsQ0FBQztRQUNuQyxhQUFhLEVBQUUsYUFBYTtLQUM3QixDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQ7Ozs7R0FJRztBQUNILE1BQWEsTUFBTyxTQUFRLGtEQUEwQjtJQUNwRDs7Ozs7T0FLRztJQUNILE1BQU0sQ0FBQyxNQUFNLENBQ1gsZ0JBQXNDLG9CQUFvQjtRQUUxRCxPQUFPLElBQUksa0RBQTBCLENBQUM7WUFDcEMsYUFBYSxFQUFFLGFBQWE7WUFDNUIsaUJBQWlCLEVBQUUsSUFBSSx3Q0FBOEIsQ0FBQztnQkFDcEQsaUJBQWlCLEVBQUUsSUFBSSx3Q0FBOEIsQ0FBQztvQkFDcEQsY0FBYyxFQUFFLElBQUk7aUJBQ3JCLENBQUM7YUFDSCxDQUFDO1lBQ0YsYUFBYSxFQUFFLG9CQUFvQixDQUFDLGFBQWEsQ0FBQztTQUNuRCxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUFwQkQsd0JBb0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtNb21lbnRvTG9nZ2VyRmFjdG9yeX0gZnJvbSAnQGdvbW9tZW50by9zZGstY29yZSc7XG5pbXBvcnQge0RlZmF1bHRNb21lbnRvTG9nZ2VyRmFjdG9yeX0gZnJvbSAnLi9sb2dnaW5nL2RlZmF1bHQtbW9tZW50by1sb2dnZXInO1xuaW1wb3J0IHtcbiAgU3RvcmFnZUNsaWVudENvbmZpZ3VyYXRpb24sXG4gIFN0b3JhZ2VDb25maWd1cmF0aW9uLFxufSBmcm9tICcuL3N0b3JhZ2UtY29uZmlndXJhdGlvbic7XG5pbXBvcnQge1xuICBTdGF0aWNTdG9yYWdlR3JwY0NvbmZpZ3VyYXRpb24sXG4gIFN0YXRpY1N0b3JhZ2VUcmFuc3BvcnRTdHJhdGVneSxcbn0gZnJvbSAnLi90cmFuc3BvcnQvc3RvcmFnZSc7XG5pbXBvcnQge0ZpeGVkVGltZW91dFJldHJ5U3RyYXRlZ3l9IGZyb20gJy4vcmV0cnkvZml4ZWQtdGltZW91dC1yZXRyeS1zdHJhdGVneSc7XG5pbXBvcnQge1JldHJ5U3RyYXRlZ3l9IGZyb20gJy4vcmV0cnkvcmV0cnktc3RyYXRlZ3knO1xuXG5jb25zdCBkZWZhdWx0TG9nZ2VyRmFjdG9yeTogTW9tZW50b0xvZ2dlckZhY3RvcnkgPVxuICBuZXcgRGVmYXVsdE1vbWVudG9Mb2dnZXJGYWN0b3J5KCk7XG5cbmZ1bmN0aW9uIGRlZmF1bHRSZXRyeVN0cmF0ZWd5KFxuICBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeVxuKTogUmV0cnlTdHJhdGVneSB7XG4gIHJldHVybiBuZXcgRml4ZWRUaW1lb3V0UmV0cnlTdHJhdGVneSh7XG4gICAgbG9nZ2VyRmFjdG9yeTogbG9nZ2VyRmFjdG9yeSxcbiAgfSk7XG59XG5cbi8qKlxuICogTGFwdG9wIGNvbmZpZyBwcm92aWRlcyBkZWZhdWx0cyBzdWl0YWJsZSBmb3IgYSBtZWRpdW0tdG8taGlnaC1sYXRlbmN5IGRldiBlbnZpcm9ubWVudC5cbiAqIEBleHBvcnRcbiAqIEBjbGFzcyBMYXB0b3BcbiAqL1xuZXhwb3J0IGNsYXNzIExhcHRvcCBleHRlbmRzIFN0b3JhZ2VDbGllbnRDb25maWd1cmF0aW9uIHtcbiAgLyoqXG4gICAqIFByb3ZpZGVzIHRoZSBsYXRlc3QgcmVjb21tZW5kZWQgY29uZmlndXJhdGlvbiBmb3IgYSBsYXB0b3AgZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnQuICBOT1RFOiB0aGlzIGNvbmZpZ3VyYXRpb24gbWF5XG4gICAqIGNoYW5nZSBpbiBmdXR1cmUgcmVsZWFzZXMgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgaW1wcm92ZW1lbnRzIHdlIGlkZW50aWZ5IGZvciBkZWZhdWx0IGNvbmZpZ3VyYXRpb25zLlxuICAgKiBAcGFyYW0ge01vbWVudG9Mb2dnZXJGYWN0b3J5fSBbbG9nZ2VyRmFjdG9yeT1kZWZhdWx0TG9nZ2VyRmFjdG9yeV1cbiAgICogQHJldHVybnMge1N0b3JhZ2VDb25maWd1cmF0aW9ufVxuICAgKi9cbiAgc3RhdGljIGxhdGVzdChcbiAgICBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeSA9IGRlZmF1bHRMb2dnZXJGYWN0b3J5XG4gICk6IFN0b3JhZ2VDb25maWd1cmF0aW9uIHtcbiAgICByZXR1cm4gbmV3IFN0b3JhZ2VDbGllbnRDb25maWd1cmF0aW9uKHtcbiAgICAgIGxvZ2dlckZhY3Rvcnk6IGxvZ2dlckZhY3RvcnksXG4gICAgICB0cmFuc3BvcnRTdHJhdGVneTogbmV3IFN0YXRpY1N0b3JhZ2VUcmFuc3BvcnRTdHJhdGVneSh7XG4gICAgICAgIGdycGNDb25maWd1cmF0aW9uOiBuZXcgU3RhdGljU3RvcmFnZUdycGNDb25maWd1cmF0aW9uKHtcbiAgICAgICAgICBkZWFkbGluZU1pbGxpczogNTAwMCxcbiAgICAgICAgfSksXG4gICAgICB9KSxcbiAgICAgIHJldHJ5U3RyYXRlZ3k6IGRlZmF1bHRSZXRyeVN0cmF0ZWd5KGxvZ2dlckZhY3RvcnkpLFxuICAgIH0pO1xuICB9XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/leaderboard-configuration.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LeaderboardClientConfiguration = void 0;
class LeaderboardClientConfiguration {
    constructor(props){
        this.loggerFactory = props.loggerFactory;
        this.transportStrategy = props.transportStrategy;
        this.throwOnErrors = props.throwOnErrors;
        this.middlewares = props.middlewares;
    }
    getLoggerFactory() {
        return this.loggerFactory;
    }
    getTransportStrategy() {
        return this.transportStrategy;
    }
    withClientTimeoutMillis(clientTimeoutMillis) {
        return new LeaderboardClientConfiguration({
            loggerFactory: this.loggerFactory,
            transportStrategy: this.transportStrategy.withClientTimeoutMillis(clientTimeoutMillis),
            throwOnErrors: this.throwOnErrors,
            middlewares: this.middlewares
        });
    }
    withTransportStrategy(transportStrategy) {
        return new LeaderboardClientConfiguration({
            loggerFactory: this.loggerFactory,
            transportStrategy: transportStrategy,
            throwOnErrors: this.throwOnErrors,
            middlewares: this.middlewares
        });
    }
    getThrowOnErrors() {
        return this.throwOnErrors;
    }
    withThrowOnErrors(throwOnErrors) {
        return new LeaderboardClientConfiguration({
            loggerFactory: this.loggerFactory,
            transportStrategy: this.transportStrategy,
            throwOnErrors: throwOnErrors,
            middlewares: this.middlewares
        });
    }
    getMiddlewares() {
        return this.middlewares;
    }
    withMiddlewares(middlewares) {
        return new LeaderboardClientConfiguration({
            loggerFactory: this.loggerFactory,
            transportStrategy: this.transportStrategy,
            middlewares: middlewares,
            throwOnErrors: this.throwOnErrors
        });
    }
    addMiddleware(middleware) {
        return new LeaderboardClientConfiguration({
            loggerFactory: this.loggerFactory,
            transportStrategy: this.transportStrategy,
            middlewares: [
                middleware,
                ...this.middlewares
            ],
            throwOnErrors: this.throwOnErrors
        });
    }
}
exports.LeaderboardClientConfiguration = LeaderboardClientConfiguration; //# sourceMappingURL=data:application/json;base64,

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/leaderboard-configurations.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Laptop = void 0;
const leaderboard_configuration_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/leaderboard-configuration.js [app-route] (ecmascript)");
const __1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/index.js [app-route] (ecmascript)");
const default_momento_logger_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/logging/default-momento-logger.js [app-route] (ecmascript)");
// 4 minutes.  We want to remain comfortably underneath the idle timeout for AWS NLB, which is 350s.
const defaultMaxIdleMillis = 4 * 60 * 1000;
const defaultMaxSessionMemoryMb = 256;
const defaultLoggerFactory = new default_momento_logger_1.DefaultMomentoLoggerFactory();
const defaultMiddlewares = [];
/**
 * Laptop config provides defaults suitable for a medium-to-high-latency dev environment.
 * @export
 * @class Laptop
 */ class Laptop extends leaderboard_configuration_1.LeaderboardClientConfiguration {
    /**
     * Provides the latest recommended configuration for a laptop development environment.  NOTE: this configuration may
     * change in future releases to take advantage of improvements we identify for default configurations.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {LeaderboardConfiguration}
     */ static latest(loggerFactory = defaultLoggerFactory) {
        return Laptop.v1(loggerFactory);
    }
    /**
     * Provides v1 recommended configuration for a laptop development environment.  This configuration is guaranteed not
     * to change in future releases of the Momento web SDK.
     * @param {MomentoLoggerFactory} [loggerFactory=defaultLoggerFactory]
     * @returns {LeaderboardConfiguration}
     */ static v1(loggerFactory = defaultLoggerFactory) {
        const deadlineMillis = 15000;
        const grpcConfig = new __1.StaticGrpcConfiguration({
            deadlineMillis: deadlineMillis,
            maxSessionMemoryMb: defaultMaxSessionMemoryMb,
            keepAlivePermitWithoutCalls: 1,
            keepAliveTimeMs: 5000,
            keepAliveTimeoutMs: 1000
        });
        const transportStrategy = new __1.StaticTransportStrategy({
            grpcConfiguration: grpcConfig,
            maxIdleMillis: defaultMaxIdleMillis
        });
        return new Laptop({
            loggerFactory: loggerFactory,
            transportStrategy: transportStrategy,
            throwOnErrors: false,
            middlewares: defaultMiddlewares
        });
    }
}
exports.Laptop = Laptop; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVhZGVyYm9hcmQtY29uZmlndXJhdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29uZmlnL2xlYWRlcmJvYXJkLWNvbmZpZ3VyYXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDJFQUdxQztBQUdyQywyQkFLYTtBQUNiLDZFQUE2RTtBQUc3RSxvR0FBb0c7QUFDcEcsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUssQ0FBQztBQUM1QyxNQUFNLHlCQUF5QixHQUFHLEdBQUcsQ0FBQztBQUN0QyxNQUFNLG9CQUFvQixHQUN4QixJQUFJLG9EQUEyQixFQUFFLENBQUM7QUFDcEMsTUFBTSxrQkFBa0IsR0FBaUIsRUFBRSxDQUFDO0FBRTVDOzs7O0dBSUc7QUFDSCxNQUFhLE1BQU8sU0FBUSwwREFBOEI7SUFDeEQ7Ozs7O09BS0c7SUFDSCxNQUFNLENBQUMsTUFBTSxDQUNYLGdCQUFzQyxvQkFBb0I7UUFFMUQsT0FBTyxNQUFNLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILE1BQU0sQ0FBQyxFQUFFLENBQ1AsZ0JBQXNDLG9CQUFvQjtRQUUxRCxNQUFNLGNBQWMsR0FBRyxLQUFLLENBQUM7UUFDN0IsTUFBTSxVQUFVLEdBQXNCLElBQUksMkJBQXVCLENBQUM7WUFDaEUsY0FBYyxFQUFFLGNBQWM7WUFDOUIsa0JBQWtCLEVBQUUseUJBQXlCO1lBQzdDLDJCQUEyQixFQUFFLENBQUM7WUFDOUIsZUFBZSxFQUFFLElBQUk7WUFDckIsa0JBQWtCLEVBQUUsSUFBSTtTQUN6QixDQUFDLENBQUM7UUFDSCxNQUFNLGlCQUFpQixHQUFzQixJQUFJLDJCQUF1QixDQUFDO1lBQ3ZFLGlCQUFpQixFQUFFLFVBQVU7WUFDN0IsYUFBYSxFQUFFLG9CQUFvQjtTQUNwQyxDQUFDLENBQUM7UUFDSCxPQUFPLElBQUksTUFBTSxDQUFDO1lBQ2hCLGFBQWEsRUFBRSxhQUFhO1lBQzVCLGlCQUFpQixFQUFFLGlCQUFpQjtZQUNwQyxhQUFhLEVBQUUsS0FBSztZQUNwQixXQUFXLEVBQUUsa0JBQWtCO1NBQ2hDLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQXpDRCx3QkF5Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBMZWFkZXJib2FyZENsaWVudENvbmZpZ3VyYXRpb24sXG4gIExlYWRlcmJvYXJkQ29uZmlndXJhdGlvbixcbn0gZnJvbSAnLi9sZWFkZXJib2FyZC1jb25maWd1cmF0aW9uJztcbmltcG9ydCB7TW9tZW50b0xvZ2dlckZhY3Rvcnl9IGZyb20gJ0Bnb21vbWVudG8vc2RrLWNvcmUnO1xuXG5pbXBvcnQge1xuICBHcnBjQ29uZmlndXJhdGlvbixcbiAgU3RhdGljR3JwY0NvbmZpZ3VyYXRpb24sXG4gIFN0YXRpY1RyYW5zcG9ydFN0cmF0ZWd5LFxuICBUcmFuc3BvcnRTdHJhdGVneSxcbn0gZnJvbSAnLi4vJztcbmltcG9ydCB7RGVmYXVsdE1vbWVudG9Mb2dnZXJGYWN0b3J5fSBmcm9tICcuL2xvZ2dpbmcvZGVmYXVsdC1tb21lbnRvLWxvZ2dlcic7XG5pbXBvcnQge01pZGRsZXdhcmV9IGZyb20gJy4vbWlkZGxld2FyZS9taWRkbGV3YXJlJztcblxuLy8gNCBtaW51dGVzLiAgV2Ugd2FudCB0byByZW1haW4gY29tZm9ydGFibHkgdW5kZXJuZWF0aCB0aGUgaWRsZSB0aW1lb3V0IGZvciBBV1MgTkxCLCB3aGljaCBpcyAzNTBzLlxuY29uc3QgZGVmYXVsdE1heElkbGVNaWxsaXMgPSA0ICogNjAgKiAxXzAwMDtcbmNvbnN0IGRlZmF1bHRNYXhTZXNzaW9uTWVtb3J5TWIgPSAyNTY7XG5jb25zdCBkZWZhdWx0TG9nZ2VyRmFjdG9yeTogTW9tZW50b0xvZ2dlckZhY3RvcnkgPVxuICBuZXcgRGVmYXVsdE1vbWVudG9Mb2dnZXJGYWN0b3J5KCk7XG5jb25zdCBkZWZhdWx0TWlkZGxld2FyZXM6IE1pZGRsZXdhcmVbXSA9IFtdO1xuXG4vKipcbiAqIExhcHRvcCBjb25maWcgcHJvdmlkZXMgZGVmYXVsdHMgc3VpdGFibGUgZm9yIGEgbWVkaXVtLXRvLWhpZ2gtbGF0ZW5jeSBkZXYgZW52aXJvbm1lbnQuXG4gKiBAZXhwb3J0XG4gKiBAY2xhc3MgTGFwdG9wXG4gKi9cbmV4cG9ydCBjbGFzcyBMYXB0b3AgZXh0ZW5kcyBMZWFkZXJib2FyZENsaWVudENvbmZpZ3VyYXRpb24ge1xuICAvKipcbiAgICogUHJvdmlkZXMgdGhlIGxhdGVzdCByZWNvbW1lbmRlZCBjb25maWd1cmF0aW9uIGZvciBhIGxhcHRvcCBkZXZlbG9wbWVudCBlbnZpcm9ubWVudC4gIE5PVEU6IHRoaXMgY29uZmlndXJhdGlvbiBtYXlcbiAgICogY2hhbmdlIGluIGZ1dHVyZSByZWxlYXNlcyB0byB0YWtlIGFkdmFudGFnZSBvZiBpbXByb3ZlbWVudHMgd2UgaWRlbnRpZnkgZm9yIGRlZmF1bHQgY29uZmlndXJhdGlvbnMuXG4gICAqIEBwYXJhbSB7TW9tZW50b0xvZ2dlckZhY3Rvcnl9IFtsb2dnZXJGYWN0b3J5PWRlZmF1bHRMb2dnZXJGYWN0b3J5XVxuICAgKiBAcmV0dXJucyB7TGVhZGVyYm9hcmRDb25maWd1cmF0aW9ufVxuICAgKi9cbiAgc3RhdGljIGxhdGVzdChcbiAgICBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeSA9IGRlZmF1bHRMb2dnZXJGYWN0b3J5XG4gICk6IExlYWRlcmJvYXJkQ29uZmlndXJhdGlvbiB7XG4gICAgcmV0dXJuIExhcHRvcC52MShsb2dnZXJGYWN0b3J5KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQcm92aWRlcyB2MSByZWNvbW1lbmRlZCBjb25maWd1cmF0aW9uIGZvciBhIGxhcHRvcCBkZXZlbG9wbWVudCBlbnZpcm9ubWVudC4gIFRoaXMgY29uZmlndXJhdGlvbiBpcyBndWFyYW50ZWVkIG5vdFxuICAgKiB0byBjaGFuZ2UgaW4gZnV0dXJlIHJlbGVhc2VzIG9mIHRoZSBNb21lbnRvIHdlYiBTREsuXG4gICAqIEBwYXJhbSB7TW9tZW50b0xvZ2dlckZhY3Rvcnl9IFtsb2dnZXJGYWN0b3J5PWRlZmF1bHRMb2dnZXJGYWN0b3J5XVxuICAgKiBAcmV0dXJucyB7TGVhZGVyYm9hcmRDb25maWd1cmF0aW9ufVxuICAgKi9cbiAgc3RhdGljIHYxKFxuICAgIGxvZ2dlckZhY3Rvcnk6IE1vbWVudG9Mb2dnZXJGYWN0b3J5ID0gZGVmYXVsdExvZ2dlckZhY3RvcnlcbiAgKTogTGVhZGVyYm9hcmRDb25maWd1cmF0aW9uIHtcbiAgICBjb25zdCBkZWFkbGluZU1pbGxpcyA9IDE1MDAwO1xuICAgIGNvbnN0IGdycGNDb25maWc6IEdycGNDb25maWd1cmF0aW9uID0gbmV3IFN0YXRpY0dycGNDb25maWd1cmF0aW9uKHtcbiAgICAgIGRlYWRsaW5lTWlsbGlzOiBkZWFkbGluZU1pbGxpcyxcbiAgICAgIG1heFNlc3Npb25NZW1vcnlNYjogZGVmYXVsdE1heFNlc3Npb25NZW1vcnlNYixcbiAgICAgIGtlZXBBbGl2ZVBlcm1pdFdpdGhvdXRDYWxsczogMSxcbiAgICAgIGtlZXBBbGl2ZVRpbWVNczogNTAwMCxcbiAgICAgIGtlZXBBbGl2ZVRpbWVvdXRNczogMTAwMCxcbiAgICB9KTtcbiAgICBjb25zdCB0cmFuc3BvcnRTdHJhdGVneTogVHJhbnNwb3J0U3RyYXRlZ3kgPSBuZXcgU3RhdGljVHJhbnNwb3J0U3RyYXRlZ3koe1xuICAgICAgZ3JwY0NvbmZpZ3VyYXRpb246IGdycGNDb25maWcsXG4gICAgICBtYXhJZGxlTWlsbGlzOiBkZWZhdWx0TWF4SWRsZU1pbGxpcyxcbiAgICB9KTtcbiAgICByZXR1cm4gbmV3IExhcHRvcCh7XG4gICAgICBsb2dnZXJGYWN0b3J5OiBsb2dnZXJGYWN0b3J5LFxuICAgICAgdHJhbnNwb3J0U3RyYXRlZ3k6IHRyYW5zcG9ydFN0cmF0ZWd5LFxuICAgICAgdGhyb3dPbkVycm9yczogZmFsc2UsXG4gICAgICBtaWRkbGV3YXJlczogZGVmYXVsdE1pZGRsZXdhcmVzLFxuICAgIH0pO1xuICB9XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/request-logging-middleware.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RequestLoggingMiddleware = void 0;
const __1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/index.js [app-route] (ecmascript)");
class LoggingMiddlewareRequestHandler {
    constructor(logger, requestId){
        this.logger = logger;
        this.requestId = requestId;
    }
    onRequestMetadata(metadata) {
        this.logger.info(JSON.stringify({
            event: 'onRequestMetadata',
            requestId: this.requestId,
            ...metadata.toJsonObject()
        }));
        return Promise.resolve(metadata);
    }
    onRequestBody(request) {
        this.logger.info(JSON.stringify({
            event: 'onRequestBody',
            requestId: this.requestId,
            requestSize: request.messageLength(),
            ...request.toLogFormat()
        }));
        return Promise.resolve(request);
    }
    onResponseMetadata(metadata) {
        this.logger.info(JSON.stringify({
            event: 'onResponseMetadata',
            requestId: this.requestId,
            ...metadata.toJsonObject()
        }));
        return Promise.resolve(metadata);
    }
    onResponseBody(response) {
        var _a;
        this.logger.info(JSON.stringify({
            event: 'onResponseBody',
            requestId: this.requestId,
            ...(_a = response === null || response === void 0 ? void 0 : response._grpcMessage) === null || _a === void 0 ? void 0 : _a.toObject()
        }));
        return Promise.resolve(response);
    }
    onResponseStatus(status) {
        this.logger.info(JSON.stringify({
            event: 'onResponseStatus',
            requestId: this.requestId,
            status: status.code()
        }));
        return Promise.resolve(status);
    }
}
/**
 * This middleware implements per-request logging which can be used for
 * debugging.
 *
 * WARNING: enabling this middleware may have minor performance implications,
 * so enable with caution.
 *
 * In order for this middleware to produce output you will need to have
 * set up your {Configuration} with a {MomentoLoggerFactory} instance that
 * is configured to log at DEBUG level or lower.  See `advanced.ts` in the
 * examples directory for an example of how to set up your {Configuration} to
 * enable this middleware.
 */ class RequestLoggingMiddleware {
    constructor(loggerFactory = new __1.DefaultMomentoLoggerFactory()){
        this.logger = loggerFactory.getLogger(this);
        this.nextRequestId = 0;
    }
    onNewRequest() {
        this.nextRequestId++;
        return new LoggingMiddlewareRequestHandler(this.logger, this.nextRequestId.toString());
    }
}
exports.RequestLoggingMiddleware = RequestLoggingMiddleware; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVxdWVzdC1sb2dnaW5nLW1pZGRsZXdhcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29uZmlnL21pZGRsZXdhcmUvcmVxdWVzdC1sb2dnaW5nLW1pZGRsZXdhcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBT0EsNkJBSWU7QUFFZixNQUFNLCtCQUErQjtJQUduQyxZQUFZLE1BQXFCLEVBQUUsU0FBaUI7UUFDbEQsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7SUFDN0IsQ0FBQztJQUVELGlCQUFpQixDQUFDLFFBQTRCO1FBQzVDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUNkLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDYixLQUFLLEVBQUUsbUJBQW1CO1lBQzFCLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUztZQUN6QixHQUFHLFFBQVEsQ0FBQyxZQUFZLEVBQUU7U0FDM0IsQ0FBQyxDQUNILENBQUM7UUFDRixPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUNELGFBQWEsQ0FBQyxPQUEwQjtRQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FDZCxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ2IsS0FBSyxFQUFFLGVBQWU7WUFDdEIsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTO1lBQ3pCLFdBQVcsRUFBRSxPQUFPLENBQUMsYUFBYSxFQUFFO1lBQ3BDLEdBQUcsT0FBTyxDQUFDLFdBQVcsRUFBRTtTQUN6QixDQUFDLENBQ0gsQ0FBQztRQUNGLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsa0JBQWtCLENBQ2hCLFFBQTRCO1FBRTVCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUNkLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDYixLQUFLLEVBQUUsb0JBQW9CO1lBQzNCLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUztZQUN6QixHQUFHLFFBQVEsQ0FBQyxZQUFZLEVBQUU7U0FDM0IsQ0FBQyxDQUNILENBQUM7UUFDRixPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELGNBQWMsQ0FDWixRQUFrQzs7UUFFbEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQ2QsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNiLEtBQUssRUFBRSxnQkFBZ0I7WUFDdkIsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTO1lBQ3pCLEdBQUcsTUFBQSxRQUFRLGFBQVIsUUFBUSx1QkFBUixRQUFRLENBQUUsWUFBWSwwQ0FBRSxRQUFRLEVBQUU7U0FDdEMsQ0FBQyxDQUNILENBQUM7UUFDRixPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELGdCQUFnQixDQUFDLE1BQXdCO1FBQ3ZDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUNkLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDYixLQUFLLEVBQUUsa0JBQWtCO1lBQ3pCLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUztZQUN6QixNQUFNLEVBQUUsTUFBTSxDQUFDLElBQUksRUFBRTtTQUN0QixDQUFDLENBQ0gsQ0FBQztRQUNGLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNqQyxDQUFDO0NBQ0Y7QUFFRDs7Ozs7Ozs7Ozs7O0dBWUc7QUFDSCxNQUFhLHdCQUF3QjtJQUduQyxZQUNFLGdCQUFzQyxJQUFJLCtCQUEyQixFQUFFO1FBRXZFLElBQUksQ0FBQyxNQUFNLEdBQUcsYUFBYSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRUQsWUFBWTtRQUNWLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNyQixPQUFPLElBQUksK0JBQStCLENBQ3hDLElBQUksQ0FBQyxNQUFNLEVBQ1gsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLEVBQUUsQ0FDOUIsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQWpCRCw0REFpQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBNaWRkbGV3YXJlLFxuICBNaWRkbGV3YXJlTWVzc2FnZSxcbiAgTWlkZGxld2FyZU1ldGFkYXRhLFxuICBNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXIsXG4gIE1pZGRsZXdhcmVTdGF0dXMsXG59IGZyb20gJy4vbWlkZGxld2FyZSc7XG5pbXBvcnQge1xuICBEZWZhdWx0TW9tZW50b0xvZ2dlckZhY3RvcnksXG4gIE1vbWVudG9Mb2dnZXIsXG4gIE1vbWVudG9Mb2dnZXJGYWN0b3J5LFxufSBmcm9tICcuLi8uLic7XG5cbmNsYXNzIExvZ2dpbmdNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXIgaW1wbGVtZW50cyBNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXIge1xuICBwcml2YXRlIHJlYWRvbmx5IGxvZ2dlcjogTW9tZW50b0xvZ2dlcjtcbiAgcHJpdmF0ZSByZWFkb25seSByZXF1ZXN0SWQ6IHN0cmluZztcbiAgY29uc3RydWN0b3IobG9nZ2VyOiBNb21lbnRvTG9nZ2VyLCByZXF1ZXN0SWQ6IHN0cmluZykge1xuICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xuICAgIHRoaXMucmVxdWVzdElkID0gcmVxdWVzdElkO1xuICB9XG5cbiAgb25SZXF1ZXN0TWV0YWRhdGEobWV0YWRhdGE6IE1pZGRsZXdhcmVNZXRhZGF0YSk6IFByb21pc2U8TWlkZGxld2FyZU1ldGFkYXRhPiB7XG4gICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgZXZlbnQ6ICdvblJlcXVlc3RNZXRhZGF0YScsXG4gICAgICAgIHJlcXVlc3RJZDogdGhpcy5yZXF1ZXN0SWQsXG4gICAgICAgIC4uLm1ldGFkYXRhLnRvSnNvbk9iamVjdCgpLFxuICAgICAgfSlcbiAgICApO1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobWV0YWRhdGEpO1xuICB9XG4gIG9uUmVxdWVzdEJvZHkocmVxdWVzdDogTWlkZGxld2FyZU1lc3NhZ2UpOiBQcm9taXNlPE1pZGRsZXdhcmVNZXNzYWdlPiB7XG4gICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgZXZlbnQ6ICdvblJlcXVlc3RCb2R5JyxcbiAgICAgICAgcmVxdWVzdElkOiB0aGlzLnJlcXVlc3RJZCxcbiAgICAgICAgcmVxdWVzdFNpemU6IHJlcXVlc3QubWVzc2FnZUxlbmd0aCgpLFxuICAgICAgICAuLi5yZXF1ZXN0LnRvTG9nRm9ybWF0KCksXG4gICAgICB9KVxuICAgICk7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShyZXF1ZXN0KTtcbiAgfVxuXG4gIG9uUmVzcG9uc2VNZXRhZGF0YShcbiAgICBtZXRhZGF0YTogTWlkZGxld2FyZU1ldGFkYXRhXG4gICk6IFByb21pc2U8TWlkZGxld2FyZU1ldGFkYXRhPiB7XG4gICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgZXZlbnQ6ICdvblJlc3BvbnNlTWV0YWRhdGEnLFxuICAgICAgICByZXF1ZXN0SWQ6IHRoaXMucmVxdWVzdElkLFxuICAgICAgICAuLi5tZXRhZGF0YS50b0pzb25PYmplY3QoKSxcbiAgICAgIH0pXG4gICAgKTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG1ldGFkYXRhKTtcbiAgfVxuXG4gIG9uUmVzcG9uc2VCb2R5KFxuICAgIHJlc3BvbnNlOiBNaWRkbGV3YXJlTWVzc2FnZSB8IG51bGxcbiAgKTogUHJvbWlzZTxNaWRkbGV3YXJlTWVzc2FnZSB8IG51bGw+IHtcbiAgICB0aGlzLmxvZ2dlci5pbmZvKFxuICAgICAgSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBldmVudDogJ29uUmVzcG9uc2VCb2R5JyxcbiAgICAgICAgcmVxdWVzdElkOiB0aGlzLnJlcXVlc3RJZCxcbiAgICAgICAgLi4ucmVzcG9uc2U/Ll9ncnBjTWVzc2FnZT8udG9PYmplY3QoKSxcbiAgICAgIH0pXG4gICAgKTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgfVxuXG4gIG9uUmVzcG9uc2VTdGF0dXMoc3RhdHVzOiBNaWRkbGV3YXJlU3RhdHVzKTogUHJvbWlzZTxNaWRkbGV3YXJlU3RhdHVzPiB7XG4gICAgdGhpcy5sb2dnZXIuaW5mbyhcbiAgICAgIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgZXZlbnQ6ICdvblJlc3BvbnNlU3RhdHVzJyxcbiAgICAgICAgcmVxdWVzdElkOiB0aGlzLnJlcXVlc3RJZCxcbiAgICAgICAgc3RhdHVzOiBzdGF0dXMuY29kZSgpLFxuICAgICAgfSlcbiAgICApO1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoc3RhdHVzKTtcbiAgfVxufVxuXG4vKipcbiAqIFRoaXMgbWlkZGxld2FyZSBpbXBsZW1lbnRzIHBlci1yZXF1ZXN0IGxvZ2dpbmcgd2hpY2ggY2FuIGJlIHVzZWQgZm9yXG4gKiBkZWJ1Z2dpbmcuXG4gKlxuICogV0FSTklORzogZW5hYmxpbmcgdGhpcyBtaWRkbGV3YXJlIG1heSBoYXZlIG1pbm9yIHBlcmZvcm1hbmNlIGltcGxpY2F0aW9ucyxcbiAqIHNvIGVuYWJsZSB3aXRoIGNhdXRpb24uXG4gKlxuICogSW4gb3JkZXIgZm9yIHRoaXMgbWlkZGxld2FyZSB0byBwcm9kdWNlIG91dHB1dCB5b3Ugd2lsbCBuZWVkIHRvIGhhdmVcbiAqIHNldCB1cCB5b3VyIHtDb25maWd1cmF0aW9ufSB3aXRoIGEge01vbWVudG9Mb2dnZXJGYWN0b3J5fSBpbnN0YW5jZSB0aGF0XG4gKiBpcyBjb25maWd1cmVkIHRvIGxvZyBhdCBERUJVRyBsZXZlbCBvciBsb3dlci4gIFNlZSBgYWR2YW5jZWQudHNgIGluIHRoZVxuICogZXhhbXBsZXMgZGlyZWN0b3J5IGZvciBhbiBleGFtcGxlIG9mIGhvdyB0byBzZXQgdXAgeW91ciB7Q29uZmlndXJhdGlvbn0gdG9cbiAqIGVuYWJsZSB0aGlzIG1pZGRsZXdhcmUuXG4gKi9cbmV4cG9ydCBjbGFzcyBSZXF1ZXN0TG9nZ2luZ01pZGRsZXdhcmUgaW1wbGVtZW50cyBNaWRkbGV3YXJlIHtcbiAgcHJpdmF0ZSByZWFkb25seSBsb2dnZXI6IE1vbWVudG9Mb2dnZXI7XG4gIHByaXZhdGUgbmV4dFJlcXVlc3RJZDogbnVtYmVyO1xuICBjb25zdHJ1Y3RvcihcbiAgICBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeSA9IG5ldyBEZWZhdWx0TW9tZW50b0xvZ2dlckZhY3RvcnkoKVxuICApIHtcbiAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlckZhY3RvcnkuZ2V0TG9nZ2VyKHRoaXMpO1xuICAgIHRoaXMubmV4dFJlcXVlc3RJZCA9IDA7XG4gIH1cblxuICBvbk5ld1JlcXVlc3QoKTogTWlkZGxld2FyZVJlcXVlc3RIYW5kbGVyIHtcbiAgICB0aGlzLm5leHRSZXF1ZXN0SWQrKztcbiAgICByZXR1cm4gbmV3IExvZ2dpbmdNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXIoXG4gICAgICB0aGlzLmxvZ2dlcixcbiAgICAgIHRoaXMubmV4dFJlcXVlc3RJZC50b1N0cmluZygpXG4gICAgKTtcbiAgfVxufVxuIl19

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/impl/experimental-metrics-middleware.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ExperimentalMetricsMiddleware = exports.ExperimentalMetricsMiddlewareRequestHandler = void 0;
const cache_data_client_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/internal/cache-data-client.js [app-route] (ecmascript)");
const FIELD_NAMES = [
    'numActiveRequestsAtStart',
    'numActiveRequestsAtFinish',
    'requestType',
    'status',
    'startTime',
    'requestBodyTime',
    'endTime',
    'duration',
    'requestSize',
    'responseSize',
    'connectionID'
];
class ExperimentalMetricsMiddlewareRequestHandler {
    constructor(parent, logger, context){
        this.parent = parent;
        this.logger = logger;
        this.connectionID = context[cache_data_client_1.CONNECTION_ID_KEY];
        this.numActiveRequestsAtStart = parent.incrementActiveRequestCount();
        this.startTime = new Date().getTime();
        this.receivedResponseBody = false;
        this.receivedResponseStatus = false;
    }
    onRequestBody(request) {
        this.requestSize = request.messageLength();
        this.requestType = request._grpcMessage.constructor.name;
        this.requestBodyTime = new Date().getTime();
        return Promise.resolve(request);
    }
    onRequestMetadata(metadata) {
        return Promise.resolve(metadata);
    }
    onResponseBody(response) {
        if (response !== null) {
            this.responseSize = response.messageLength();
        } else {
            this.responseSize = 0;
        }
        this.receivedResponseBody = true;
        if (this.done()) this.recordMetrics();
        return Promise.resolve(response);
    }
    onResponseMetadata(metadata) {
        return Promise.resolve(metadata);
    }
    onResponseStatus(status) {
        this.receivedResponseStatus = true;
        this.responseStatusCode = status.code();
        if (this.done()) this.recordMetrics();
        return Promise.resolve(status);
    }
    done() {
        return this.receivedResponseBody && this.receivedResponseStatus;
    }
    recordMetrics() {
        const endTime = new Date().getTime();
        const metrics = {
            momento: {
                numActiveRequestsAtStart: this.numActiveRequestsAtStart,
                numActiveRequestsAtFinish: this.parent.activeRequestCount(),
                requestType: this.requestType,
                status: this.responseStatusCode,
                startTime: this.startTime,
                requestBodyTime: this.requestBodyTime,
                endTime: endTime,
                duration: endTime - this.startTime,
                requestSize: this.requestSize,
                responseSize: this.responseSize,
                connectionID: this.connectionID
            }
        };
        this.emitMetrics(metrics).catch((e)=>// eslint-disable-next-line @typescript-eslint/restrict-template-expressions
            this.logger.error(`An error occurred when trying to emit metrics: ${e}`));
        this.parent.decrementActiveRequestCount();
    }
}
exports.ExperimentalMetricsMiddlewareRequestHandler = ExperimentalMetricsMiddlewareRequestHandler;
/**
 * This middleware enables per-request client-side metrics.  This is an abstract
 * class that does not route the metrics to a specific destination; concrete subclasses
 * may store the metrics as they see fit.
 *
 * The metrics format is currently considered experimental; in a future release,
 * once the format is considered stable, this class will be renamed to remove
 * the Experimental prefix.
 *
 * WARNING: enabling this middleware may have minor performance implications,
 * so enable with caution.
 *
 * See `advanced.ts` in the examples directory for an example of how to set up
 * your {Configuration} to enable this middleware.
 */ class ExperimentalMetricsMiddleware {
    constructor(loggerFactory, requestHandlerFactoryFn){
        this.numActiveRequests = 0;
        this.logger = loggerFactory.getLogger(this);
        this.requestHandlerFactoryFn = requestHandlerFactoryFn;
    }
    fieldNames() {
        return FIELD_NAMES;
    }
    incrementActiveRequestCount() {
        return ++this.numActiveRequests;
    }
    activeRequestCount() {
        return this.numActiveRequests;
    }
    decrementActiveRequestCount() {
        --this.numActiveRequests;
    }
    onNewRequest(context) {
        return this.requestHandlerFactoryFn(this, this.logger, context);
    }
}
exports.ExperimentalMetricsMiddleware = ExperimentalMetricsMiddleware; //# sourceMappingURL=data:application/json;base64,

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/experimental-metrics-csv-middleware.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ExperimentalMetricsCsvMiddleware = void 0;
const fs = require("fs");
const experimental_metrics_middleware_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/impl/experimental-metrics-middleware.js [app-route] (ecmascript)");
class ExperimentalMetricsCsvMiddlewareRequestHandler extends experimental_metrics_middleware_1.ExperimentalMetricsMiddlewareRequestHandler {
    constructor(parent, logger, context, csvPath){
        super(parent, logger, context);
        this.csvPath = csvPath;
    }
    async emitMetrics(metrics) {
        const csvRow = [
            metrics.momento.numActiveRequestsAtStart,
            metrics.momento.numActiveRequestsAtFinish,
            metrics.momento.requestType,
            metrics.momento.status,
            metrics.momento.startTime,
            metrics.momento.requestBodyTime,
            metrics.momento.endTime,
            metrics.momento.duration,
            metrics.momento.requestSize,
            metrics.momento.responseSize,
            metrics.momento.connectionID
        ].join(',');
        try {
            await fs.promises.appendFile(this.csvPath, `${csvRow}\n`);
        } catch (err) {
            if (err !== null) {
                this.logger.error('Error writing to metrics csv file at path: %s : %s', this.csvPath, err);
            }
        }
    }
}
/**
 * This middleware enables per-request client-side metrics.  Metrics for each
 * request will be written to a CSV file; this file can be analyzed or shared
 * with Momento to diagnose performance issues.
 *
 * The metrics format is currently considered experimental; in a future release,
 * once the format is considered stable, this class will be renamed to remove
 * the Experimental prefix.
 *
 * WARNING: enabling this middleware may have minor performance implications,
 * so enable with caution.
 *
 * WARNING: depending on your request volume, the CSV file size may grow quickly;
 * neither sampling nor file compression / rotation are included at this time
 * (though they may be added in the future).
 *
 * See `advanced.ts` in the examples directory for an example of how to set up
 * your {Configuration} to enable this middleware.
 */ class ExperimentalMetricsCsvMiddleware extends experimental_metrics_middleware_1.ExperimentalMetricsMiddleware {
    constructor(csvPath, loggerFactory){
        super(loggerFactory, (p, l, c)=>new ExperimentalMetricsCsvMiddlewareRequestHandler(p, l, c, csvPath));
        this.csvPath = csvPath;
        fs.writeFileSync(this.csvPath, `${this.fieldNames().join(',')}\n`);
    }
}
exports.ExperimentalMetricsCsvMiddleware = ExperimentalMetricsCsvMiddleware;
ExperimentalMetricsCsvMiddleware.numActiveRequests = 0; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwZXJpbWVudGFsLW1ldHJpY3MtY3N2LW1pZGRsZXdhcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29uZmlnL21pZGRsZXdhcmUvZXhwZXJpbWVudGFsLW1ldHJpY3MtY3N2LW1pZGRsZXdhcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEseUJBQXlCO0FBRXpCLDRGQUlnRDtBQUdoRCxNQUFNLDhDQUErQyxTQUFRLDZFQUEyQztJQUd0RyxZQUNFLE1BQXFDLEVBQ3JDLE1BQXFCLEVBQ3JCLE9BQXdDLEVBQ3hDLE9BQWU7UUFFZixLQUFLLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUMvQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN6QixDQUFDO0lBRUQsS0FBSyxDQUFDLFdBQVcsQ0FBQyxPQUFtQztRQUNuRCxNQUFNLE1BQU0sR0FBRztZQUNiLE9BQU8sQ0FBQyxPQUFPLENBQUMsd0JBQXdCO1lBQ3hDLE9BQU8sQ0FBQyxPQUFPLENBQUMseUJBQXlCO1lBQ3pDLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVztZQUMzQixPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU07WUFDdEIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTO1lBQ3pCLE9BQU8sQ0FBQyxPQUFPLENBQUMsZUFBZTtZQUMvQixPQUFPLENBQUMsT0FBTyxDQUFDLE9BQU87WUFDdkIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRO1lBQ3hCLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVztZQUMzQixPQUFPLENBQUMsT0FBTyxDQUFDLFlBQVk7WUFDNUIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxZQUFZO1NBQzdCLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1osSUFBSTtZQUNGLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLE1BQU0sSUFBSSxDQUFDLENBQUM7U0FDM0Q7UUFBQyxPQUFPLEdBQUcsRUFBRTtZQUNaLElBQUksR0FBRyxLQUFLLElBQUksRUFBRTtnQkFDaEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQ2Ysb0RBQW9ELEVBQ3BELElBQUksQ0FBQyxPQUFPLEVBQ1osR0FBRyxDQUNKLENBQUM7YUFDSDtTQUNGO0lBQ0gsQ0FBQztDQUNGO0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWtCRztBQUNILE1BQWEsZ0NBQWlDLFNBQVEsK0RBQTZCO0lBS2pGLFlBQVksT0FBZSxFQUFFLGFBQW1DO1FBQzlELEtBQUssQ0FDSCxhQUFhLEVBQ2IsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQ1YsSUFBSSw4Q0FBOEMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FDdkUsQ0FBQztRQUNGLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLEVBQUUsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JFLENBQUM7O0FBYkgsNEVBY0M7QUFiUSxrREFBaUIsR0FBRyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7XG5pbXBvcnQge01vbWVudG9Mb2dnZXIsIE1vbWVudG9Mb2dnZXJGYWN0b3J5fSBmcm9tICcuLi8uLi8nO1xuaW1wb3J0IHtcbiAgRXhwZXJpbWVudGFsTWV0cmljc01pZGRsZXdhcmUsXG4gIEV4cGVyaW1lbnRhbE1ldHJpY3NNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXIsXG4gIEV4cGVyaW1lbnRhbFJlcXVlc3RNZXRyaWNzLFxufSBmcm9tICcuL2ltcGwvZXhwZXJpbWVudGFsLW1ldHJpY3MtbWlkZGxld2FyZSc7XG5pbXBvcnQge01pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlckNvbnRleHR9IGZyb20gJy4vbWlkZGxld2FyZSc7XG5cbmNsYXNzIEV4cGVyaW1lbnRhbE1ldHJpY3NDc3ZNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXIgZXh0ZW5kcyBFeHBlcmltZW50YWxNZXRyaWNzTWlkZGxld2FyZVJlcXVlc3RIYW5kbGVyIHtcbiAgcHJpdmF0ZSByZWFkb25seSBjc3ZQYXRoOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcGFyZW50OiBFeHBlcmltZW50YWxNZXRyaWNzTWlkZGxld2FyZSxcbiAgICBsb2dnZXI6IE1vbWVudG9Mb2dnZXIsXG4gICAgY29udGV4dDogTWlkZGxld2FyZVJlcXVlc3RIYW5kbGVyQ29udGV4dCxcbiAgICBjc3ZQYXRoOiBzdHJpbmdcbiAgKSB7XG4gICAgc3VwZXIocGFyZW50LCBsb2dnZXIsIGNvbnRleHQpO1xuICAgIHRoaXMuY3N2UGF0aCA9IGNzdlBhdGg7XG4gIH1cblxuICBhc3luYyBlbWl0TWV0cmljcyhtZXRyaWNzOiBFeHBlcmltZW50YWxSZXF1ZXN0TWV0cmljcyk6IFByb21pc2U8dm9pZD4ge1xuICAgIGNvbnN0IGNzdlJvdyA9IFtcbiAgICAgIG1ldHJpY3MubW9tZW50by5udW1BY3RpdmVSZXF1ZXN0c0F0U3RhcnQsXG4gICAgICBtZXRyaWNzLm1vbWVudG8ubnVtQWN0aXZlUmVxdWVzdHNBdEZpbmlzaCxcbiAgICAgIG1ldHJpY3MubW9tZW50by5yZXF1ZXN0VHlwZSxcbiAgICAgIG1ldHJpY3MubW9tZW50by5zdGF0dXMsXG4gICAgICBtZXRyaWNzLm1vbWVudG8uc3RhcnRUaW1lLFxuICAgICAgbWV0cmljcy5tb21lbnRvLnJlcXVlc3RCb2R5VGltZSxcbiAgICAgIG1ldHJpY3MubW9tZW50by5lbmRUaW1lLFxuICAgICAgbWV0cmljcy5tb21lbnRvLmR1cmF0aW9uLFxuICAgICAgbWV0cmljcy5tb21lbnRvLnJlcXVlc3RTaXplLFxuICAgICAgbWV0cmljcy5tb21lbnRvLnJlc3BvbnNlU2l6ZSxcbiAgICAgIG1ldHJpY3MubW9tZW50by5jb25uZWN0aW9uSUQsXG4gICAgXS5qb2luKCcsJyk7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IGZzLnByb21pc2VzLmFwcGVuZEZpbGUodGhpcy5jc3ZQYXRoLCBgJHtjc3ZSb3d9XFxuYCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBpZiAoZXJyICE9PSBudWxsKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKFxuICAgICAgICAgICdFcnJvciB3cml0aW5nIHRvIG1ldHJpY3MgY3N2IGZpbGUgYXQgcGF0aDogJXMgOiAlcycsXG4gICAgICAgICAgdGhpcy5jc3ZQYXRoLFxuICAgICAgICAgIGVyclxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIFRoaXMgbWlkZGxld2FyZSBlbmFibGVzIHBlci1yZXF1ZXN0IGNsaWVudC1zaWRlIG1ldHJpY3MuICBNZXRyaWNzIGZvciBlYWNoXG4gKiByZXF1ZXN0IHdpbGwgYmUgd3JpdHRlbiB0byBhIENTViBmaWxlOyB0aGlzIGZpbGUgY2FuIGJlIGFuYWx5emVkIG9yIHNoYXJlZFxuICogd2l0aCBNb21lbnRvIHRvIGRpYWdub3NlIHBlcmZvcm1hbmNlIGlzc3Vlcy5cbiAqXG4gKiBUaGUgbWV0cmljcyBmb3JtYXQgaXMgY3VycmVudGx5IGNvbnNpZGVyZWQgZXhwZXJpbWVudGFsOyBpbiBhIGZ1dHVyZSByZWxlYXNlLFxuICogb25jZSB0aGUgZm9ybWF0IGlzIGNvbnNpZGVyZWQgc3RhYmxlLCB0aGlzIGNsYXNzIHdpbGwgYmUgcmVuYW1lZCB0byByZW1vdmVcbiAqIHRoZSBFeHBlcmltZW50YWwgcHJlZml4LlxuICpcbiAqIFdBUk5JTkc6IGVuYWJsaW5nIHRoaXMgbWlkZGxld2FyZSBtYXkgaGF2ZSBtaW5vciBwZXJmb3JtYW5jZSBpbXBsaWNhdGlvbnMsXG4gKiBzbyBlbmFibGUgd2l0aCBjYXV0aW9uLlxuICpcbiAqIFdBUk5JTkc6IGRlcGVuZGluZyBvbiB5b3VyIHJlcXVlc3Qgdm9sdW1lLCB0aGUgQ1NWIGZpbGUgc2l6ZSBtYXkgZ3JvdyBxdWlja2x5O1xuICogbmVpdGhlciBzYW1wbGluZyBub3IgZmlsZSBjb21wcmVzc2lvbiAvIHJvdGF0aW9uIGFyZSBpbmNsdWRlZCBhdCB0aGlzIHRpbWVcbiAqICh0aG91Z2ggdGhleSBtYXkgYmUgYWRkZWQgaW4gdGhlIGZ1dHVyZSkuXG4gKlxuICogU2VlIGBhZHZhbmNlZC50c2AgaW4gdGhlIGV4YW1wbGVzIGRpcmVjdG9yeSBmb3IgYW4gZXhhbXBsZSBvZiBob3cgdG8gc2V0IHVwXG4gKiB5b3VyIHtDb25maWd1cmF0aW9ufSB0byBlbmFibGUgdGhpcyBtaWRkbGV3YXJlLlxuICovXG5leHBvcnQgY2xhc3MgRXhwZXJpbWVudGFsTWV0cmljc0Nzdk1pZGRsZXdhcmUgZXh0ZW5kcyBFeHBlcmltZW50YWxNZXRyaWNzTWlkZGxld2FyZSB7XG4gIHN0YXRpYyBudW1BY3RpdmVSZXF1ZXN0cyA9IDA7XG5cbiAgcHJpdmF0ZSByZWFkb25seSBjc3ZQYXRoOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoY3N2UGF0aDogc3RyaW5nLCBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeSkge1xuICAgIHN1cGVyKFxuICAgICAgbG9nZ2VyRmFjdG9yeSxcbiAgICAgIChwLCBsLCBjKSA9PlxuICAgICAgICBuZXcgRXhwZXJpbWVudGFsTWV0cmljc0Nzdk1pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlcihwLCBsLCBjLCBjc3ZQYXRoKVxuICAgICk7XG4gICAgdGhpcy5jc3ZQYXRoID0gY3N2UGF0aDtcbiAgICBmcy53cml0ZUZpbGVTeW5jKHRoaXMuY3N2UGF0aCwgYCR7dGhpcy5maWVsZE5hbWVzKCkuam9pbignLCcpfVxcbmApO1xuICB9XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/experimental-metrics-logging-middleware.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ExperimentalMetricsLoggingMiddleware = void 0;
const experimental_metrics_middleware_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/impl/experimental-metrics-middleware.js [app-route] (ecmascript)");
class ExperimentalMetricsLoggingMiddlewareRequestHandler extends experimental_metrics_middleware_1.ExperimentalMetricsMiddlewareRequestHandler {
    constructor(parent, logger, context){
        super(parent, logger, context);
    }
    emitMetrics(metrics) {
        this.logger.info(JSON.stringify(metrics));
        return Promise.resolve();
    }
}
/**
 * This middleware enables per-request client-side metrics.  Metrics for each
 * request will be written to logs; the log data can be analyzed or shared
 * with Momento to diagnose performance issues.
 *
 * The metrics format is currently considered experimental; in a future release,
 * once the format is considered stable, this class will be renamed to remove
 * the Experimental prefix.
 *
 * It also enables regular logging of congestion in the node event loop. Once
 * per second it will output the event loop utilization ratio, as well as stats
 * about the event loop delay, measured in 20ms increments.
 *
 * WARNING: enabling this middleware may have minor performance implications,
 * so enable with caution.
 *
 * WARNING: depending on your request volume, this middleware will produce a high
 * volume of log output. If you are writing logs directly to local disk, be aware
 * of disk usage and make sure you have log rotation / compression enabled via a
 * tool such as `logrotate`.
 *
 * See `advanced.ts` in the examples directory for an example of how to set up
 * your {Configuration} to enable this middleware.
 */ class ExperimentalMetricsLoggingMiddleware extends experimental_metrics_middleware_1.ExperimentalMetricsMiddleware {
    constructor(loggerFactory){
        super(loggerFactory, (p, l, c)=>new ExperimentalMetricsLoggingMiddlewareRequestHandler(p, l, c));
    }
}
exports.ExperimentalMetricsLoggingMiddleware = ExperimentalMetricsLoggingMiddleware; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwZXJpbWVudGFsLW1ldHJpY3MtbG9nZ2luZy1taWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbmZpZy9taWRkbGV3YXJlL2V4cGVyaW1lbnRhbC1tZXRyaWNzLWxvZ2dpbmctbWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSw0RkFJZ0Q7QUFHaEQsTUFBTSxrREFBbUQsU0FBUSw2RUFBMkM7SUFDMUcsWUFDRSxNQUFxQyxFQUNyQyxNQUFxQixFQUNyQixPQUF3QztRQUV4QyxLQUFLLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRUQsV0FBVyxDQUFDLE9BQW1DO1FBQzdDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUMxQyxPQUFPLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUMzQixDQUFDO0NBQ0Y7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F1Qkc7QUFDSCxNQUFhLG9DQUFxQyxTQUFRLCtEQUE2QjtJQUNyRixZQUFZLGFBQW1DO1FBQzdDLEtBQUssQ0FDSCxhQUFhLEVBQ2IsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQ1YsSUFBSSxrREFBa0QsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUNsRSxDQUFDO0lBQ0osQ0FBQztDQUNGO0FBUkQsb0ZBUUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01vbWVudG9Mb2dnZXIsIE1vbWVudG9Mb2dnZXJGYWN0b3J5fSBmcm9tICcuLi8uLi8nO1xuaW1wb3J0IHtcbiAgRXhwZXJpbWVudGFsTWV0cmljc01pZGRsZXdhcmUsXG4gIEV4cGVyaW1lbnRhbE1ldHJpY3NNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXIsXG4gIEV4cGVyaW1lbnRhbFJlcXVlc3RNZXRyaWNzLFxufSBmcm9tICcuL2ltcGwvZXhwZXJpbWVudGFsLW1ldHJpY3MtbWlkZGxld2FyZSc7XG5pbXBvcnQge01pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlckNvbnRleHR9IGZyb20gJy4vbWlkZGxld2FyZSc7XG5cbmNsYXNzIEV4cGVyaW1lbnRhbE1ldHJpY3NMb2dnaW5nTWlkZGxld2FyZVJlcXVlc3RIYW5kbGVyIGV4dGVuZHMgRXhwZXJpbWVudGFsTWV0cmljc01pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlciB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHBhcmVudDogRXhwZXJpbWVudGFsTWV0cmljc01pZGRsZXdhcmUsXG4gICAgbG9nZ2VyOiBNb21lbnRvTG9nZ2VyLFxuICAgIGNvbnRleHQ6IE1pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlckNvbnRleHRcbiAgKSB7XG4gICAgc3VwZXIocGFyZW50LCBsb2dnZXIsIGNvbnRleHQpO1xuICB9XG5cbiAgZW1pdE1ldHJpY3MobWV0cmljczogRXhwZXJpbWVudGFsUmVxdWVzdE1ldHJpY3MpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICB0aGlzLmxvZ2dlci5pbmZvKEpTT04uc3RyaW5naWZ5KG1ldHJpY3MpKTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBUaGlzIG1pZGRsZXdhcmUgZW5hYmxlcyBwZXItcmVxdWVzdCBjbGllbnQtc2lkZSBtZXRyaWNzLiAgTWV0cmljcyBmb3IgZWFjaFxuICogcmVxdWVzdCB3aWxsIGJlIHdyaXR0ZW4gdG8gbG9nczsgdGhlIGxvZyBkYXRhIGNhbiBiZSBhbmFseXplZCBvciBzaGFyZWRcbiAqIHdpdGggTW9tZW50byB0byBkaWFnbm9zZSBwZXJmb3JtYW5jZSBpc3N1ZXMuXG4gKlxuICogVGhlIG1ldHJpY3MgZm9ybWF0IGlzIGN1cnJlbnRseSBjb25zaWRlcmVkIGV4cGVyaW1lbnRhbDsgaW4gYSBmdXR1cmUgcmVsZWFzZSxcbiAqIG9uY2UgdGhlIGZvcm1hdCBpcyBjb25zaWRlcmVkIHN0YWJsZSwgdGhpcyBjbGFzcyB3aWxsIGJlIHJlbmFtZWQgdG8gcmVtb3ZlXG4gKiB0aGUgRXhwZXJpbWVudGFsIHByZWZpeC5cbiAqXG4gKiBJdCBhbHNvIGVuYWJsZXMgcmVndWxhciBsb2dnaW5nIG9mIGNvbmdlc3Rpb24gaW4gdGhlIG5vZGUgZXZlbnQgbG9vcC4gT25jZVxuICogcGVyIHNlY29uZCBpdCB3aWxsIG91dHB1dCB0aGUgZXZlbnQgbG9vcCB1dGlsaXphdGlvbiByYXRpbywgYXMgd2VsbCBhcyBzdGF0c1xuICogYWJvdXQgdGhlIGV2ZW50IGxvb3AgZGVsYXksIG1lYXN1cmVkIGluIDIwbXMgaW5jcmVtZW50cy5cbiAqXG4gKiBXQVJOSU5HOiBlbmFibGluZyB0aGlzIG1pZGRsZXdhcmUgbWF5IGhhdmUgbWlub3IgcGVyZm9ybWFuY2UgaW1wbGljYXRpb25zLFxuICogc28gZW5hYmxlIHdpdGggY2F1dGlvbi5cbiAqXG4gKiBXQVJOSU5HOiBkZXBlbmRpbmcgb24geW91ciByZXF1ZXN0IHZvbHVtZSwgdGhpcyBtaWRkbGV3YXJlIHdpbGwgcHJvZHVjZSBhIGhpZ2hcbiAqIHZvbHVtZSBvZiBsb2cgb3V0cHV0LiBJZiB5b3UgYXJlIHdyaXRpbmcgbG9ncyBkaXJlY3RseSB0byBsb2NhbCBkaXNrLCBiZSBhd2FyZVxuICogb2YgZGlzayB1c2FnZSBhbmQgbWFrZSBzdXJlIHlvdSBoYXZlIGxvZyByb3RhdGlvbiAvIGNvbXByZXNzaW9uIGVuYWJsZWQgdmlhIGFcbiAqIHRvb2wgc3VjaCBhcyBgbG9ncm90YXRlYC5cbiAqXG4gKiBTZWUgYGFkdmFuY2VkLnRzYCBpbiB0aGUgZXhhbXBsZXMgZGlyZWN0b3J5IGZvciBhbiBleGFtcGxlIG9mIGhvdyB0byBzZXQgdXBcbiAqIHlvdXIge0NvbmZpZ3VyYXRpb259IHRvIGVuYWJsZSB0aGlzIG1pZGRsZXdhcmUuXG4gKi9cbmV4cG9ydCBjbGFzcyBFeHBlcmltZW50YWxNZXRyaWNzTG9nZ2luZ01pZGRsZXdhcmUgZXh0ZW5kcyBFeHBlcmltZW50YWxNZXRyaWNzTWlkZGxld2FyZSB7XG4gIGNvbnN0cnVjdG9yKGxvZ2dlckZhY3Rvcnk6IE1vbWVudG9Mb2dnZXJGYWN0b3J5KSB7XG4gICAgc3VwZXIoXG4gICAgICBsb2dnZXJGYWN0b3J5LFxuICAgICAgKHAsIGwsIGMpID0+XG4gICAgICAgIG5ldyBFeHBlcmltZW50YWxNZXRyaWNzTG9nZ2luZ01pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlcihwLCBsLCBjKVxuICAgICk7XG4gIH1cbn1cbiJdfQ==

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/experimental-active-request-count-middleware.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ExperimentalActiveRequestCountLoggingMiddleware = void 0;
const experimental_metrics_middleware_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/impl/experimental-metrics-middleware.js [app-route] (ecmascript)");
class ExperimentalActiveRequestCountLoggingMiddlewareRequestHandler extends experimental_metrics_middleware_1.ExperimentalMetricsMiddlewareRequestHandler {
    constructor(parent, logger, context){
        super(parent, logger, context);
    }
    recordMetrics() {
        this.parent.decrementActiveRequestCount();
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    emitMetrics(metrics) {
        return Promise.resolve();
    }
}
/**
 * This middleware enables a periodic task to emit the active request count every second as a JSON
 *
 * See `advanced.ts` in the examples directory for an example of how to set up
 * your {Configuration} to enable this middleware.
 */ class ExperimentalActiveRequestCountLoggingMiddleware extends experimental_metrics_middleware_1.ExperimentalMetricsMiddleware {
    constructor(loggerFactory){
        super(loggerFactory, (p, l, c)=>new ExperimentalActiveRequestCountLoggingMiddlewareRequestHandler(p, l, c));
        this.isLoggingStarted = false;
        this.metricsLogInterval = 1000;
        // this is typed as any because JS returns a number for intervalId but
        // TS returns a NodeJS.Timeout.
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        this.intervalId = null; // Store the interval ID
    }
    init() {
        if (!this.isLoggingStarted) {
            this.isLoggingStarted = true;
            this.startLogging();
        }
    }
    startLogging() {
        this.intervalId = setInterval(()=>{
            const metrics = {
                activeRequestCount: this.activeRequestCount(),
                timestamp: Date.now()
            };
            this.logger.info(JSON.stringify(metrics));
        }, this.metricsLogInterval);
    }
    close() {
        if (this.intervalId !== null) {
            this.logger.debug('Stopping active request count metrics logging.');
            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
            clearInterval(this.intervalId);
            this.intervalId = null;
            this.isLoggingStarted = false;
            this.logger.debug('Active request count metrics logging stopped.');
        }
    }
}
exports.ExperimentalActiveRequestCountLoggingMiddleware = ExperimentalActiveRequestCountLoggingMiddleware; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwZXJpbWVudGFsLWFjdGl2ZS1yZXF1ZXN0LWNvdW50LW1pZGRsZXdhcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29uZmlnL21pZGRsZXdhcmUvZXhwZXJpbWVudGFsLWFjdGl2ZS1yZXF1ZXN0LWNvdW50LW1pZGRsZXdhcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsNEZBSWdEO0FBRWhELE1BQU0sNkRBQThELFNBQVEsNkVBQTJDO0lBQ3JILFlBQ0UsTUFBcUMsRUFDckMsTUFBcUIsRUFDckIsT0FBd0M7UUFFeEMsS0FBSyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVrQixhQUFhO1FBQzlCLElBQUksQ0FBQyxNQUFNLENBQUMsMkJBQTJCLEVBQUUsQ0FBQztJQUM1QyxDQUFDO0lBRUQsNkRBQTZEO0lBQzdELFdBQVcsQ0FBQyxPQUFtQztRQUM3QyxPQUFPLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUMzQixDQUFDO0NBQ0Y7QUFFRDs7Ozs7R0FLRztBQUNILE1BQWEsK0NBQWdELFNBQVEsK0RBQTZCO0lBUWhHLFlBQVksYUFBbUM7UUFDN0MsS0FBSyxDQUNILGFBQWEsRUFDYixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FDVixJQUFJLDZEQUE2RCxDQUMvRCxDQUFDLEVBQ0QsQ0FBQyxFQUNELENBQUMsQ0FDRixDQUNKLENBQUM7UUFoQkkscUJBQWdCLEdBQUcsS0FBSyxDQUFDO1FBQ2hCLHVCQUFrQixHQUFHLElBQUksQ0FBQztRQUMzQyxzRUFBc0U7UUFDdEUsK0JBQStCO1FBQy9CLDhEQUE4RDtRQUN0RCxlQUFVLEdBQWUsSUFBSSxDQUFDLENBQUMsd0JBQXdCO0lBWS9ELENBQUM7SUFFRCxJQUFJO1FBQ0YsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUMxQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDO1lBQzdCLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUNyQjtJQUNILENBQUM7SUFFTyxZQUFZO1FBQ2xCLElBQUksQ0FBQyxVQUFVLEdBQUcsV0FBVyxDQUFDLEdBQUcsRUFBRTtZQUNqQyxNQUFNLE9BQU8sR0FBRztnQkFDZCxrQkFBa0IsRUFBRSxJQUFJLENBQUMsa0JBQWtCLEVBQUU7Z0JBQzdDLFNBQVMsRUFBRSxJQUFJLENBQUMsR0FBRyxFQUFFO2FBQ3RCLENBQUM7WUFDRixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDNUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxJQUFJLENBQUMsVUFBVSxLQUFLLElBQUksRUFBRTtZQUM1QixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxnREFBZ0QsQ0FBQyxDQUFDO1lBQ3BFLGlFQUFpRTtZQUNqRSxhQUFhLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQy9CLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUM7WUFDOUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsK0NBQStDLENBQUMsQ0FBQztTQUNwRTtJQUNILENBQUM7Q0FDRjtBQS9DRCwwR0ErQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01vbWVudG9Mb2dnZXIsIE1vbWVudG9Mb2dnZXJGYWN0b3J5fSBmcm9tICcuLi8uLi8nO1xuaW1wb3J0IHtNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXJDb250ZXh0fSBmcm9tICcuL21pZGRsZXdhcmUnO1xuaW1wb3J0IHtcbiAgRXhwZXJpbWVudGFsTWV0cmljc01pZGRsZXdhcmUsXG4gIEV4cGVyaW1lbnRhbE1ldHJpY3NNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXIsXG4gIEV4cGVyaW1lbnRhbFJlcXVlc3RNZXRyaWNzLFxufSBmcm9tICcuL2ltcGwvZXhwZXJpbWVudGFsLW1ldHJpY3MtbWlkZGxld2FyZSc7XG5cbmNsYXNzIEV4cGVyaW1lbnRhbEFjdGl2ZVJlcXVlc3RDb3VudExvZ2dpbmdNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXIgZXh0ZW5kcyBFeHBlcmltZW50YWxNZXRyaWNzTWlkZGxld2FyZVJlcXVlc3RIYW5kbGVyIHtcbiAgY29uc3RydWN0b3IoXG4gICAgcGFyZW50OiBFeHBlcmltZW50YWxNZXRyaWNzTWlkZGxld2FyZSxcbiAgICBsb2dnZXI6IE1vbWVudG9Mb2dnZXIsXG4gICAgY29udGV4dDogTWlkZGxld2FyZVJlcXVlc3RIYW5kbGVyQ29udGV4dFxuICApIHtcbiAgICBzdXBlcihwYXJlbnQsIGxvZ2dlciwgY29udGV4dCk7XG4gIH1cblxuICBwcm90ZWN0ZWQgb3ZlcnJpZGUgcmVjb3JkTWV0cmljcygpOiB2b2lkIHtcbiAgICB0aGlzLnBhcmVudC5kZWNyZW1lbnRBY3RpdmVSZXF1ZXN0Q291bnQoKTtcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgZW1pdE1ldHJpY3MobWV0cmljczogRXhwZXJpbWVudGFsUmVxdWVzdE1ldHJpY3MpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBUaGlzIG1pZGRsZXdhcmUgZW5hYmxlcyBhIHBlcmlvZGljIHRhc2sgdG8gZW1pdCB0aGUgYWN0aXZlIHJlcXVlc3QgY291bnQgZXZlcnkgc2Vjb25kIGFzIGEgSlNPTlxuICpcbiAqIFNlZSBgYWR2YW5jZWQudHNgIGluIHRoZSBleGFtcGxlcyBkaXJlY3RvcnkgZm9yIGFuIGV4YW1wbGUgb2YgaG93IHRvIHNldCB1cFxuICogeW91ciB7Q29uZmlndXJhdGlvbn0gdG8gZW5hYmxlIHRoaXMgbWlkZGxld2FyZS5cbiAqL1xuZXhwb3J0IGNsYXNzIEV4cGVyaW1lbnRhbEFjdGl2ZVJlcXVlc3RDb3VudExvZ2dpbmdNaWRkbGV3YXJlIGV4dGVuZHMgRXhwZXJpbWVudGFsTWV0cmljc01pZGRsZXdhcmUge1xuICBwcml2YXRlIGlzTG9nZ2luZ1N0YXJ0ZWQgPSBmYWxzZTtcbiAgcHJpdmF0ZSByZWFkb25seSBtZXRyaWNzTG9nSW50ZXJ2YWwgPSAxMDAwO1xuICAvLyB0aGlzIGlzIHR5cGVkIGFzIGFueSBiZWNhdXNlIEpTIHJldHVybnMgYSBudW1iZXIgZm9yIGludGVydmFsSWQgYnV0XG4gIC8vIFRTIHJldHVybnMgYSBOb2RlSlMuVGltZW91dC5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgcHJpdmF0ZSBpbnRlcnZhbElkOiBhbnkgfCBudWxsID0gbnVsbDsgLy8gU3RvcmUgdGhlIGludGVydmFsIElEXG5cbiAgY29uc3RydWN0b3IobG9nZ2VyRmFjdG9yeTogTW9tZW50b0xvZ2dlckZhY3RvcnkpIHtcbiAgICBzdXBlcihcbiAgICAgIGxvZ2dlckZhY3RvcnksXG4gICAgICAocCwgbCwgYykgPT5cbiAgICAgICAgbmV3IEV4cGVyaW1lbnRhbEFjdGl2ZVJlcXVlc3RDb3VudExvZ2dpbmdNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXIoXG4gICAgICAgICAgcCxcbiAgICAgICAgICBsLFxuICAgICAgICAgIGNcbiAgICAgICAgKVxuICAgICk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIGlmICghdGhpcy5pc0xvZ2dpbmdTdGFydGVkKSB7XG4gICAgICB0aGlzLmlzTG9nZ2luZ1N0YXJ0ZWQgPSB0cnVlO1xuICAgICAgdGhpcy5zdGFydExvZ2dpbmcoKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHN0YXJ0TG9nZ2luZygpOiB2b2lkIHtcbiAgICB0aGlzLmludGVydmFsSWQgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICBjb25zdCBtZXRyaWNzID0ge1xuICAgICAgICBhY3RpdmVSZXF1ZXN0Q291bnQ6IHRoaXMuYWN0aXZlUmVxdWVzdENvdW50KCksXG4gICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcbiAgICAgIH07XG4gICAgICB0aGlzLmxvZ2dlci5pbmZvKEpTT04uc3RyaW5naWZ5KG1ldHJpY3MpKTtcbiAgICB9LCB0aGlzLm1ldHJpY3NMb2dJbnRlcnZhbCk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBpZiAodGhpcy5pbnRlcnZhbElkICE9PSBudWxsKSB7XG4gICAgICB0aGlzLmxvZ2dlci5kZWJ1ZygnU3RvcHBpbmcgYWN0aXZlIHJlcXVlc3QgY291bnQgbWV0cmljcyBsb2dnaW5nLicpO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtYXJndW1lbnRcbiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbElkKTtcbiAgICAgIHRoaXMuaW50ZXJ2YWxJZCA9IG51bGw7XG4gICAgICB0aGlzLmlzTG9nZ2luZ1N0YXJ0ZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMubG9nZ2VyLmRlYnVnKCdBY3RpdmUgcmVxdWVzdCBjb3VudCBtZXRyaWNzIGxvZ2dpbmcgc3RvcHBlZC4nKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/experimental-event-loop-perf-middleware.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ExperimentalEventLoopPerformanceMetricsMiddleware = void 0;
const perf_hooks_1 = require("perf_hooks");
class ExperimentalEventLoopPerformanceMetricsMiddlewareRequestHandler {
    onRequestBody(request) {
        return Promise.resolve(request);
    }
    onRequestMetadata(metadata) {
        return Promise.resolve(metadata);
    }
    onResponseMetadata(metadata) {
        return Promise.resolve(metadata);
    }
    onResponseBody(response) {
        return Promise.resolve(response);
    }
    onResponseStatus(status) {
        return Promise.resolve(status);
    }
}
/**
 * This middleware enables event-loop performance metrics.It runs a periodic task specified by metricsLogInterval
 * to gather various event-loop metrics that can be correlated with the overall application's performance. This is
 * particularly helpful to analyze and correlate resource contention with higher network latencies.
 *
 * See {@link StateMetrics} for each heuristic/metric and their description.
 */ class ExperimentalEventLoopPerformanceMetricsMiddleware {
    constructor(loggerFactory){
        this.metricsLogInterval = 1000;
        this.eventLoopDelayInterval = 20;
        this.isLoggingStarted = false;
        // this is typed as any because JS returns a number for intervalId but
        // TS returns a NodeJS.Timeout.
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        this.intervalId = null; // Store the interval ID
        this.logger = loggerFactory.getLogger(this);
    }
    init() {
        if (!this.isLoggingStarted) {
            this.isLoggingStarted = true;
            this.startLogging();
        }
    }
    startLogging() {
        this.eldMonitor = (0, perf_hooks_1.monitorEventLoopDelay)({
            resolution: this.eventLoopDelayInterval
        });
        this.eldMonitor.enable();
        this.elu = perf_hooks_1.performance.eventLoopUtilization();
        this.intervalId = setInterval(()=>{
            this.elu = perf_hooks_1.performance.eventLoopUtilization(this.elu);
            const metrics = {
                eventLoopUtilization: this.elu.utilization,
                eventLoopDelayMean: this.eldMonitor.mean,
                eventLoopDelayMin: this.eldMonitor.min,
                eventLoopDelayP50: this.eldMonitor.percentile(50),
                eventLoopDelayP75: this.eldMonitor.percentile(75),
                eventLoopDelayP90: this.eldMonitor.percentile(90),
                eventLoopDelayP95: this.eldMonitor.percentile(95),
                eventLoopDelayP99: this.eldMonitor.percentile(99),
                eventLoopDelayMax: this.eldMonitor.max,
                timestamp: Date.now()
            };
            this.logger.info(JSON.stringify(metrics));
            this.eldMonitor.reset();
        }, this.metricsLogInterval);
    }
    onNewRequest() {
        return new ExperimentalEventLoopPerformanceMetricsMiddlewareRequestHandler();
    }
    close() {
        if (this.intervalId !== null) {
            this.logger.debug('Stopping event loop metrics logging.');
            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
            clearInterval(this.intervalId);
            this.intervalId = null;
            this.isLoggingStarted = false;
            this.logger.debug('Event loop metrics logging stopped.');
        }
    }
}
exports.ExperimentalEventLoopPerformanceMetricsMiddleware = ExperimentalEventLoopPerformanceMetricsMiddleware; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwZXJpbWVudGFsLWV2ZW50LWxvb3AtcGVyZi1taWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbmZpZy9taWRkbGV3YXJlL2V4cGVyaW1lbnRhbC1ldmVudC1sb29wLXBlcmYtbWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFPQSwyQ0FJb0I7QUF3RHBCLE1BQU0sK0RBQStEO0lBR25FLGFBQWEsQ0FBQyxPQUEwQjtRQUN0QyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELGlCQUFpQixDQUFDLFFBQTRCO1FBQzVDLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsa0JBQWtCLENBQ2hCLFFBQTRCO1FBRTVCLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsY0FBYyxDQUNaLFFBQWtDO1FBRWxDLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsZ0JBQWdCLENBQUMsTUFBd0I7UUFDdkMsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2pDLENBQUM7Q0FDRjtBQUVEOzs7Ozs7R0FNRztBQUNILE1BQWEsaURBQWlEO0lBYzVELFlBQVksYUFBbUM7UUFYOUIsdUJBQWtCLEdBQUcsSUFBSSxDQUFDO1FBQzFCLDJCQUFzQixHQUFHLEVBQUUsQ0FBQztRQUdyQyxxQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFDakMsc0VBQXNFO1FBQ3RFLCtCQUErQjtRQUMvQiw4REFBOEQ7UUFDdEQsZUFBVSxHQUFlLElBQUksQ0FBQyxDQUFDLHdCQUF3QjtRQUk3RCxJQUFJLENBQUMsTUFBTSxHQUFHLGFBQWEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVELElBQUk7UUFDRixJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQzFCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7WUFDN0IsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3JCO0lBQ0gsQ0FBQztJQUVPLFlBQVk7UUFDbEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFBLGtDQUFxQixFQUFDO1lBQ3RDLFVBQVUsRUFBRSxJQUFJLENBQUMsc0JBQXNCO1NBQ3hDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDekIsSUFBSSxDQUFDLEdBQUcsR0FBRyx3QkFBVyxDQUFDLG9CQUFvQixFQUFFLENBQUM7UUFFOUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxXQUFXLENBQUMsR0FBRyxFQUFFO1lBQ2pDLElBQUksQ0FBQyxHQUFHLEdBQUcsd0JBQVcsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDdEQsTUFBTSxPQUFPLEdBQWlCO2dCQUM1QixvQkFBb0IsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVc7Z0JBQzFDLGtCQUFrQixFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSTtnQkFDeEMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHO2dCQUN0QyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUM7Z0JBQ2pELGlCQUFpQixFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQztnQkFDakQsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDO2dCQUNqRCxpQkFBaUIsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUM7Z0JBQ2pELGlCQUFpQixFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQztnQkFDakQsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHO2dCQUN0QyxTQUFTLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRTthQUN0QixDQUFDO1lBQ0YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzFDLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDMUIsQ0FBQyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFRCxZQUFZO1FBQ1YsT0FBTyxJQUFJLCtEQUErRCxFQUFFLENBQUM7SUFDL0UsQ0FBQztJQUVELEtBQUs7UUFDSCxJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssSUFBSSxFQUFFO1lBQzVCLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLHNDQUFzQyxDQUFDLENBQUM7WUFDMUQsaUVBQWlFO1lBQ2pFLGFBQWEsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDL0IsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7WUFDdkIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEtBQUssQ0FBQztZQUM5QixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxxQ0FBcUMsQ0FBQyxDQUFDO1NBQzFEO0lBQ0gsQ0FBQztDQUNGO0FBakVELDhHQWlFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIE1pZGRsZXdhcmUsXG4gIE1pZGRsZXdhcmVNZXNzYWdlLFxuICBNaWRkbGV3YXJlTWV0YWRhdGEsXG4gIE1pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlcixcbiAgTWlkZGxld2FyZVN0YXR1cyxcbn0gZnJvbSAnLi9taWRkbGV3YXJlJztcbmltcG9ydCB7XG4gIEV2ZW50TG9vcFV0aWxpemF0aW9uLFxuICBtb25pdG9yRXZlbnRMb29wRGVsYXksXG4gIHBlcmZvcm1hbmNlLFxufSBmcm9tICdwZXJmX2hvb2tzJztcbmltcG9ydCB7TW9tZW50b0xvZ2dlciwgTW9tZW50b0xvZ2dlckZhY3Rvcnl9IGZyb20gJ0Bnb21vbWVudG8vc2RrLWNvcmUnO1xuaW1wb3J0IHtJbnRlcnZhbEhpc3RvZ3JhbX0gZnJvbSAnbm9kZTpwZXJmX2hvb2tzJztcblxuaW50ZXJmYWNlIFN0YXRlTWV0cmljcyB7XG4gIC8qKlxuICAgKiBUaGUgcHJvcG9ydGlvbiBvZiB0aW1lIHRoZSBldmVudCBsb29wIHdhcyBidXN5IG92ZXIgdGhlIGxhc3Qgc2Vjb25kLlxuICAgKi9cbiAgZXZlbnRMb29wVXRpbGl6YXRpb246IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIGF2ZXJhZ2UgZXZlbnQgbG9vcCBkZWxheSBvdmVyIHRoZSBsYXN0IHNlY29uZCwgbWVhc3VyZWQgaW4gMjBtcyBpbmNyZW1lbnRzLlxuICAgKi9cbiAgZXZlbnRMb29wRGVsYXlNZWFuOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSBtaW5pbXVtIGV2ZW50IGxvb3AgZGVsYXkgb3ZlciB0aGUgbGFzdCBzZWNvbmQsIG1lYXN1cmVkIGluIDIwbXMgaW5jcmVtZW50cy5cbiAgICovXG4gIGV2ZW50TG9vcERlbGF5TWluOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSA1MHRoIHBlcmNlbnRpbGUgZXZlbnQgbG9vcCBkZWxheSBvdmVyIHRoZSBsYXN0IHNlY29uZCwgbWVhc3VyZWQgaW4gMjBtcyBpbmNyZW1lbnRzLlxuICAgKi9cbiAgZXZlbnRMb29wRGVsYXlQNTA6IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIDc1dGggcGVyY2VudGlsZSBldmVudCBsb29wIGRlbGF5IG92ZXIgdGhlIGxhc3Qgc2Vjb25kLCBtZWFzdXJlZCBpbiAyMG1zIGluY3JlbWVudHMuXG4gICAqL1xuICBldmVudExvb3BEZWxheVA3NTogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgOTB0aCBwZXJjZW50aWxlIGV2ZW50IGxvb3AgZGVsYXkgb3ZlciB0aGUgbGFzdCBzZWNvbmQsIG1lYXN1cmVkIGluIDIwbXMgaW5jcmVtZW50cy5cbiAgICovXG4gIGV2ZW50TG9vcERlbGF5UDkwOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSA5NXRoIHBlcmNlbnRpbGUgZXZlbnQgbG9vcCBkZWxheSBvdmVyIHRoZSBsYXN0IHNlY29uZCwgbWVhc3VyZWQgaW4gMjBtcyBpbmNyZW1lbnRzLlxuICAgKi9cbiAgZXZlbnRMb29wRGVsYXlQOTU6IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIDk5dGggcGVyY2VudGlsZSBldmVudCBsb29wIGRlbGF5IG92ZXIgdGhlIGxhc3Qgc2Vjb25kLCBtZWFzdXJlZCBpbiAyMG1zIGluY3JlbWVudHMuXG4gICAqL1xuICBldmVudExvb3BEZWxheVA5OTogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgbWF4aW11bSBldmVudCBsb29wIGRlbGF5IG92ZXIgdGhlIGxhc3Qgc2Vjb25kLCBtZWFzdXJlZCBpbiAyMG1zIGluY3JlbWVudHMuXG4gICAqL1xuICBldmVudExvb3BEZWxheU1heDogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgdGltZXN0YW1wIHdoZW4gdGhlIHN0YXRlIG1ldHJpY3MgZ290IHJlY29yZGVkXG4gICAqL1xuICB0aW1lc3RhbXA6IG51bWJlcjtcbn1cblxuY2xhc3MgRXhwZXJpbWVudGFsRXZlbnRMb29wUGVyZm9ybWFuY2VNZXRyaWNzTWlkZGxld2FyZVJlcXVlc3RIYW5kbGVyXG4gIGltcGxlbWVudHMgTWlkZGxld2FyZVJlcXVlc3RIYW5kbGVyXG57XG4gIG9uUmVxdWVzdEJvZHkocmVxdWVzdDogTWlkZGxld2FyZU1lc3NhZ2UpOiBQcm9taXNlPE1pZGRsZXdhcmVNZXNzYWdlPiB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShyZXF1ZXN0KTtcbiAgfVxuXG4gIG9uUmVxdWVzdE1ldGFkYXRhKG1ldGFkYXRhOiBNaWRkbGV3YXJlTWV0YWRhdGEpOiBQcm9taXNlPE1pZGRsZXdhcmVNZXRhZGF0YT4ge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobWV0YWRhdGEpO1xuICB9XG5cbiAgb25SZXNwb25zZU1ldGFkYXRhKFxuICAgIG1ldGFkYXRhOiBNaWRkbGV3YXJlTWV0YWRhdGFcbiAgKTogUHJvbWlzZTxNaWRkbGV3YXJlTWV0YWRhdGE+IHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG1ldGFkYXRhKTtcbiAgfVxuXG4gIG9uUmVzcG9uc2VCb2R5KFxuICAgIHJlc3BvbnNlOiBNaWRkbGV3YXJlTWVzc2FnZSB8IG51bGxcbiAgKTogUHJvbWlzZTxNaWRkbGV3YXJlTWVzc2FnZSB8IG51bGw+IHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgfVxuXG4gIG9uUmVzcG9uc2VTdGF0dXMoc3RhdHVzOiBNaWRkbGV3YXJlU3RhdHVzKTogUHJvbWlzZTxNaWRkbGV3YXJlU3RhdHVzPiB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShzdGF0dXMpO1xuICB9XG59XG5cbi8qKlxuICogVGhpcyBtaWRkbGV3YXJlIGVuYWJsZXMgZXZlbnQtbG9vcCBwZXJmb3JtYW5jZSBtZXRyaWNzLkl0IHJ1bnMgYSBwZXJpb2RpYyB0YXNrIHNwZWNpZmllZCBieSBtZXRyaWNzTG9nSW50ZXJ2YWxcbiAqIHRvIGdhdGhlciB2YXJpb3VzIGV2ZW50LWxvb3AgbWV0cmljcyB0aGF0IGNhbiBiZSBjb3JyZWxhdGVkIHdpdGggdGhlIG92ZXJhbGwgYXBwbGljYXRpb24ncyBwZXJmb3JtYW5jZS4gVGhpcyBpc1xuICogcGFydGljdWxhcmx5IGhlbHBmdWwgdG8gYW5hbHl6ZSBhbmQgY29ycmVsYXRlIHJlc291cmNlIGNvbnRlbnRpb24gd2l0aCBoaWdoZXIgbmV0d29yayBsYXRlbmNpZXMuXG4gKlxuICogU2VlIHtAbGluayBTdGF0ZU1ldHJpY3N9IGZvciBlYWNoIGhldXJpc3RpYy9tZXRyaWMgYW5kIHRoZWlyIGRlc2NyaXB0aW9uLlxuICovXG5leHBvcnQgY2xhc3MgRXhwZXJpbWVudGFsRXZlbnRMb29wUGVyZm9ybWFuY2VNZXRyaWNzTWlkZGxld2FyZVxuICBpbXBsZW1lbnRzIE1pZGRsZXdhcmVcbntcbiAgcHJpdmF0ZSByZWFkb25seSBtZXRyaWNzTG9nSW50ZXJ2YWwgPSAxMDAwO1xuICBwcml2YXRlIHJlYWRvbmx5IGV2ZW50TG9vcERlbGF5SW50ZXJ2YWwgPSAyMDtcbiAgcHJpdmF0ZSBlbGRNb25pdG9yOiBJbnRlcnZhbEhpc3RvZ3JhbTtcbiAgcHJpdmF0ZSBlbHU6IEV2ZW50TG9vcFV0aWxpemF0aW9uO1xuICBwcml2YXRlIGlzTG9nZ2luZ1N0YXJ0ZWQgPSBmYWxzZTtcbiAgLy8gdGhpcyBpcyB0eXBlZCBhcyBhbnkgYmVjYXVzZSBKUyByZXR1cm5zIGEgbnVtYmVyIGZvciBpbnRlcnZhbElkIGJ1dFxuICAvLyBUUyByZXR1cm5zIGEgTm9kZUpTLlRpbWVvdXQuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gIHByaXZhdGUgaW50ZXJ2YWxJZDogYW55IHwgbnVsbCA9IG51bGw7IC8vIFN0b3JlIHRoZSBpbnRlcnZhbCBJRFxuICBwcml2YXRlIHJlYWRvbmx5IGxvZ2dlcjogTW9tZW50b0xvZ2dlcjtcblxuICBjb25zdHJ1Y3Rvcihsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeSkge1xuICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyRmFjdG9yeS5nZXRMb2dnZXIodGhpcyk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIGlmICghdGhpcy5pc0xvZ2dpbmdTdGFydGVkKSB7XG4gICAgICB0aGlzLmlzTG9nZ2luZ1N0YXJ0ZWQgPSB0cnVlO1xuICAgICAgdGhpcy5zdGFydExvZ2dpbmcoKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHN0YXJ0TG9nZ2luZygpOiB2b2lkIHtcbiAgICB0aGlzLmVsZE1vbml0b3IgPSBtb25pdG9yRXZlbnRMb29wRGVsYXkoe1xuICAgICAgcmVzb2x1dGlvbjogdGhpcy5ldmVudExvb3BEZWxheUludGVydmFsLFxuICAgIH0pO1xuICAgIHRoaXMuZWxkTW9uaXRvci5lbmFibGUoKTtcbiAgICB0aGlzLmVsdSA9IHBlcmZvcm1hbmNlLmV2ZW50TG9vcFV0aWxpemF0aW9uKCk7XG5cbiAgICB0aGlzLmludGVydmFsSWQgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICB0aGlzLmVsdSA9IHBlcmZvcm1hbmNlLmV2ZW50TG9vcFV0aWxpemF0aW9uKHRoaXMuZWx1KTtcbiAgICAgIGNvbnN0IG1ldHJpY3M6IFN0YXRlTWV0cmljcyA9IHtcbiAgICAgICAgZXZlbnRMb29wVXRpbGl6YXRpb246IHRoaXMuZWx1LnV0aWxpemF0aW9uLFxuICAgICAgICBldmVudExvb3BEZWxheU1lYW46IHRoaXMuZWxkTW9uaXRvci5tZWFuLFxuICAgICAgICBldmVudExvb3BEZWxheU1pbjogdGhpcy5lbGRNb25pdG9yLm1pbixcbiAgICAgICAgZXZlbnRMb29wRGVsYXlQNTA6IHRoaXMuZWxkTW9uaXRvci5wZXJjZW50aWxlKDUwKSxcbiAgICAgICAgZXZlbnRMb29wRGVsYXlQNzU6IHRoaXMuZWxkTW9uaXRvci5wZXJjZW50aWxlKDc1KSxcbiAgICAgICAgZXZlbnRMb29wRGVsYXlQOTA6IHRoaXMuZWxkTW9uaXRvci5wZXJjZW50aWxlKDkwKSxcbiAgICAgICAgZXZlbnRMb29wRGVsYXlQOTU6IHRoaXMuZWxkTW9uaXRvci5wZXJjZW50aWxlKDk1KSxcbiAgICAgICAgZXZlbnRMb29wRGVsYXlQOTk6IHRoaXMuZWxkTW9uaXRvci5wZXJjZW50aWxlKDk5KSxcbiAgICAgICAgZXZlbnRMb29wRGVsYXlNYXg6IHRoaXMuZWxkTW9uaXRvci5tYXgsXG4gICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcbiAgICAgIH07XG4gICAgICB0aGlzLmxvZ2dlci5pbmZvKEpTT04uc3RyaW5naWZ5KG1ldHJpY3MpKTtcbiAgICAgIHRoaXMuZWxkTW9uaXRvci5yZXNldCgpO1xuICAgIH0sIHRoaXMubWV0cmljc0xvZ0ludGVydmFsKTtcbiAgfVxuXG4gIG9uTmV3UmVxdWVzdCgpOiBNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXIge1xuICAgIHJldHVybiBuZXcgRXhwZXJpbWVudGFsRXZlbnRMb29wUGVyZm9ybWFuY2VNZXRyaWNzTWlkZGxld2FyZVJlcXVlc3RIYW5kbGVyKCk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBpZiAodGhpcy5pbnRlcnZhbElkICE9PSBudWxsKSB7XG4gICAgICB0aGlzLmxvZ2dlci5kZWJ1ZygnU3RvcHBpbmcgZXZlbnQgbG9vcCBtZXRyaWNzIGxvZ2dpbmcuJyk7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1hcmd1bWVudFxuICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsSWQpO1xuICAgICAgdGhpcy5pbnRlcnZhbElkID0gbnVsbDtcbiAgICAgIHRoaXMuaXNMb2dnaW5nU3RhcnRlZCA9IGZhbHNlO1xuICAgICAgdGhpcy5sb2dnZXIuZGVidWcoJ0V2ZW50IGxvb3AgbWV0cmljcyBsb2dnaW5nIHN0b3BwZWQuJyk7XG4gICAgfVxuICB9XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/experimental-garbage-collection-middleware.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ExperimentalGarbageCollectionPerformanceMetricsMiddleware = void 0;
const perf_hooks_1 = require("perf_hooks");
class ExperimentalGarbageCollectionPerformanceMetricsMiddlewareRequestHandler {
    onRequestBody(request) {
        return Promise.resolve(request);
    }
    onRequestMetadata(metadata) {
        return Promise.resolve(metadata);
    }
    onResponseMetadata(metadata) {
        return Promise.resolve(metadata);
    }
    onResponseBody(response) {
        return Promise.resolve(response);
    }
    onResponseStatus(status) {
        return Promise.resolve(status);
    }
}
/**
 * This middleware enables garbage collection metrics. It subscribers to a GC performance observer provided by
 * node's built-in performance hooks, and logs key GC events. A sample log looks like:
 *
 * {
 *     "entryType": "gc",
 *     "startTime": 8221.879917,
 *     "duration": 2.8905000016093254,  <-- most important field to analyze for stop the world events, measured in milliseconds.
 *     "detail": {
 *         "kind": 4,  <-- constant for NODE_PERFORMANCE_GC_MAJOR. `MAJOR` events might point to GC events causing long delays.
 *         "flags": 32
 *     },
 *     "timestamp": 1710300309368
 * }
 */ class ExperimentalGarbageCollectionPerformanceMetricsMiddleware {
    constructor(loggerFactory){
        this.logger = loggerFactory.getLogger(this);
        this.gcObserver = new perf_hooks_1.PerformanceObserver((items)=>{
            items.getEntries().filter(// NODE_PERFORMANCE_GC_MAJOR indicates a major GC event such as STW (stop-the-world) pauses
            // and other long delays. This filter is to control the volume of GC logs if we were to enable
            // this on a customer's client.
            // NODE_PERFORMANCE_GC_INCREMENTAL prints incremental GC stream of logs when the process is approaching
            // max memory.
            (item)=>{
                if (item.entryType !== 'gc') {
                    return false;
                }
                const gcPerfDetail = item.detail;
                return gcPerfDetail.kind === perf_hooks_1.constants.NODE_PERFORMANCE_GC_MAJOR || gcPerfDetail.kind === perf_hooks_1.constants.NODE_PERFORMANCE_GC_INCREMENTAL;
            }).forEach((item)=>{
                const gcPerfDetail = item.detail;
                const gcEventObject = {
                    entryType: item.entryType,
                    startTime: item.startTime,
                    duration: item.duration,
                    kind: gcPerfDetail.kind,
                    flags: gcPerfDetail.flags,
                    timestamp: Date.now()
                };
                this.logger.info(JSON.stringify(gcEventObject));
            });
        });
        this.gcObserver.observe({
            entryTypes: [
                'gc'
            ]
        });
    }
    onNewRequest() {
        return new ExperimentalGarbageCollectionPerformanceMetricsMiddlewareRequestHandler();
    }
    close() {
        this.gcObserver.disconnect();
    }
}
exports.ExperimentalGarbageCollectionPerformanceMetricsMiddleware = ExperimentalGarbageCollectionPerformanceMetricsMiddleware; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwZXJpbWVudGFsLWdhcmJhZ2UtY29sbGVjdGlvbi1taWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbmZpZy9taWRkbGV3YXJlL2V4cGVyaW1lbnRhbC1nYXJiYWdlLWNvbGxlY3Rpb24tbWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFPQSwyQ0FBMEQ7QUFJMUQsTUFBTSx1RUFBdUU7SUFHM0UsYUFBYSxDQUFDLE9BQTBCO1FBQ3RDLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsaUJBQWlCLENBQUMsUUFBNEI7UUFDNUMsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxrQkFBa0IsQ0FDaEIsUUFBNEI7UUFFNUIsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxjQUFjLENBQ1osUUFBa0M7UUFFbEMsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxNQUF3QjtRQUN2QyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDakMsQ0FBQztDQUNGO0FBRUQ7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFDSCxNQUFhLHlEQUF5RDtJQU1wRSxZQUFZLGFBQW1DO1FBQzdDLElBQUksQ0FBQyxNQUFNLEdBQUcsYUFBYSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUU1QyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksZ0NBQW1CLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDaEQsS0FBSztpQkFDRixVQUFVLEVBQUU7aUJBQ1osTUFBTTtZQUNMLDJGQUEyRjtZQUMzRiw4RkFBOEY7WUFDOUYsK0JBQStCO1lBQy9CLHVHQUF1RztZQUN2RyxjQUFjO1lBQ2QsSUFBSSxDQUFDLEVBQUU7Z0JBQ0wsSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLElBQUksRUFBRTtvQkFDM0IsT0FBTyxLQUFLLENBQUM7aUJBQ2Q7Z0JBQ0QsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLE1BQWlDLENBQUM7Z0JBQzVELE9BQU8sQ0FDTCxZQUFZLENBQUMsSUFBSSxLQUFLLHNCQUFTLENBQUMseUJBQXlCO29CQUN6RCxZQUFZLENBQUMsSUFBSSxLQUFLLHNCQUFTLENBQUMsK0JBQStCLENBQ2hFLENBQUM7WUFDSixDQUFDLENBQ0Y7aUJBQ0EsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNkLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxNQUFpQyxDQUFDO2dCQUM1RCxNQUFNLGFBQWEsR0FBRztvQkFDcEIsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTO29CQUN6QixTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVM7b0JBQ3pCLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtvQkFDdkIsSUFBSSxFQUFFLFlBQVksQ0FBQyxJQUFJO29CQUN2QixLQUFLLEVBQUUsWUFBWSxDQUFDLEtBQUs7b0JBQ3pCLFNBQVMsRUFBRSxJQUFJLENBQUMsR0FBRyxFQUFFO2lCQUN0QixDQUFDO2dCQUNGLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztZQUNsRCxDQUFDLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBQyxVQUFVLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBQyxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVELFlBQVk7UUFDVixPQUFPLElBQUksdUVBQXVFLEVBQUUsQ0FBQztJQUN2RixDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDL0IsQ0FBQztDQUNGO0FBcERELDhIQW9EQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIE1pZGRsZXdhcmUsXG4gIE1pZGRsZXdhcmVNZXNzYWdlLFxuICBNaWRkbGV3YXJlTWV0YWRhdGEsXG4gIE1pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlcixcbiAgTWlkZGxld2FyZVN0YXR1cyxcbn0gZnJvbSAnLi9taWRkbGV3YXJlJztcbmltcG9ydCB7Y29uc3RhbnRzLCBQZXJmb3JtYW5jZU9ic2VydmVyfSBmcm9tICdwZXJmX2hvb2tzJztcbmltcG9ydCB7TW9tZW50b0xvZ2dlciwgTW9tZW50b0xvZ2dlckZhY3Rvcnl9IGZyb20gJ0Bnb21vbWVudG8vc2RrLWNvcmUnO1xuaW1wb3J0IHtOb2RlR0NQZXJmb3JtYW5jZURldGFpbH0gZnJvbSAnbm9kZTpwZXJmX2hvb2tzJztcblxuY2xhc3MgRXhwZXJpbWVudGFsR2FyYmFnZUNvbGxlY3Rpb25QZXJmb3JtYW5jZU1ldHJpY3NNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXJcbiAgaW1wbGVtZW50cyBNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXJcbntcbiAgb25SZXF1ZXN0Qm9keShyZXF1ZXN0OiBNaWRkbGV3YXJlTWVzc2FnZSk6IFByb21pc2U8TWlkZGxld2FyZU1lc3NhZ2U+IHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlcXVlc3QpO1xuICB9XG5cbiAgb25SZXF1ZXN0TWV0YWRhdGEobWV0YWRhdGE6IE1pZGRsZXdhcmVNZXRhZGF0YSk6IFByb21pc2U8TWlkZGxld2FyZU1ldGFkYXRhPiB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShtZXRhZGF0YSk7XG4gIH1cblxuICBvblJlc3BvbnNlTWV0YWRhdGEoXG4gICAgbWV0YWRhdGE6IE1pZGRsZXdhcmVNZXRhZGF0YVxuICApOiBQcm9taXNlPE1pZGRsZXdhcmVNZXRhZGF0YT4ge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobWV0YWRhdGEpO1xuICB9XG5cbiAgb25SZXNwb25zZUJvZHkoXG4gICAgcmVzcG9uc2U6IE1pZGRsZXdhcmVNZXNzYWdlIHwgbnVsbFxuICApOiBQcm9taXNlPE1pZGRsZXdhcmVNZXNzYWdlIHwgbnVsbD4ge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVzcG9uc2UpO1xuICB9XG5cbiAgb25SZXNwb25zZVN0YXR1cyhzdGF0dXM6IE1pZGRsZXdhcmVTdGF0dXMpOiBQcm9taXNlPE1pZGRsZXdhcmVTdGF0dXM+IHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHN0YXR1cyk7XG4gIH1cbn1cblxuLyoqXG4gKiBUaGlzIG1pZGRsZXdhcmUgZW5hYmxlcyBnYXJiYWdlIGNvbGxlY3Rpb24gbWV0cmljcy4gSXQgc3Vic2NyaWJlcnMgdG8gYSBHQyBwZXJmb3JtYW5jZSBvYnNlcnZlciBwcm92aWRlZCBieVxuICogbm9kZSdzIGJ1aWx0LWluIHBlcmZvcm1hbmNlIGhvb2tzLCBhbmQgbG9ncyBrZXkgR0MgZXZlbnRzLiBBIHNhbXBsZSBsb2cgbG9va3MgbGlrZTpcbiAqXG4gKiB7XG4gKiAgICAgXCJlbnRyeVR5cGVcIjogXCJnY1wiLFxuICogICAgIFwic3RhcnRUaW1lXCI6IDgyMjEuODc5OTE3LFxuICogICAgIFwiZHVyYXRpb25cIjogMi44OTA1MDAwMDE2MDkzMjU0LCAgPC0tIG1vc3QgaW1wb3J0YW50IGZpZWxkIHRvIGFuYWx5emUgZm9yIHN0b3AgdGhlIHdvcmxkIGV2ZW50cywgbWVhc3VyZWQgaW4gbWlsbGlzZWNvbmRzLlxuICogICAgIFwiZGV0YWlsXCI6IHtcbiAqICAgICAgICAgXCJraW5kXCI6IDQsICA8LS0gY29uc3RhbnQgZm9yIE5PREVfUEVSRk9STUFOQ0VfR0NfTUFKT1IuIGBNQUpPUmAgZXZlbnRzIG1pZ2h0IHBvaW50IHRvIEdDIGV2ZW50cyBjYXVzaW5nIGxvbmcgZGVsYXlzLlxuICogICAgICAgICBcImZsYWdzXCI6IDMyXG4gKiAgICAgfSxcbiAqICAgICBcInRpbWVzdGFtcFwiOiAxNzEwMzAwMzA5MzY4XG4gKiB9XG4gKi9cbmV4cG9ydCBjbGFzcyBFeHBlcmltZW50YWxHYXJiYWdlQ29sbGVjdGlvblBlcmZvcm1hbmNlTWV0cmljc01pZGRsZXdhcmVcbiAgaW1wbGVtZW50cyBNaWRkbGV3YXJlXG57XG4gIHByaXZhdGUgcmVhZG9ubHkgbG9nZ2VyOiBNb21lbnRvTG9nZ2VyO1xuICBwcml2YXRlIHJlYWRvbmx5IGdjT2JzZXJ2ZXI6IFBlcmZvcm1hbmNlT2JzZXJ2ZXI7XG5cbiAgY29uc3RydWN0b3IobG9nZ2VyRmFjdG9yeTogTW9tZW50b0xvZ2dlckZhY3RvcnkpIHtcbiAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlckZhY3RvcnkuZ2V0TG9nZ2VyKHRoaXMpO1xuXG4gICAgdGhpcy5nY09ic2VydmVyID0gbmV3IFBlcmZvcm1hbmNlT2JzZXJ2ZXIoaXRlbXMgPT4ge1xuICAgICAgaXRlbXNcbiAgICAgICAgLmdldEVudHJpZXMoKVxuICAgICAgICAuZmlsdGVyKFxuICAgICAgICAgIC8vIE5PREVfUEVSRk9STUFOQ0VfR0NfTUFKT1IgaW5kaWNhdGVzIGEgbWFqb3IgR0MgZXZlbnQgc3VjaCBhcyBTVFcgKHN0b3AtdGhlLXdvcmxkKSBwYXVzZXNcbiAgICAgICAgICAvLyBhbmQgb3RoZXIgbG9uZyBkZWxheXMuIFRoaXMgZmlsdGVyIGlzIHRvIGNvbnRyb2wgdGhlIHZvbHVtZSBvZiBHQyBsb2dzIGlmIHdlIHdlcmUgdG8gZW5hYmxlXG4gICAgICAgICAgLy8gdGhpcyBvbiBhIGN1c3RvbWVyJ3MgY2xpZW50LlxuICAgICAgICAgIC8vIE5PREVfUEVSRk9STUFOQ0VfR0NfSU5DUkVNRU5UQUwgcHJpbnRzIGluY3JlbWVudGFsIEdDIHN0cmVhbSBvZiBsb2dzIHdoZW4gdGhlIHByb2Nlc3MgaXMgYXBwcm9hY2hpbmdcbiAgICAgICAgICAvLyBtYXggbWVtb3J5LlxuICAgICAgICAgIGl0ZW0gPT4ge1xuICAgICAgICAgICAgaWYgKGl0ZW0uZW50cnlUeXBlICE9PSAnZ2MnKSB7XG4gICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGdjUGVyZkRldGFpbCA9IGl0ZW0uZGV0YWlsIGFzIE5vZGVHQ1BlcmZvcm1hbmNlRGV0YWlsO1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgZ2NQZXJmRGV0YWlsLmtpbmQgPT09IGNvbnN0YW50cy5OT0RFX1BFUkZPUk1BTkNFX0dDX01BSk9SIHx8XG4gICAgICAgICAgICAgIGdjUGVyZkRldGFpbC5raW5kID09PSBjb25zdGFudHMuTk9ERV9QRVJGT1JNQU5DRV9HQ19JTkNSRU1FTlRBTFxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgIClcbiAgICAgICAgLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgY29uc3QgZ2NQZXJmRGV0YWlsID0gaXRlbS5kZXRhaWwgYXMgTm9kZUdDUGVyZm9ybWFuY2VEZXRhaWw7XG4gICAgICAgICAgY29uc3QgZ2NFdmVudE9iamVjdCA9IHtcbiAgICAgICAgICAgIGVudHJ5VHlwZTogaXRlbS5lbnRyeVR5cGUsXG4gICAgICAgICAgICBzdGFydFRpbWU6IGl0ZW0uc3RhcnRUaW1lLFxuICAgICAgICAgICAgZHVyYXRpb246IGl0ZW0uZHVyYXRpb24sXG4gICAgICAgICAgICBraW5kOiBnY1BlcmZEZXRhaWwua2luZCxcbiAgICAgICAgICAgIGZsYWdzOiBnY1BlcmZEZXRhaWwuZmxhZ3MsXG4gICAgICAgICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksXG4gICAgICAgICAgfTtcbiAgICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKEpTT04uc3RyaW5naWZ5KGdjRXZlbnRPYmplY3QpKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgdGhpcy5nY09ic2VydmVyLm9ic2VydmUoe2VudHJ5VHlwZXM6IFsnZ2MnXX0pO1xuICB9XG5cbiAgb25OZXdSZXF1ZXN0KCk6IE1pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlciB7XG4gICAgcmV0dXJuIG5ldyBFeHBlcmltZW50YWxHYXJiYWdlQ29sbGVjdGlvblBlcmZvcm1hbmNlTWV0cmljc01pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlcigpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5nY09ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgfVxufVxuIl19

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/example-async-middleware.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ExampleAsyncMiddleware = void 0;
class ExampleAsyncMiddlewareRequestHandler {
    constructor(logger){
        this.logger = logger;
    }
    async onRequestMetadata(metadata) {
        this.logger.info('ExampleAsyncMiddleware.onRequestMetadata enter');
        await delay(500);
        this.logger.info('ExampleAsyncMiddleware.onRequestMetadata exit');
        return metadata;
    }
    async onRequestBody(request) {
        this.logger.info('ExampleAsyncMiddleware.onRequestBody enter');
        await delay(500);
        this.logger.info('ExampleAsyncMiddleware.onRequestBody exit');
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return request;
    }
    async onResponseMetadata(metadata) {
        this.logger.info('ExampleAsyncMiddleware.onResponseMetadata enter');
        await delay(500);
        this.logger.info('ExampleAsyncMiddleware.onResponseMetadata exit');
        return metadata;
    }
    async onResponseBody(response) {
        this.logger.info('ExampleAsyncMiddleware.onResponseBody enter');
        await delay(500);
        this.logger.info('ExampleAsyncMiddleware.onResponseBody exit');
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return response;
    }
    async onResponseStatus(status) {
        this.logger.info('ExampleAsyncMiddleware.onResponseStatus enter');
        await delay(500);
        this.logger.info('ExampleAsyncMiddleware.onResponseStatus exit');
        return status;
    }
}
/**
 * This class provides an example of how users can implement a Middleware that
 * requires async calls.
 */ class ExampleAsyncMiddleware {
    constructor(loggerFactory){
        this.logger = loggerFactory.getLogger(this);
    }
    onNewRequest() {
        this.logger.info('ExampleAsyncMiddleware handling new request');
        return new ExampleAsyncMiddlewareRequestHandler(this.logger);
    }
}
exports.ExampleAsyncMiddleware = ExampleAsyncMiddleware;
function delay(ms) {
    return new Promise((resolve)=>setTimeout(resolve, ms));
} //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhhbXBsZS1hc3luYy1taWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbmZpZy9taWRkbGV3YXJlL2V4YW1wbGUtYXN5bmMtbWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFVQSxNQUFNLG9DQUFvQztJQUd4QyxZQUFZLE1BQXFCO1FBQy9CLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxLQUFLLENBQUMsaUJBQWlCLENBQ3JCLFFBQTRCO1FBRTVCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGdEQUFnRCxDQUFDLENBQUM7UUFDbkUsTUFBTSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsK0NBQStDLENBQUMsQ0FBQztRQUNsRSxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0lBRUQsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUEwQjtRQUM1QyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyw0Q0FBNEMsQ0FBQyxDQUFDO1FBQy9ELE1BQU0sS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLDJDQUEyQyxDQUFDLENBQUM7UUFDOUQsK0RBQStEO1FBQy9ELE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxLQUFLLENBQUMsa0JBQWtCLENBQ3RCLFFBQTRCO1FBRTVCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGlEQUFpRCxDQUFDLENBQUM7UUFDcEUsTUFBTSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0RBQWdELENBQUMsQ0FBQztRQUNuRSxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0lBRUQsS0FBSyxDQUFDLGNBQWMsQ0FDbEIsUUFBa0M7UUFFbEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsNkNBQTZDLENBQUMsQ0FBQztRQUNoRSxNQUFNLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNqQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyw0Q0FBNEMsQ0FBQyxDQUFDO1FBQy9ELCtEQUErRDtRQUMvRCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0lBRUQsS0FBSyxDQUFDLGdCQUFnQixDQUFDLE1BQXdCO1FBQzdDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLCtDQUErQyxDQUFDLENBQUM7UUFDbEUsTUFBTSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsOENBQThDLENBQUMsQ0FBQztRQUNqRSxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0NBQ0Y7QUFFRDs7O0dBR0c7QUFDSCxNQUFhLHNCQUFzQjtJQUdqQyxZQUFZLGFBQW1DO1FBQzdDLElBQUksQ0FBQyxNQUFNLEdBQUcsYUFBYSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBQ0QsWUFBWTtRQUNWLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLDZDQUE2QyxDQUFDLENBQUM7UUFDaEUsT0FBTyxJQUFJLG9DQUFvQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMvRCxDQUFDO0NBQ0Y7QUFWRCx3REFVQztBQUVELFNBQVMsS0FBSyxDQUFDLEVBQVU7SUFDdkIsT0FBTyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUN6RCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgTWlkZGxld2FyZSxcbiAgTWlkZGxld2FyZU1lc3NhZ2UsXG4gIE1pZGRsZXdhcmVNZXRhZGF0YSxcbiAgTWlkZGxld2FyZVJlcXVlc3RIYW5kbGVyLFxuICBNaWRkbGV3YXJlU3RhdHVzLFxufSBmcm9tICcuL21pZGRsZXdhcmUnO1xuXG5pbXBvcnQge01vbWVudG9Mb2dnZXIsIE1vbWVudG9Mb2dnZXJGYWN0b3J5fSBmcm9tICcuLi8uLic7XG5cbmNsYXNzIEV4YW1wbGVBc3luY01pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlciBpbXBsZW1lbnRzIE1pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlciB7XG4gIHByaXZhdGUgcmVhZG9ubHkgbG9nZ2VyOiBNb21lbnRvTG9nZ2VyO1xuXG4gIGNvbnN0cnVjdG9yKGxvZ2dlcjogTW9tZW50b0xvZ2dlcikge1xuICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xuICB9XG5cbiAgYXN5bmMgb25SZXF1ZXN0TWV0YWRhdGEoXG4gICAgbWV0YWRhdGE6IE1pZGRsZXdhcmVNZXRhZGF0YVxuICApOiBQcm9taXNlPE1pZGRsZXdhcmVNZXRhZGF0YT4ge1xuICAgIHRoaXMubG9nZ2VyLmluZm8oJ0V4YW1wbGVBc3luY01pZGRsZXdhcmUub25SZXF1ZXN0TWV0YWRhdGEgZW50ZXInKTtcbiAgICBhd2FpdCBkZWxheSg1MDApO1xuICAgIHRoaXMubG9nZ2VyLmluZm8oJ0V4YW1wbGVBc3luY01pZGRsZXdhcmUub25SZXF1ZXN0TWV0YWRhdGEgZXhpdCcpO1xuICAgIHJldHVybiBtZXRhZGF0YTtcbiAgfVxuXG4gIGFzeW5jIG9uUmVxdWVzdEJvZHkocmVxdWVzdDogTWlkZGxld2FyZU1lc3NhZ2UpOiBQcm9taXNlPE1pZGRsZXdhcmVNZXNzYWdlPiB7XG4gICAgdGhpcy5sb2dnZXIuaW5mbygnRXhhbXBsZUFzeW5jTWlkZGxld2FyZS5vblJlcXVlc3RCb2R5IGVudGVyJyk7XG4gICAgYXdhaXQgZGVsYXkoNTAwKTtcbiAgICB0aGlzLmxvZ2dlci5pbmZvKCdFeGFtcGxlQXN5bmNNaWRkbGV3YXJlLm9uUmVxdWVzdEJvZHkgZXhpdCcpO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLXJldHVyblxuICAgIHJldHVybiByZXF1ZXN0O1xuICB9XG5cbiAgYXN5bmMgb25SZXNwb25zZU1ldGFkYXRhKFxuICAgIG1ldGFkYXRhOiBNaWRkbGV3YXJlTWV0YWRhdGFcbiAgKTogUHJvbWlzZTxNaWRkbGV3YXJlTWV0YWRhdGE+IHtcbiAgICB0aGlzLmxvZ2dlci5pbmZvKCdFeGFtcGxlQXN5bmNNaWRkbGV3YXJlLm9uUmVzcG9uc2VNZXRhZGF0YSBlbnRlcicpO1xuICAgIGF3YWl0IGRlbGF5KDUwMCk7XG4gICAgdGhpcy5sb2dnZXIuaW5mbygnRXhhbXBsZUFzeW5jTWlkZGxld2FyZS5vblJlc3BvbnNlTWV0YWRhdGEgZXhpdCcpO1xuICAgIHJldHVybiBtZXRhZGF0YTtcbiAgfVxuXG4gIGFzeW5jIG9uUmVzcG9uc2VCb2R5KFxuICAgIHJlc3BvbnNlOiBNaWRkbGV3YXJlTWVzc2FnZSB8IG51bGxcbiAgKTogUHJvbWlzZTxNaWRkbGV3YXJlTWVzc2FnZSB8IG51bGw+IHtcbiAgICB0aGlzLmxvZ2dlci5pbmZvKCdFeGFtcGxlQXN5bmNNaWRkbGV3YXJlLm9uUmVzcG9uc2VCb2R5IGVudGVyJyk7XG4gICAgYXdhaXQgZGVsYXkoNTAwKTtcbiAgICB0aGlzLmxvZ2dlci5pbmZvKCdFeGFtcGxlQXN5bmNNaWRkbGV3YXJlLm9uUmVzcG9uc2VCb2R5IGV4aXQnKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1yZXR1cm5cbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH1cblxuICBhc3luYyBvblJlc3BvbnNlU3RhdHVzKHN0YXR1czogTWlkZGxld2FyZVN0YXR1cyk6IFByb21pc2U8TWlkZGxld2FyZVN0YXR1cz4ge1xuICAgIHRoaXMubG9nZ2VyLmluZm8oJ0V4YW1wbGVBc3luY01pZGRsZXdhcmUub25SZXNwb25zZVN0YXR1cyBlbnRlcicpO1xuICAgIGF3YWl0IGRlbGF5KDUwMCk7XG4gICAgdGhpcy5sb2dnZXIuaW5mbygnRXhhbXBsZUFzeW5jTWlkZGxld2FyZS5vblJlc3BvbnNlU3RhdHVzIGV4aXQnKTtcbiAgICByZXR1cm4gc3RhdHVzO1xuICB9XG59XG5cbi8qKlxuICogVGhpcyBjbGFzcyBwcm92aWRlcyBhbiBleGFtcGxlIG9mIGhvdyB1c2VycyBjYW4gaW1wbGVtZW50IGEgTWlkZGxld2FyZSB0aGF0XG4gKiByZXF1aXJlcyBhc3luYyBjYWxscy5cbiAqL1xuZXhwb3J0IGNsYXNzIEV4YW1wbGVBc3luY01pZGRsZXdhcmUgaW1wbGVtZW50cyBNaWRkbGV3YXJlIHtcbiAgcHJpdmF0ZSByZWFkb25seSBsb2dnZXI6IE1vbWVudG9Mb2dnZXI7XG5cbiAgY29uc3RydWN0b3IobG9nZ2VyRmFjdG9yeTogTW9tZW50b0xvZ2dlckZhY3RvcnkpIHtcbiAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlckZhY3RvcnkuZ2V0TG9nZ2VyKHRoaXMpO1xuICB9XG4gIG9uTmV3UmVxdWVzdCgpOiBNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXIge1xuICAgIHRoaXMubG9nZ2VyLmluZm8oJ0V4YW1wbGVBc3luY01pZGRsZXdhcmUgaGFuZGxpbmcgbmV3IHJlcXVlc3QnKTtcbiAgICByZXR1cm4gbmV3IEV4YW1wbGVBc3luY01pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlcih0aGlzLmxvZ2dlcik7XG4gIH1cbn1cblxuZnVuY3Rpb24gZGVsYXkobXM6IG51bWJlcikge1xuICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKSk7XG59XG4iXX0=

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/experimental-middleware-factory.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MiddlewareFactory = void 0;
const experimental_event_loop_perf_middleware_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/experimental-event-loop-perf-middleware.js [app-route] (ecmascript)");
const experimental_metrics_logging_middleware_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/experimental-metrics-logging-middleware.js [app-route] (ecmascript)");
const experimental_active_request_count_middleware_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/experimental-active-request-count-middleware.js [app-route] (ecmascript)");
const experimental_metrics_csv_middleware_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/experimental-metrics-csv-middleware.js [app-route] (ecmascript)");
const experimental_garbage_collection_middleware_1 = __turbopack_require__("[project]/node_modules/@gomomento/sdk/dist/src/config/middleware/experimental-garbage-collection-middleware.js [app-route] (ecmascript)");
// Static class encapsulating the factory functionality
class MiddlewareFactory {
    static createMetricsMiddlewares(loggerFactory, options) {
        const middlewares = [];
        if (options.eventLoopMetricsLog === true) {
            middlewares.push(new experimental_event_loop_perf_middleware_1.ExperimentalEventLoopPerformanceMetricsMiddleware(loggerFactory));
        }
        if (options.perRequestMetricsCSVPath !== undefined) {
            middlewares.push(new experimental_metrics_csv_middleware_1.ExperimentalMetricsCsvMiddleware(options.perRequestMetricsCSVPath, loggerFactory));
        } else if (options.perRequestMetricsLog === true) {
            middlewares.push(new experimental_metrics_logging_middleware_1.ExperimentalMetricsLoggingMiddleware(loggerFactory));
        }
        if (options.activeRequestCountMetricsLog === true) {
            middlewares.push(new experimental_active_request_count_middleware_1.ExperimentalActiveRequestCountLoggingMiddleware(loggerFactory));
        }
        if (options.garbageCollectionMetricsLog === true) {
            middlewares.push(new experimental_garbage_collection_middleware_1.ExperimentalGarbageCollectionPerformanceMetricsMiddleware(loggerFactory));
        }
        return middlewares;
    }
}
exports.MiddlewareFactory = MiddlewareFactory; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwZXJpbWVudGFsLW1pZGRsZXdhcmUtZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb25maWcvbWlkZGxld2FyZS9leHBlcmltZW50YWwtbWlkZGxld2FyZS1mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLHVHQUE0RztBQUM1Ryx1R0FBK0Y7QUFDL0YsaUhBQStHO0FBRS9HLCtGQUF1RjtBQUN2Riw2R0FBdUg7QUE2QnZILHVEQUF1RDtBQUN2RCxNQUFhLGlCQUFpQjtJQUNyQixNQUFNLENBQUMsd0JBQXdCLENBQ3BDLGFBQW1DLEVBQ25DLE9BQTZDO1FBRTdDLE1BQU0sV0FBVyxHQUFpQixFQUFFLENBQUM7UUFFckMsSUFBSSxPQUFPLENBQUMsbUJBQW1CLEtBQUssSUFBSSxFQUFFO1lBQ3hDLFdBQVcsQ0FBQyxJQUFJLENBQ2QsSUFBSSwyRkFBaUQsQ0FBQyxhQUFhLENBQUMsQ0FDckUsQ0FBQztTQUNIO1FBQ0QsSUFBSSxPQUFPLENBQUMsd0JBQXdCLEtBQUssU0FBUyxFQUFFO1lBQ2xELFdBQVcsQ0FBQyxJQUFJLENBQ2QsSUFBSSxzRUFBZ0MsQ0FDbEMsT0FBTyxDQUFDLHdCQUF3QixFQUNoQyxhQUFhLENBQ2QsQ0FDRixDQUFDO1NBQ0g7YUFBTSxJQUFJLE9BQU8sQ0FBQyxvQkFBb0IsS0FBSyxJQUFJLEVBQUU7WUFDaEQsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLDhFQUFvQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7U0FDM0U7UUFFRCxJQUFJLE9BQU8sQ0FBQyw0QkFBNEIsS0FBSyxJQUFJLEVBQUU7WUFDakQsV0FBVyxDQUFDLElBQUksQ0FDZCxJQUFJLDhGQUErQyxDQUFDLGFBQWEsQ0FBQyxDQUNuRSxDQUFDO1NBQ0g7UUFFRCxJQUFJLE9BQU8sQ0FBQywyQkFBMkIsS0FBSyxJQUFJLEVBQUU7WUFDaEQsV0FBVyxDQUFDLElBQUksQ0FDZCxJQUFJLHNHQUF5RCxDQUMzRCxhQUFhLENBQ2QsQ0FDRixDQUFDO1NBQ0g7UUFFRCxPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDO0NBQ0Y7QUF2Q0QsOENBdUNDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIG9wdGlvbnMgaW50ZXJmYWNlIGZvciBjbGFyaXR5IGFuZCB0eXBlIHNhZmV0eVxuaW1wb3J0IHtNb21lbnRvTG9nZ2VyRmFjdG9yeX0gZnJvbSAnQGdvbW9tZW50by9zZGstY29yZSc7XG5pbXBvcnQge0V4cGVyaW1lbnRhbEV2ZW50TG9vcFBlcmZvcm1hbmNlTWV0cmljc01pZGRsZXdhcmV9IGZyb20gJy4vZXhwZXJpbWVudGFsLWV2ZW50LWxvb3AtcGVyZi1taWRkbGV3YXJlJztcbmltcG9ydCB7RXhwZXJpbWVudGFsTWV0cmljc0xvZ2dpbmdNaWRkbGV3YXJlfSBmcm9tICcuL2V4cGVyaW1lbnRhbC1tZXRyaWNzLWxvZ2dpbmctbWlkZGxld2FyZSc7XG5pbXBvcnQge0V4cGVyaW1lbnRhbEFjdGl2ZVJlcXVlc3RDb3VudExvZ2dpbmdNaWRkbGV3YXJlfSBmcm9tICcuL2V4cGVyaW1lbnRhbC1hY3RpdmUtcmVxdWVzdC1jb3VudC1taWRkbGV3YXJlJztcbmltcG9ydCB7TWlkZGxld2FyZX0gZnJvbSAnLi9taWRkbGV3YXJlJztcbmltcG9ydCB7RXhwZXJpbWVudGFsTWV0cmljc0Nzdk1pZGRsZXdhcmV9IGZyb20gJy4vZXhwZXJpbWVudGFsLW1ldHJpY3MtY3N2LW1pZGRsZXdhcmUnO1xuaW1wb3J0IHtFeHBlcmltZW50YWxHYXJiYWdlQ29sbGVjdGlvblBlcmZvcm1hbmNlTWV0cmljc01pZGRsZXdhcmV9IGZyb20gJy4vZXhwZXJpbWVudGFsLWdhcmJhZ2UtY29sbGVjdGlvbi1taWRkbGV3YXJlJztcblxuaW50ZXJmYWNlIEV4cGVyaW1lbnRhbE1ldHJpY3NNaWRkbGV3YXJlT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBTZXR0aW5nIHRoaXMgdG8gdHJ1ZSB3aWxsIGVtaXQgYSBwZXJpb2RpYyBKU09OIGxvZyBmb3IgdGhlIGV2ZW50IGxvb3AgcHJvZmlsZSBvZiB0aGUgbm9kZUpTIHByb2Nlc3MuXG4gICAqL1xuICBldmVudExvb3BNZXRyaWNzTG9nPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFNldHRpbmcgdGhpcyB0byB0cnVlIHdpbGwgZW1pdCBhIEpTT04gbG9nIGR1cmluZyBtYWpvciBHQyBldmVudHMsIGFzIG9ic2VydmVkIGJ5IG5vZGUncyBwZXJmX2hvb2tzLlxuICAgKi9cbiAgZ2FyYmFnZUNvbGxlY3Rpb25NZXRyaWNzTG9nPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFNldHRpbmcgdGhpcyB0byB0cnVlIHdpbGwgZW1pdCBhIEpTT04gbG9nIGZvciBlYWNoIE1vbWVudG8gcmVxdWVzdCwgdGhhdCBpbmNsdWRlcyB0aGUgY2xpZW50LXNpZGUgbGF0ZW5jeVxuICAgKiBhbW9uZyBvdGhlciByZXF1ZXN0IHByb2ZpbGUgc3RhdGlzdGljcy5cbiAgICovXG4gIHBlclJlcXVlc3RNZXRyaWNzTG9nPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFNldHRpbmcgdGhpcyB0byB0cnVlIHdpbGwgZW1pdCBhIHBlcmlvZGljIEpTT04gbG9nIGZvciBhY3RpdmUgTW9tZW50byByZXF1ZXN0IGNvdW50IG9uIHRoZSBub2RlSlMgcHJvY2Vzc1xuICAgKiBhcyBvYnNlcnZlZCB3aGVuIHRoZSBwZXJpb2RpYyB0YXNrIHdha2VzIHVwLiBUaGlzIGNhbiBiZSBoYW5keSB3aXRoIGV2ZW50TG9vcE1ldHJpY3NMb2cgdG8gb2JzZXJ2ZSB0aGUgZXZlbnQgbG9vcFxuICAgKiBkZWxheSBhZ2FpbnN0IHRoZSBtYXhpbXVtIG51bWJlciBvZiBjb25jdXJyZW50IGNvbm5lY3Rpb25zIHRoZSBhcHBsaWNhdGlvbiBpcyBvYnNlcnZpbmcuXG4gICAqL1xuICBhY3RpdmVSZXF1ZXN0Q291bnRNZXRyaWNzTG9nPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFNldHRpbmcgdGhpcyB0byB0cnVlIHdpbGwgd3JpdGUgYSBDU1YgcmVjcmQgZm9yIGVhY2ggTW9tZW50byByZXF1ZXN0LCB0aGF0IGluY2x1ZGVzIHRoZSBjbGllbnQtc2lkZSBsYXRlbmN5XG4gICAqIGFtb25nIG90aGVyIHJlcXVlc3QgcHJvZmlsZSBzdGF0aXN0aWNzLiBUaGUgcGF0aCBpcyB0aGUgZmlsZSBwYXRoIG9uIHlvdXIgZGlzayB3aGVyZSB0aGUgQ1NWIGZpbGUgaXMgc3RvcmVkLlxuICAgKi9cbiAgcGVyUmVxdWVzdE1ldHJpY3NDU1ZQYXRoPzogc3RyaW5nO1xufVxuXG4vLyBTdGF0aWMgY2xhc3MgZW5jYXBzdWxhdGluZyB0aGUgZmFjdG9yeSBmdW5jdGlvbmFsaXR5XG5leHBvcnQgY2xhc3MgTWlkZGxld2FyZUZhY3Rvcnkge1xuICBwdWJsaWMgc3RhdGljIGNyZWF0ZU1ldHJpY3NNaWRkbGV3YXJlcyhcbiAgICBsb2dnZXJGYWN0b3J5OiBNb21lbnRvTG9nZ2VyRmFjdG9yeSxcbiAgICBvcHRpb25zOiBFeHBlcmltZW50YWxNZXRyaWNzTWlkZGxld2FyZU9wdGlvbnNcbiAgKTogTWlkZGxld2FyZVtdIHtcbiAgICBjb25zdCBtaWRkbGV3YXJlczogTWlkZGxld2FyZVtdID0gW107XG5cbiAgICBpZiAob3B0aW9ucy5ldmVudExvb3BNZXRyaWNzTG9nID09PSB0cnVlKSB7XG4gICAgICBtaWRkbGV3YXJlcy5wdXNoKFxuICAgICAgICBuZXcgRXhwZXJpbWVudGFsRXZlbnRMb29wUGVyZm9ybWFuY2VNZXRyaWNzTWlkZGxld2FyZShsb2dnZXJGYWN0b3J5KVxuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMucGVyUmVxdWVzdE1ldHJpY3NDU1ZQYXRoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIG1pZGRsZXdhcmVzLnB1c2goXG4gICAgICAgIG5ldyBFeHBlcmltZW50YWxNZXRyaWNzQ3N2TWlkZGxld2FyZShcbiAgICAgICAgICBvcHRpb25zLnBlclJlcXVlc3RNZXRyaWNzQ1NWUGF0aCxcbiAgICAgICAgICBsb2dnZXJGYWN0b3J5XG4gICAgICAgIClcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChvcHRpb25zLnBlclJlcXVlc3RNZXRyaWNzTG9nID09PSB0cnVlKSB7XG4gICAgICBtaWRkbGV3YXJlcy5wdXNoKG5ldyBFeHBlcmltZW50YWxNZXRyaWNzTG9nZ2luZ01pZGRsZXdhcmUobG9nZ2VyRmFjdG9yeSkpO1xuICAgIH1cblxuICAgIGlmIChvcHRpb25zLmFjdGl2ZVJlcXVlc3RDb3VudE1ldHJpY3NMb2cgPT09IHRydWUpIHtcbiAgICAgIG1pZGRsZXdhcmVzLnB1c2goXG4gICAgICAgIG5ldyBFeHBlcmltZW50YWxBY3RpdmVSZXF1ZXN0Q291bnRMb2dnaW5nTWlkZGxld2FyZShsb2dnZXJGYWN0b3J5KVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5nYXJiYWdlQ29sbGVjdGlvbk1ldHJpY3NMb2cgPT09IHRydWUpIHtcbiAgICAgIG1pZGRsZXdhcmVzLnB1c2goXG4gICAgICAgIG5ldyBFeHBlcmltZW50YWxHYXJiYWdlQ29sbGVjdGlvblBlcmZvcm1hbmNlTWV0cmljc01pZGRsZXdhcmUoXG4gICAgICAgICAgbG9nZ2VyRmFjdG9yeVxuICAgICAgICApXG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiBtaWRkbGV3YXJlcztcbiAgfVxufVxuIl19

}.call(this) }),
"[project]/node_modules/@gomomento/sdk/dist/src/config/compression/compression.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AutomaticDecompression = void 0;
var AutomaticDecompression;
(function(AutomaticDecompression) {
    AutomaticDecompression["Enabled"] = "Enabled";
    AutomaticDecompression["Disabled"] = "Disabled";
})(AutomaticDecompression = exports.AutomaticDecompression || (exports.AutomaticDecompression = {})); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHJlc3Npb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29uZmlnL2NvbXByZXNzaW9uL2NvbXByZXNzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQWtDQSxJQUFZLHNCQUdYO0FBSEQsV0FBWSxzQkFBc0I7SUFDaEMsNkNBQW1CLENBQUE7SUFDbkIsK0NBQXFCLENBQUE7QUFDdkIsQ0FBQyxFQUhXLHNCQUFzQixHQUF0Qiw4QkFBc0IsS0FBdEIsOEJBQXNCLFFBR2pDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wcmVzc2lvbkxldmVsfSBmcm9tICdAZ29tb21lbnRvL3Nkay1jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBJQ29tcHJlc3Npb24ge1xuICBjb21wcmVzcyhcbiAgICBjb21wcmVzc2lvbkxldmVsOiBDb21wcmVzc2lvbkxldmVsLFxuICAgIHZhbHVlOiBVaW50OEFycmF5XG4gICk6IFByb21pc2U8VWludDhBcnJheT47XG5cbiAgZGVjb21wcmVzc0lmQ29tcHJlc3NlZCh2YWx1ZTogVWludDhBcnJheSk6IFByb21pc2U8VWludDhBcnJheT47XG59XG5cbi8qKlxuICogQ29uZmlndXJhdGlvbiBvcHRpb25zIGZvciBjb21wcmVzc2lvbiBjYXBhYmlsaXRpZXMuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ29tcHJlc3Npb25TdHJhdGVneSB7XG4gIC8qKlxuICAgKiBUaGlzIHByb3BlcnR5IGlzIHVzZWQgdG8gcmVnaXN0ZXIgdGhlIGNvbXByZXNzaW9uIGZhY3RvcnkgZnJvbSB0aGUgYWRkLW9uIGxpYnJhcnkuIFRvIHVzZSB0aGlzIGZlYXR1cmUsXG4gICAqIHlvdSB3aWxsIG5lZWQgdG8gaW5zdGFsbCB0aGUgY29tcHJlc3Npb24gZXh0ZW5zaW9ucyBsaWJyYXJ5IGBAZ29tb21lbnRvL3Nkay1ub2RlanMtY29tcHJlc3Npb25gLCBhbmQgdGhlblxuICAgKiBpbXBvcnQgYW5kIGNhbGwgYENvbXByZXNzb3JGYWN0b3J5LmRlZmF1bHQoKWAuXG4gICAqL1xuICBjb21wcmVzc29yRmFjdG9yeTogSUNvbXByZXNzaW9uO1xuXG4gIC8qKlxuICAgKiBUaGlzIHByb3BlcnR5IGlzIHVzZWQgdG8gc2V0IHRoZSBkZWZhdWx0IGNvbXByZXNzaW9uIGxldmVsIGZvciB0aGUgY2xpZW50LiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBgQ29tcHJlc3Npb25MZXZlbC5CYWxhbmNlZGAuXG4gICAqL1xuICBjb21wcmVzc2lvbkxldmVsPzogQ29tcHJlc3Npb25MZXZlbDtcblxuICAvKipcbiAgICogVGhpcyBwcm9wZXJ0eSByZXByZXNlbnRzIHdoZXRoZXIgdGhlIFNESyB3aWxsIGRlY29tcHJlc3MgZGF0YSByZXR1cm5lZCBieSBjYWxscyB0aGF0IHN1cHBvcnQgY29tcHJlc3Npb24uXG4gICAqIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGBBdXRvbWF0aWNEZWNvbXByZXNzaW9uLkVuYWJsZWRgLlxuICAgKi9cbiAgYXV0b21hdGljRGVjb21wcmVzc2lvbj86IEF1dG9tYXRpY0RlY29tcHJlc3Npb247XG59XG5cbmV4cG9ydCBlbnVtIEF1dG9tYXRpY0RlY29tcHJlc3Npb24ge1xuICBFbmFibGVkID0gJ0VuYWJsZWQnLFxuICBEaXNhYmxlZCA9ICdEaXNhYmxlZCcsXG59XG4iXX0=

}.call(this) }),

};

//# sourceMappingURL=node_modules_%40gomomento_sdk_dist_src_config_dd8606._.js.map