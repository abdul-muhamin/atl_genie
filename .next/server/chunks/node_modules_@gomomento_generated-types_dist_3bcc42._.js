module.exports = {

"[project]/node_modules/@gomomento/generated-types/dist/common.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.common = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: common.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */ const pb_1 = __importStar(__turbopack_require__("[project]/node_modules/google-protobuf/google-protobuf.js [app-route] (ecmascript)"));
var common;
(function(common) {
    var _Present_one_of_decls, _PresentAndNotEqual_one_of_decls, _Absent_one_of_decls, _Equal_one_of_decls, _AbsentOrEqual_one_of_decls, _NotEqual_one_of_decls, __Unbounded_one_of_decls, __Empty_one_of_decls;
    class Present extends pb_1.Message {
        constructor(data){
            super();
            _Present_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Present_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new Present({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Present();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return Present.deserialize(bytes);
        }
    }
    _Present_one_of_decls = new WeakMap();
    common.Present = Present;
    class PresentAndNotEqual extends pb_1.Message {
        constructor(data){
            super();
            _PresentAndNotEqual_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _PresentAndNotEqual_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("value_to_check" in data && data.value_to_check != undefined) {
                    this.value_to_check = data.value_to_check;
                }
            }
        }
        get value_to_check() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set value_to_check(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new PresentAndNotEqual({});
            if (data.value_to_check != null) {
                message.value_to_check = data.value_to_check;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.value_to_check != null) {
                data.value_to_check = this.value_to_check;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.value_to_check.length) writer.writeBytes(1, this.value_to_check);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PresentAndNotEqual();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.value_to_check = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return PresentAndNotEqual.deserialize(bytes);
        }
    }
    _PresentAndNotEqual_one_of_decls = new WeakMap();
    common.PresentAndNotEqual = PresentAndNotEqual;
    class Absent extends pb_1.Message {
        constructor(data){
            super();
            _Absent_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Absent_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new Absent({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Absent();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return Absent.deserialize(bytes);
        }
    }
    _Absent_one_of_decls = new WeakMap();
    common.Absent = Absent;
    class Equal extends pb_1.Message {
        constructor(data){
            super();
            _Equal_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Equal_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("value_to_check" in data && data.value_to_check != undefined) {
                    this.value_to_check = data.value_to_check;
                }
            }
        }
        get value_to_check() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set value_to_check(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new Equal({});
            if (data.value_to_check != null) {
                message.value_to_check = data.value_to_check;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.value_to_check != null) {
                data.value_to_check = this.value_to_check;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.value_to_check.length) writer.writeBytes(1, this.value_to_check);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Equal();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.value_to_check = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return Equal.deserialize(bytes);
        }
    }
    _Equal_one_of_decls = new WeakMap();
    common.Equal = Equal;
    class AbsentOrEqual extends pb_1.Message {
        constructor(data){
            super();
            _AbsentOrEqual_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _AbsentOrEqual_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("value_to_check" in data && data.value_to_check != undefined) {
                    this.value_to_check = data.value_to_check;
                }
            }
        }
        get value_to_check() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set value_to_check(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new AbsentOrEqual({});
            if (data.value_to_check != null) {
                message.value_to_check = data.value_to_check;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.value_to_check != null) {
                data.value_to_check = this.value_to_check;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.value_to_check.length) writer.writeBytes(1, this.value_to_check);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AbsentOrEqual();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.value_to_check = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return AbsentOrEqual.deserialize(bytes);
        }
    }
    _AbsentOrEqual_one_of_decls = new WeakMap();
    common.AbsentOrEqual = AbsentOrEqual;
    class NotEqual extends pb_1.Message {
        constructor(data){
            super();
            _NotEqual_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _NotEqual_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("value_to_check" in data && data.value_to_check != undefined) {
                    this.value_to_check = data.value_to_check;
                }
            }
        }
        get value_to_check() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set value_to_check(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new NotEqual({});
            if (data.value_to_check != null) {
                message.value_to_check = data.value_to_check;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.value_to_check != null) {
                data.value_to_check = this.value_to_check;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.value_to_check.length) writer.writeBytes(1, this.value_to_check);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new NotEqual();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.value_to_check = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return NotEqual.deserialize(bytes);
        }
    }
    _NotEqual_one_of_decls = new WeakMap();
    common.NotEqual = NotEqual;
    class _Unbounded extends pb_1.Message {
        constructor(data){
            super();
            __Unbounded_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Unbounded_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _Unbounded({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Unbounded();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _Unbounded.deserialize(bytes);
        }
    }
    __Unbounded_one_of_decls = new WeakMap();
    common._Unbounded = _Unbounded;
    class _Empty extends pb_1.Message {
        constructor(data){
            super();
            __Empty_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Empty_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _Empty({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Empty();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _Empty.deserialize(bytes);
        }
    }
    __Empty_one_of_decls = new WeakMap();
    common._Empty = _Empty;
})(common = exports.common || (exports.common = {}));

}.call(this) }),
"[project]/node_modules/@gomomento/generated-types/dist/cacheclient.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.cache_client = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: cacheclient.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */ const dependency_1 = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/common.js [app-route] (ecmascript)"));
const pb_1 = __importStar(__turbopack_require__("[project]/node_modules/google-protobuf/google-protobuf.js [app-route] (ecmascript)"));
const grpc_1 = __importStar(__turbopack_require__("[project]/node_modules/@grpc/grpc-js/build/src/index.js [app-route] (ecmascript)"));
var cache_client;
(function(cache_client) {
    var __GetRequest_one_of_decls, __GetResponse_one_of_decls, __GetBatchRequest_one_of_decls, __DeleteRequest_one_of_decls, __DeleteResponse_one_of_decls, __SetRequest_one_of_decls, __SetResponse_one_of_decls, __SetBatchRequest_one_of_decls, __SetIfRequest_one_of_decls, __SetIfResponse_one_of_decls, __SetIfNotExistsRequest_one_of_decls, __SetIfNotExistsResponse_one_of_decls, __KeysExistRequest_one_of_decls, __KeysExistResponse_one_of_decls, __IncrementRequest_one_of_decls, __IncrementResponse_one_of_decls, __UpdateTtlRequest_one_of_decls, __UpdateTtlResponse_one_of_decls, __ItemGetTtlRequest_one_of_decls, __ItemGetTtlResponse_one_of_decls, __ItemGetTypeRequest_one_of_decls, __ItemGetTypeResponse_one_of_decls, __DictionaryGetRequest_one_of_decls, __DictionaryGetResponse_one_of_decls, __DictionaryFetchRequest_one_of_decls, __DictionaryFieldValuePair_one_of_decls, __DictionaryFetchResponse_one_of_decls, __DictionarySetRequest_one_of_decls, __DictionarySetResponse_one_of_decls, __DictionaryIncrementRequest_one_of_decls, __DictionaryIncrementResponse_one_of_decls, __DictionaryDeleteRequest_one_of_decls, __DictionaryDeleteResponse_one_of_decls, __DictionaryLengthRequest_one_of_decls, __DictionaryLengthResponse_one_of_decls, __SetFetchRequest_one_of_decls, __SetFetchResponse_one_of_decls, __SetSampleRequest_one_of_decls, __SetSampleResponse_one_of_decls, __SetUnionRequest_one_of_decls, __SetUnionResponse_one_of_decls, __SetDifferenceRequest_one_of_decls, __SetDifferenceResponse_one_of_decls, __SetContainsRequest_one_of_decls, __SetContainsResponse_one_of_decls, __SetLengthRequest_one_of_decls, __SetLengthResponse_one_of_decls, __SetPopRequest_one_of_decls, __SetPopResponse_one_of_decls, __ListConcatenateFrontRequest_one_of_decls, __ListConcatenateFrontResponse_one_of_decls, __ListConcatenateBackRequest_one_of_decls, __ListConcatenateBackResponse_one_of_decls, __ListPushFrontRequest_one_of_decls, __ListPushFrontResponse_one_of_decls, __ListPushBackRequest_one_of_decls, __ListPushBackResponse_one_of_decls, __ListPopFrontRequest_one_of_decls, __ListPopFrontResponse_one_of_decls, __ListPopBackRequest_one_of_decls, __ListPopBackResponse_one_of_decls, __ListRange_one_of_decls, __ListEraseRequest_one_of_decls, __ListEraseResponse_one_of_decls, __ListRemoveRequest_one_of_decls, __ListRemoveResponse_one_of_decls, __ListFetchRequest_one_of_decls, __ListRetainRequest_one_of_decls, __ListRetainResponse_one_of_decls, __ListFetchResponse_one_of_decls, __ListLengthRequest_one_of_decls, __ListLengthResponse_one_of_decls, __SortedSetElement_one_of_decls, __SortedSetPutRequest_one_of_decls, __SortedSetPutResponse_one_of_decls, __SortedSetFetchRequest_one_of_decls, __SortedSetFetchResponse_one_of_decls, __SortedSetGetScoreRequest_one_of_decls, __SortedSetGetScoreResponse_one_of_decls, __SortedSetRemoveRequest_one_of_decls, __SortedSetRemoveResponse_one_of_decls, __SortedSetIncrementRequest_one_of_decls, __SortedSetIncrementResponse_one_of_decls, __SortedSetGetRankRequest_one_of_decls, __SortedSetGetRankResponse_one_of_decls, __SortedSetLengthRequest_one_of_decls, __SortedSetLengthResponse_one_of_decls, __SortedSetLengthByScoreRequest_one_of_decls, __SortedSetLengthByScoreResponse_one_of_decls;
    let ECacheResult;
    (function(ECacheResult) {
        ECacheResult[ECacheResult["Invalid"] = 0] = "Invalid";
        ECacheResult[ECacheResult["Ok"] = 1] = "Ok";
        ECacheResult[ECacheResult["Hit"] = 2] = "Hit";
        ECacheResult[ECacheResult["Miss"] = 3] = "Miss";
    })(ECacheResult = cache_client.ECacheResult || (cache_client.ECacheResult = {}));
    class _GetRequest extends pb_1.Message {
        constructor(data){
            super();
            __GetRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GetRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_key" in data && data.cache_key != undefined) {
                    this.cache_key = data.cache_key;
                }
            }
        }
        get cache_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set cache_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _GetRequest({});
            if (data.cache_key != null) {
                message.cache_key = data.cache_key;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_key != null) {
                data.cache_key = this.cache_key;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_key.length) writer.writeBytes(1, this.cache_key);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GetRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_key = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GetRequest.deserialize(bytes);
        }
    }
    __GetRequest_one_of_decls = new WeakMap();
    cache_client._GetRequest = _GetRequest;
    class _GetResponse extends pb_1.Message {
        constructor(data){
            super();
            __GetResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GetResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("result" in data && data.result != undefined) {
                    this.result = data.result;
                }
                if ("cache_body" in data && data.cache_body != undefined) {
                    this.cache_body = data.cache_body;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
            }
        }
        get result() {
            return pb_1.Message.getFieldWithDefault(this, 1, ECacheResult.Invalid);
        }
        set result(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get cache_body() {
            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
        }
        set cache_body(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "");
        }
        set message(value) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data) {
            const message = new _GetResponse({});
            if (data.result != null) {
                message.result = data.result;
            }
            if (data.cache_body != null) {
                message.cache_body = data.cache_body;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.result != null) {
                data.result = this.result;
            }
            if (this.cache_body != null) {
                data.cache_body = this.cache_body;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.result != ECacheResult.Invalid) writer.writeEnum(1, this.result);
            if (this.cache_body.length) writer.writeBytes(2, this.cache_body);
            if (this.message.length) writer.writeString(3, this.message);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GetResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.result = reader.readEnum();
                        break;
                    case 2:
                        message.cache_body = reader.readBytes();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GetResponse.deserialize(bytes);
        }
    }
    __GetResponse_one_of_decls = new WeakMap();
    cache_client._GetResponse = _GetResponse;
    class _GetBatchRequest extends pb_1.Message {
        constructor(data){
            super();
            __GetBatchRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                1
            ], __classPrivateFieldGet(this, __GetBatchRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("items" in data && data.items != undefined) {
                    this.items = data.items;
                }
            }
        }
        get items() {
            return pb_1.Message.getRepeatedWrapperField(this, _GetRequest, 1);
        }
        set items(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _GetBatchRequest({});
            if (data.items != null) {
                message.items = data.items.map((item)=>_GetRequest.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.items != null) {
                data.items = this.items.map((item)=>item.toObject());
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.items.length) writer.writeRepeatedMessage(1, this.items, (item)=>item.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GetBatchRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.items, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _GetRequest.deserialize(reader), _GetRequest));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GetBatchRequest.deserialize(bytes);
        }
    }
    __GetBatchRequest_one_of_decls = new WeakMap();
    cache_client._GetBatchRequest = _GetBatchRequest;
    class _DeleteRequest extends pb_1.Message {
        constructor(data){
            super();
            __DeleteRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DeleteRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_key" in data && data.cache_key != undefined) {
                    this.cache_key = data.cache_key;
                }
            }
        }
        get cache_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set cache_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _DeleteRequest({});
            if (data.cache_key != null) {
                message.cache_key = data.cache_key;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_key != null) {
                data.cache_key = this.cache_key;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_key.length) writer.writeBytes(1, this.cache_key);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DeleteRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_key = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DeleteRequest.deserialize(bytes);
        }
    }
    __DeleteRequest_one_of_decls = new WeakMap();
    cache_client._DeleteRequest = _DeleteRequest;
    class _DeleteResponse extends pb_1.Message {
        constructor(data){
            super();
            __DeleteResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DeleteResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _DeleteResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DeleteResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DeleteResponse.deserialize(bytes);
        }
    }
    __DeleteResponse_one_of_decls = new WeakMap();
    cache_client._DeleteResponse = _DeleteResponse;
    class _SetRequest extends pb_1.Message {
        constructor(data){
            super();
            __SetRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_key" in data && data.cache_key != undefined) {
                    this.cache_key = data.cache_key;
                }
                if ("cache_body" in data && data.cache_body != undefined) {
                    this.cache_body = data.cache_body;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
            }
        }
        get cache_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set cache_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get cache_body() {
            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
        }
        set cache_body(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data) {
            const message = new _SetRequest({});
            if (data.cache_key != null) {
                message.cache_key = data.cache_key;
            }
            if (data.cache_body != null) {
                message.cache_body = data.cache_body;
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_key != null) {
                data.cache_key = this.cache_key;
            }
            if (this.cache_body != null) {
                data.cache_body = this.cache_body;
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_key.length) writer.writeBytes(1, this.cache_key);
            if (this.cache_body.length) writer.writeBytes(2, this.cache_body);
            if (this.ttl_milliseconds != 0) writer.writeUint64(3, this.ttl_milliseconds);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_key = reader.readBytes();
                        break;
                    case 2:
                        message.cache_body = reader.readBytes();
                        break;
                    case 3:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetRequest.deserialize(bytes);
        }
    }
    __SetRequest_one_of_decls = new WeakMap();
    cache_client._SetRequest = _SetRequest;
    class _SetResponse extends pb_1.Message {
        constructor(data){
            super();
            __SetResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("result" in data && data.result != undefined) {
                    this.result = data.result;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
            }
        }
        get result() {
            return pb_1.Message.getFieldWithDefault(this, 1, ECacheResult.Invalid);
        }
        set result(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set message(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _SetResponse({});
            if (data.result != null) {
                message.result = data.result;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.result != null) {
                data.result = this.result;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.result != ECacheResult.Invalid) writer.writeEnum(1, this.result);
            if (this.message.length) writer.writeString(2, this.message);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.result = reader.readEnum();
                        break;
                    case 2:
                        message.message = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetResponse.deserialize(bytes);
        }
    }
    __SetResponse_one_of_decls = new WeakMap();
    cache_client._SetResponse = _SetResponse;
    class _SetBatchRequest extends pb_1.Message {
        constructor(data){
            super();
            __SetBatchRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                1
            ], __classPrivateFieldGet(this, __SetBatchRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("items" in data && data.items != undefined) {
                    this.items = data.items;
                }
            }
        }
        get items() {
            return pb_1.Message.getRepeatedWrapperField(this, _SetRequest, 1);
        }
        set items(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _SetBatchRequest({});
            if (data.items != null) {
                message.items = data.items.map((item)=>_SetRequest.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.items != null) {
                data.items = this.items.map((item)=>item.toObject());
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.items.length) writer.writeRepeatedMessage(1, this.items, (item)=>item.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetBatchRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.items, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _SetRequest.deserialize(reader), _SetRequest));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetBatchRequest.deserialize(bytes);
        }
    }
    __SetBatchRequest_one_of_decls = new WeakMap();
    cache_client._SetBatchRequest = _SetBatchRequest;
    class _SetIfRequest extends pb_1.Message {
        constructor(data){
            super();
            __SetIfRequest_one_of_decls.set(this, [
                [
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetIfRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_key" in data && data.cache_key != undefined) {
                    this.cache_key = data.cache_key;
                }
                if ("cache_body" in data && data.cache_body != undefined) {
                    this.cache_body = data.cache_body;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
                if ("present" in data && data.present != undefined) {
                    this.present = data.present;
                }
                if ("present_and_not_equal" in data && data.present_and_not_equal != undefined) {
                    this.present_and_not_equal = data.present_and_not_equal;
                }
                if ("absent" in data && data.absent != undefined) {
                    this.absent = data.absent;
                }
                if ("equal" in data && data.equal != undefined) {
                    this.equal = data.equal;
                }
                if ("absent_or_equal" in data && data.absent_or_equal != undefined) {
                    this.absent_or_equal = data.absent_or_equal;
                }
                if ("not_equal" in data && data.not_equal != undefined) {
                    this.not_equal = data.not_equal;
                }
            }
        }
        get cache_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set cache_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get cache_body() {
            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
        }
        set cache_body(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get present() {
            return pb_1.Message.getWrapperField(this, dependency_1.common.Present, 4);
        }
        set present(value) {
            pb_1.Message.setOneofWrapperField(this, 4, __classPrivateFieldGet(this, __SetIfRequest_one_of_decls, "f")[0], value);
        }
        get has_present() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get present_and_not_equal() {
            return pb_1.Message.getWrapperField(this, dependency_1.common.PresentAndNotEqual, 5);
        }
        set present_and_not_equal(value) {
            pb_1.Message.setOneofWrapperField(this, 5, __classPrivateFieldGet(this, __SetIfRequest_one_of_decls, "f")[0], value);
        }
        get has_present_and_not_equal() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get absent() {
            return pb_1.Message.getWrapperField(this, dependency_1.common.Absent, 6);
        }
        set absent(value) {
            pb_1.Message.setOneofWrapperField(this, 6, __classPrivateFieldGet(this, __SetIfRequest_one_of_decls, "f")[0], value);
        }
        get has_absent() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get equal() {
            return pb_1.Message.getWrapperField(this, dependency_1.common.Equal, 7);
        }
        set equal(value) {
            pb_1.Message.setOneofWrapperField(this, 7, __classPrivateFieldGet(this, __SetIfRequest_one_of_decls, "f")[0], value);
        }
        get has_equal() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get absent_or_equal() {
            return pb_1.Message.getWrapperField(this, dependency_1.common.AbsentOrEqual, 8);
        }
        set absent_or_equal(value) {
            pb_1.Message.setOneofWrapperField(this, 8, __classPrivateFieldGet(this, __SetIfRequest_one_of_decls, "f")[0], value);
        }
        get has_absent_or_equal() {
            return pb_1.Message.getField(this, 8) != null;
        }
        get not_equal() {
            return pb_1.Message.getWrapperField(this, dependency_1.common.NotEqual, 9);
        }
        set not_equal(value) {
            pb_1.Message.setOneofWrapperField(this, 9, __classPrivateFieldGet(this, __SetIfRequest_one_of_decls, "f")[0], value);
        }
        get has_not_equal() {
            return pb_1.Message.getField(this, 9) != null;
        }
        get condition() {
            const cases = {
                0: "none",
                4: "present",
                5: "present_and_not_equal",
                6: "absent",
                7: "equal",
                8: "absent_or_equal",
                9: "not_equal"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                4,
                5,
                6,
                7,
                8,
                9
            ])];
        }
        static fromObject(data) {
            const message = new _SetIfRequest({});
            if (data.cache_key != null) {
                message.cache_key = data.cache_key;
            }
            if (data.cache_body != null) {
                message.cache_body = data.cache_body;
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            if (data.present != null) {
                message.present = dependency_1.common.Present.fromObject(data.present);
            }
            if (data.present_and_not_equal != null) {
                message.present_and_not_equal = dependency_1.common.PresentAndNotEqual.fromObject(data.present_and_not_equal);
            }
            if (data.absent != null) {
                message.absent = dependency_1.common.Absent.fromObject(data.absent);
            }
            if (data.equal != null) {
                message.equal = dependency_1.common.Equal.fromObject(data.equal);
            }
            if (data.absent_or_equal != null) {
                message.absent_or_equal = dependency_1.common.AbsentOrEqual.fromObject(data.absent_or_equal);
            }
            if (data.not_equal != null) {
                message.not_equal = dependency_1.common.NotEqual.fromObject(data.not_equal);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_key != null) {
                data.cache_key = this.cache_key;
            }
            if (this.cache_body != null) {
                data.cache_body = this.cache_body;
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            if (this.present != null) {
                data.present = this.present.toObject();
            }
            if (this.present_and_not_equal != null) {
                data.present_and_not_equal = this.present_and_not_equal.toObject();
            }
            if (this.absent != null) {
                data.absent = this.absent.toObject();
            }
            if (this.equal != null) {
                data.equal = this.equal.toObject();
            }
            if (this.absent_or_equal != null) {
                data.absent_or_equal = this.absent_or_equal.toObject();
            }
            if (this.not_equal != null) {
                data.not_equal = this.not_equal.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_key.length) writer.writeBytes(1, this.cache_key);
            if (this.cache_body.length) writer.writeBytes(2, this.cache_body);
            if (this.ttl_milliseconds != 0) writer.writeUint64(3, this.ttl_milliseconds);
            if (this.has_present) writer.writeMessage(4, this.present, ()=>this.present.serialize(writer));
            if (this.has_present_and_not_equal) writer.writeMessage(5, this.present_and_not_equal, ()=>this.present_and_not_equal.serialize(writer));
            if (this.has_absent) writer.writeMessage(6, this.absent, ()=>this.absent.serialize(writer));
            if (this.has_equal) writer.writeMessage(7, this.equal, ()=>this.equal.serialize(writer));
            if (this.has_absent_or_equal) writer.writeMessage(8, this.absent_or_equal, ()=>this.absent_or_equal.serialize(writer));
            if (this.has_not_equal) writer.writeMessage(9, this.not_equal, ()=>this.not_equal.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetIfRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_key = reader.readBytes();
                        break;
                    case 2:
                        message.cache_body = reader.readBytes();
                        break;
                    case 3:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    case 4:
                        reader.readMessage(message.present, ()=>message.present = dependency_1.common.Present.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.present_and_not_equal, ()=>message.present_and_not_equal = dependency_1.common.PresentAndNotEqual.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message.absent, ()=>message.absent = dependency_1.common.Absent.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.equal, ()=>message.equal = dependency_1.common.Equal.deserialize(reader));
                        break;
                    case 8:
                        reader.readMessage(message.absent_or_equal, ()=>message.absent_or_equal = dependency_1.common.AbsentOrEqual.deserialize(reader));
                        break;
                    case 9:
                        reader.readMessage(message.not_equal, ()=>message.not_equal = dependency_1.common.NotEqual.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetIfRequest.deserialize(bytes);
        }
    }
    __SetIfRequest_one_of_decls = new WeakMap();
    cache_client._SetIfRequest = _SetIfRequest;
    class _SetIfResponse extends pb_1.Message {
        constructor(data){
            super();
            __SetIfResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetIfResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("stored" in data && data.stored != undefined) {
                    this.stored = data.stored;
                }
                if ("not_stored" in data && data.not_stored != undefined) {
                    this.not_stored = data.not_stored;
                }
            }
        }
        get stored() {
            return pb_1.Message.getWrapperField(this, _SetIfResponse._Stored, 1);
        }
        set stored(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SetIfResponse_one_of_decls, "f")[0], value);
        }
        get has_stored() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get not_stored() {
            return pb_1.Message.getWrapperField(this, _SetIfResponse._NotStored, 2);
        }
        set not_stored(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SetIfResponse_one_of_decls, "f")[0], value);
        }
        get has_not_stored() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get result() {
            const cases = {
                0: "none",
                1: "stored",
                2: "not_stored"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _SetIfResponse({});
            if (data.stored != null) {
                message.stored = _SetIfResponse._Stored.fromObject(data.stored);
            }
            if (data.not_stored != null) {
                message.not_stored = _SetIfResponse._NotStored.fromObject(data.not_stored);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.stored != null) {
                data.stored = this.stored.toObject();
            }
            if (this.not_stored != null) {
                data.not_stored = this.not_stored.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_stored) writer.writeMessage(1, this.stored, ()=>this.stored.serialize(writer));
            if (this.has_not_stored) writer.writeMessage(2, this.not_stored, ()=>this.not_stored.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetIfResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.stored, ()=>message.stored = _SetIfResponse._Stored.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.not_stored, ()=>message.not_stored = _SetIfResponse._NotStored.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetIfResponse.deserialize(bytes);
        }
    }
    __SetIfResponse_one_of_decls = new WeakMap();
    cache_client._SetIfResponse = _SetIfResponse;
    (function(_SetIfResponse) {
        var __Stored_one_of_decls, __NotStored_one_of_decls;
        class _Stored extends pb_1.Message {
            constructor(data){
                super();
                __Stored_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Stored_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Stored({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Stored();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Stored.deserialize(bytes);
            }
        }
        __Stored_one_of_decls = new WeakMap();
        _SetIfResponse._Stored = _Stored;
        class _NotStored extends pb_1.Message {
            constructor(data){
                super();
                __NotStored_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __NotStored_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _NotStored({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _NotStored();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _NotStored.deserialize(bytes);
            }
        }
        __NotStored_one_of_decls = new WeakMap();
        _SetIfResponse._NotStored = _NotStored;
    })(_SetIfResponse = cache_client._SetIfResponse || (cache_client._SetIfResponse = {}));
    class _SetIfNotExistsRequest extends pb_1.Message {
        constructor(data){
            super();
            __SetIfNotExistsRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetIfNotExistsRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_key" in data && data.cache_key != undefined) {
                    this.cache_key = data.cache_key;
                }
                if ("cache_body" in data && data.cache_body != undefined) {
                    this.cache_body = data.cache_body;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
            }
        }
        get cache_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set cache_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get cache_body() {
            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
        }
        set cache_body(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data) {
            const message = new _SetIfNotExistsRequest({});
            if (data.cache_key != null) {
                message.cache_key = data.cache_key;
            }
            if (data.cache_body != null) {
                message.cache_body = data.cache_body;
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_key != null) {
                data.cache_key = this.cache_key;
            }
            if (this.cache_body != null) {
                data.cache_body = this.cache_body;
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_key.length) writer.writeBytes(1, this.cache_key);
            if (this.cache_body.length) writer.writeBytes(2, this.cache_body);
            if (this.ttl_milliseconds != 0) writer.writeUint64(3, this.ttl_milliseconds);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetIfNotExistsRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_key = reader.readBytes();
                        break;
                    case 2:
                        message.cache_body = reader.readBytes();
                        break;
                    case 3:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetIfNotExistsRequest.deserialize(bytes);
        }
    }
    __SetIfNotExistsRequest_one_of_decls = new WeakMap();
    cache_client._SetIfNotExistsRequest = _SetIfNotExistsRequest;
    class _SetIfNotExistsResponse extends pb_1.Message {
        constructor(data){
            super();
            __SetIfNotExistsResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetIfNotExistsResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("stored" in data && data.stored != undefined) {
                    this.stored = data.stored;
                }
                if ("not_stored" in data && data.not_stored != undefined) {
                    this.not_stored = data.not_stored;
                }
            }
        }
        get stored() {
            return pb_1.Message.getWrapperField(this, _SetIfNotExistsResponse._Stored, 1);
        }
        set stored(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SetIfNotExistsResponse_one_of_decls, "f")[0], value);
        }
        get has_stored() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get not_stored() {
            return pb_1.Message.getWrapperField(this, _SetIfNotExistsResponse._NotStored, 2);
        }
        set not_stored(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SetIfNotExistsResponse_one_of_decls, "f")[0], value);
        }
        get has_not_stored() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get result() {
            const cases = {
                0: "none",
                1: "stored",
                2: "not_stored"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _SetIfNotExistsResponse({});
            if (data.stored != null) {
                message.stored = _SetIfNotExistsResponse._Stored.fromObject(data.stored);
            }
            if (data.not_stored != null) {
                message.not_stored = _SetIfNotExistsResponse._NotStored.fromObject(data.not_stored);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.stored != null) {
                data.stored = this.stored.toObject();
            }
            if (this.not_stored != null) {
                data.not_stored = this.not_stored.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_stored) writer.writeMessage(1, this.stored, ()=>this.stored.serialize(writer));
            if (this.has_not_stored) writer.writeMessage(2, this.not_stored, ()=>this.not_stored.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetIfNotExistsResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.stored, ()=>message.stored = _SetIfNotExistsResponse._Stored.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.not_stored, ()=>message.not_stored = _SetIfNotExistsResponse._NotStored.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetIfNotExistsResponse.deserialize(bytes);
        }
    }
    __SetIfNotExistsResponse_one_of_decls = new WeakMap();
    cache_client._SetIfNotExistsResponse = _SetIfNotExistsResponse;
    (function(_SetIfNotExistsResponse) {
        var __Stored_one_of_decls_1, __NotStored_one_of_decls_1;
        class _Stored extends pb_1.Message {
            constructor(data){
                super();
                __Stored_one_of_decls_1.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Stored_one_of_decls_1, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Stored({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Stored();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Stored.deserialize(bytes);
            }
        }
        __Stored_one_of_decls_1 = new WeakMap();
        _SetIfNotExistsResponse._Stored = _Stored;
        class _NotStored extends pb_1.Message {
            constructor(data){
                super();
                __NotStored_one_of_decls_1.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __NotStored_one_of_decls_1, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _NotStored({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _NotStored();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _NotStored.deserialize(bytes);
            }
        }
        __NotStored_one_of_decls_1 = new WeakMap();
        _SetIfNotExistsResponse._NotStored = _NotStored;
    })(_SetIfNotExistsResponse = cache_client._SetIfNotExistsResponse || (cache_client._SetIfNotExistsResponse = {}));
    class _KeysExistRequest extends pb_1.Message {
        constructor(data){
            super();
            __KeysExistRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                1
            ], __classPrivateFieldGet(this, __KeysExistRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_keys" in data && data.cache_keys != undefined) {
                    this.cache_keys = data.cache_keys;
                }
            }
        }
        get cache_keys() {
            return pb_1.Message.getFieldWithDefault(this, 1, []);
        }
        set cache_keys(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _KeysExistRequest({});
            if (data.cache_keys != null) {
                message.cache_keys = data.cache_keys;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_keys != null) {
                data.cache_keys = this.cache_keys;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_keys.length) writer.writeRepeatedBytes(1, this.cache_keys);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _KeysExistRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _KeysExistRequest.deserialize(bytes);
        }
    }
    __KeysExistRequest_one_of_decls = new WeakMap();
    cache_client._KeysExistRequest = _KeysExistRequest;
    class _KeysExistResponse extends pb_1.Message {
        constructor(data){
            super();
            __KeysExistResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                1
            ], __classPrivateFieldGet(this, __KeysExistResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("exists" in data && data.exists != undefined) {
                    this.exists = data.exists;
                }
            }
        }
        get exists() {
            return pb_1.Message.getFieldWithDefault(this, 1, []);
        }
        set exists(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _KeysExistResponse({});
            if (data.exists != null) {
                message.exists = data.exists;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.exists != null) {
                data.exists = this.exists;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.exists.length) writer.writePackedBool(1, this.exists);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _KeysExistResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.exists = reader.readPackedBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _KeysExistResponse.deserialize(bytes);
        }
    }
    __KeysExistResponse_one_of_decls = new WeakMap();
    cache_client._KeysExistResponse = _KeysExistResponse;
    class _IncrementRequest extends pb_1.Message {
        constructor(data){
            super();
            __IncrementRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __IncrementRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_key" in data && data.cache_key != undefined) {
                    this.cache_key = data.cache_key;
                }
                if ("amount" in data && data.amount != undefined) {
                    this.amount = data.amount;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
            }
        }
        get cache_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set cache_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get amount() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set amount(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data) {
            const message = new _IncrementRequest({});
            if (data.cache_key != null) {
                message.cache_key = data.cache_key;
            }
            if (data.amount != null) {
                message.amount = data.amount;
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_key != null) {
                data.cache_key = this.cache_key;
            }
            if (this.amount != null) {
                data.amount = this.amount;
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_key.length) writer.writeBytes(1, this.cache_key);
            if (this.amount != 0) writer.writeInt64(2, this.amount);
            if (this.ttl_milliseconds != 0) writer.writeUint64(3, this.ttl_milliseconds);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _IncrementRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_key = reader.readBytes();
                        break;
                    case 2:
                        message.amount = reader.readInt64();
                        break;
                    case 3:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _IncrementRequest.deserialize(bytes);
        }
    }
    __IncrementRequest_one_of_decls = new WeakMap();
    cache_client._IncrementRequest = _IncrementRequest;
    class _IncrementResponse extends pb_1.Message {
        constructor(data){
            super();
            __IncrementResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __IncrementResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
            }
        }
        get value() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set value(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _IncrementResponse({});
            if (data.value != null) {
                message.value = data.value;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.value != null) {
                data.value = this.value;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.value != 0) writer.writeInt64(1, this.value);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _IncrementResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.value = reader.readInt64();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _IncrementResponse.deserialize(bytes);
        }
    }
    __IncrementResponse_one_of_decls = new WeakMap();
    cache_client._IncrementResponse = _IncrementResponse;
    class _UpdateTtlRequest extends pb_1.Message {
        constructor(data){
            super();
            __UpdateTtlRequest_one_of_decls.set(this, [
                [
                    2,
                    3,
                    4
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __UpdateTtlRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_key" in data && data.cache_key != undefined) {
                    this.cache_key = data.cache_key;
                }
                if ("increase_to_milliseconds" in data && data.increase_to_milliseconds != undefined) {
                    this.increase_to_milliseconds = data.increase_to_milliseconds;
                }
                if ("decrease_to_milliseconds" in data && data.decrease_to_milliseconds != undefined) {
                    this.decrease_to_milliseconds = data.decrease_to_milliseconds;
                }
                if ("overwrite_to_milliseconds" in data && data.overwrite_to_milliseconds != undefined) {
                    this.overwrite_to_milliseconds = data.overwrite_to_milliseconds;
                }
            }
        }
        get cache_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set cache_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get increase_to_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set increase_to_milliseconds(value) {
            pb_1.Message.setOneofField(this, 2, __classPrivateFieldGet(this, __UpdateTtlRequest_one_of_decls, "f")[0], value);
        }
        get has_increase_to_milliseconds() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get decrease_to_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set decrease_to_milliseconds(value) {
            pb_1.Message.setOneofField(this, 3, __classPrivateFieldGet(this, __UpdateTtlRequest_one_of_decls, "f")[0], value);
        }
        get has_decrease_to_milliseconds() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get overwrite_to_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0);
        }
        set overwrite_to_milliseconds(value) {
            pb_1.Message.setOneofField(this, 4, __classPrivateFieldGet(this, __UpdateTtlRequest_one_of_decls, "f")[0], value);
        }
        get has_overwrite_to_milliseconds() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get update_ttl() {
            const cases = {
                0: "none",
                2: "increase_to_milliseconds",
                3: "decrease_to_milliseconds",
                4: "overwrite_to_milliseconds"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                2,
                3,
                4
            ])];
        }
        static fromObject(data) {
            const message = new _UpdateTtlRequest({});
            if (data.cache_key != null) {
                message.cache_key = data.cache_key;
            }
            if (data.increase_to_milliseconds != null) {
                message.increase_to_milliseconds = data.increase_to_milliseconds;
            }
            if (data.decrease_to_milliseconds != null) {
                message.decrease_to_milliseconds = data.decrease_to_milliseconds;
            }
            if (data.overwrite_to_milliseconds != null) {
                message.overwrite_to_milliseconds = data.overwrite_to_milliseconds;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_key != null) {
                data.cache_key = this.cache_key;
            }
            if (this.increase_to_milliseconds != null) {
                data.increase_to_milliseconds = this.increase_to_milliseconds;
            }
            if (this.decrease_to_milliseconds != null) {
                data.decrease_to_milliseconds = this.decrease_to_milliseconds;
            }
            if (this.overwrite_to_milliseconds != null) {
                data.overwrite_to_milliseconds = this.overwrite_to_milliseconds;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_key.length) writer.writeBytes(1, this.cache_key);
            if (this.has_increase_to_milliseconds) writer.writeUint64(2, this.increase_to_milliseconds);
            if (this.has_decrease_to_milliseconds) writer.writeUint64(3, this.decrease_to_milliseconds);
            if (this.has_overwrite_to_milliseconds) writer.writeUint64(4, this.overwrite_to_milliseconds);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _UpdateTtlRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_key = reader.readBytes();
                        break;
                    case 2:
                        message.increase_to_milliseconds = reader.readUint64();
                        break;
                    case 3:
                        message.decrease_to_milliseconds = reader.readUint64();
                        break;
                    case 4:
                        message.overwrite_to_milliseconds = reader.readUint64();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _UpdateTtlRequest.deserialize(bytes);
        }
    }
    __UpdateTtlRequest_one_of_decls = new WeakMap();
    cache_client._UpdateTtlRequest = _UpdateTtlRequest;
    class _UpdateTtlResponse extends pb_1.Message {
        constructor(data){
            super();
            __UpdateTtlResponse_one_of_decls.set(this, [
                [
                    1,
                    2,
                    3
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __UpdateTtlResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set" in data && data.set != undefined) {
                    this.set = data.set;
                }
                if ("not_set" in data && data.not_set != undefined) {
                    this.not_set = data.not_set;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get set() {
            return pb_1.Message.getWrapperField(this, _UpdateTtlResponse._Set, 1);
        }
        set set(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __UpdateTtlResponse_one_of_decls, "f")[0], value);
        }
        get has_set() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get not_set() {
            return pb_1.Message.getWrapperField(this, _UpdateTtlResponse._NotSet, 2);
        }
        set not_set(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __UpdateTtlResponse_one_of_decls, "f")[0], value);
        }
        get has_not_set() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _UpdateTtlResponse._Missing, 3);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, __UpdateTtlResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get result() {
            const cases = {
                0: "none",
                1: "set",
                2: "not_set",
                3: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2,
                3
            ])];
        }
        static fromObject(data) {
            const message = new _UpdateTtlResponse({});
            if (data.set != null) {
                message.set = _UpdateTtlResponse._Set.fromObject(data.set);
            }
            if (data.not_set != null) {
                message.not_set = _UpdateTtlResponse._NotSet.fromObject(data.not_set);
            }
            if (data.missing != null) {
                message.missing = _UpdateTtlResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set != null) {
                data.set = this.set.toObject();
            }
            if (this.not_set != null) {
                data.not_set = this.not_set.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_set) writer.writeMessage(1, this.set, ()=>this.set.serialize(writer));
            if (this.has_not_set) writer.writeMessage(2, this.not_set, ()=>this.not_set.serialize(writer));
            if (this.has_missing) writer.writeMessage(3, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _UpdateTtlResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.set, ()=>message.set = _UpdateTtlResponse._Set.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.not_set, ()=>message.not_set = _UpdateTtlResponse._NotSet.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.missing, ()=>message.missing = _UpdateTtlResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _UpdateTtlResponse.deserialize(bytes);
        }
    }
    __UpdateTtlResponse_one_of_decls = new WeakMap();
    cache_client._UpdateTtlResponse = _UpdateTtlResponse;
    (function(_UpdateTtlResponse) {
        var __Set_one_of_decls, __NotSet_one_of_decls, __Missing_one_of_decls;
        class _Set extends pb_1.Message {
            constructor(data){
                super();
                __Set_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Set_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Set({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Set();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Set.deserialize(bytes);
            }
        }
        __Set_one_of_decls = new WeakMap();
        _UpdateTtlResponse._Set = _Set;
        class _NotSet extends pb_1.Message {
            constructor(data){
                super();
                __NotSet_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __NotSet_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _NotSet({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _NotSet();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _NotSet.deserialize(bytes);
            }
        }
        __NotSet_one_of_decls = new WeakMap();
        _UpdateTtlResponse._NotSet = _NotSet;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls = new WeakMap();
        _UpdateTtlResponse._Missing = _Missing;
    })(_UpdateTtlResponse = cache_client._UpdateTtlResponse || (cache_client._UpdateTtlResponse = {}));
    class _ItemGetTtlRequest extends pb_1.Message {
        constructor(data){
            super();
            __ItemGetTtlRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ItemGetTtlRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_key" in data && data.cache_key != undefined) {
                    this.cache_key = data.cache_key;
                }
            }
        }
        get cache_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set cache_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ItemGetTtlRequest({});
            if (data.cache_key != null) {
                message.cache_key = data.cache_key;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_key != null) {
                data.cache_key = this.cache_key;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_key.length) writer.writeBytes(1, this.cache_key);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ItemGetTtlRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_key = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ItemGetTtlRequest.deserialize(bytes);
        }
    }
    __ItemGetTtlRequest_one_of_decls = new WeakMap();
    cache_client._ItemGetTtlRequest = _ItemGetTtlRequest;
    class _ItemGetTtlResponse extends pb_1.Message {
        constructor(data){
            super();
            __ItemGetTtlResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ItemGetTtlResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _ItemGetTtlResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __ItemGetTtlResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _ItemGetTtlResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __ItemGetTtlResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get result() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _ItemGetTtlResponse({});
            if (data.found != null) {
                message.found = _ItemGetTtlResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _ItemGetTtlResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ItemGetTtlResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _ItemGetTtlResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _ItemGetTtlResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ItemGetTtlResponse.deserialize(bytes);
        }
    }
    __ItemGetTtlResponse_one_of_decls = new WeakMap();
    cache_client._ItemGetTtlResponse = _ItemGetTtlResponse;
    (function(_ItemGetTtlResponse) {
        var __Found_one_of_decls, __Missing_one_of_decls_1;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("remaining_ttl_millis" in data && data.remaining_ttl_millis != undefined) {
                        this.remaining_ttl_millis = data.remaining_ttl_millis;
                    }
                }
            }
            get remaining_ttl_millis() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set remaining_ttl_millis(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.remaining_ttl_millis != null) {
                    message.remaining_ttl_millis = data.remaining_ttl_millis;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.remaining_ttl_millis != null) {
                    data.remaining_ttl_millis = this.remaining_ttl_millis;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.remaining_ttl_millis != 0) writer.writeUint64(1, this.remaining_ttl_millis);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.remaining_ttl_millis = reader.readUint64();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls = new WeakMap();
        _ItemGetTtlResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_1.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_1, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_1 = new WeakMap();
        _ItemGetTtlResponse._Missing = _Missing;
    })(_ItemGetTtlResponse = cache_client._ItemGetTtlResponse || (cache_client._ItemGetTtlResponse = {}));
    class _ItemGetTypeRequest extends pb_1.Message {
        constructor(data){
            super();
            __ItemGetTypeRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ItemGetTypeRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_key" in data && data.cache_key != undefined) {
                    this.cache_key = data.cache_key;
                }
            }
        }
        get cache_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set cache_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ItemGetTypeRequest({});
            if (data.cache_key != null) {
                message.cache_key = data.cache_key;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_key != null) {
                data.cache_key = this.cache_key;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_key.length) writer.writeBytes(1, this.cache_key);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ItemGetTypeRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_key = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ItemGetTypeRequest.deserialize(bytes);
        }
    }
    __ItemGetTypeRequest_one_of_decls = new WeakMap();
    cache_client._ItemGetTypeRequest = _ItemGetTypeRequest;
    class _ItemGetTypeResponse extends pb_1.Message {
        constructor(data){
            super();
            __ItemGetTypeResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ItemGetTypeResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _ItemGetTypeResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __ItemGetTypeResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _ItemGetTypeResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __ItemGetTypeResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get result() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _ItemGetTypeResponse({});
            if (data.found != null) {
                message.found = _ItemGetTypeResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _ItemGetTypeResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ItemGetTypeResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _ItemGetTypeResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _ItemGetTypeResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ItemGetTypeResponse.deserialize(bytes);
        }
    }
    __ItemGetTypeResponse_one_of_decls = new WeakMap();
    cache_client._ItemGetTypeResponse = _ItemGetTypeResponse;
    (function(_ItemGetTypeResponse) {
        var __Found_one_of_decls_1, __Missing_one_of_decls_2;
        let ItemType;
        (function(ItemType) {
            ItemType[ItemType["SCALAR"] = 0] = "SCALAR";
            ItemType[ItemType["DICTIONARY"] = 1] = "DICTIONARY";
            ItemType[ItemType["SET"] = 2] = "SET";
            ItemType[ItemType["LIST"] = 3] = "LIST";
            ItemType[ItemType["SORTED_SET"] = 4] = "SORTED_SET";
        })(ItemType = _ItemGetTypeResponse.ItemType || (_ItemGetTypeResponse.ItemType = {}));
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_1.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls_1, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("item_type" in data && data.item_type != undefined) {
                        this.item_type = data.item_type;
                    }
                }
            }
            get item_type() {
                return pb_1.Message.getFieldWithDefault(this, 1, _ItemGetTypeResponse.ItemType.SCALAR);
            }
            set item_type(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.item_type != null) {
                    message.item_type = data.item_type;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.item_type != null) {
                    data.item_type = this.item_type;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.item_type != _ItemGetTypeResponse.ItemType.SCALAR) writer.writeEnum(1, this.item_type);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.item_type = reader.readEnum();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_1 = new WeakMap();
        _ItemGetTypeResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_2.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_2, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_2 = new WeakMap();
        _ItemGetTypeResponse._Missing = _Missing;
    })(_ItemGetTypeResponse = cache_client._ItemGetTypeResponse || (cache_client._ItemGetTypeResponse = {}));
    class _DictionaryGetRequest extends pb_1.Message {
        constructor(data){
            super();
            __DictionaryGetRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                2
            ], __classPrivateFieldGet(this, __DictionaryGetRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("dictionary_name" in data && data.dictionary_name != undefined) {
                    this.dictionary_name = data.dictionary_name;
                }
                if ("fields" in data && data.fields != undefined) {
                    this.fields = data.fields;
                }
            }
        }
        get dictionary_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set dictionary_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get fields() {
            return pb_1.Message.getFieldWithDefault(this, 2, []);
        }
        set fields(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _DictionaryGetRequest({});
            if (data.dictionary_name != null) {
                message.dictionary_name = data.dictionary_name;
            }
            if (data.fields != null) {
                message.fields = data.fields;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.dictionary_name != null) {
                data.dictionary_name = this.dictionary_name;
            }
            if (this.fields != null) {
                data.fields = this.fields;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.dictionary_name.length) writer.writeBytes(1, this.dictionary_name);
            if (this.fields.length) writer.writeRepeatedBytes(2, this.fields);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionaryGetRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.dictionary_name = reader.readBytes();
                        break;
                    case 2:
                        pb_1.Message.addToRepeatedField(message, 2, reader.readBytes());
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DictionaryGetRequest.deserialize(bytes);
        }
    }
    __DictionaryGetRequest_one_of_decls = new WeakMap();
    cache_client._DictionaryGetRequest = _DictionaryGetRequest;
    class _DictionaryGetResponse extends pb_1.Message {
        constructor(data){
            super();
            __DictionaryGetResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DictionaryGetResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _DictionaryGetResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __DictionaryGetResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _DictionaryGetResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __DictionaryGetResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get dictionary() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _DictionaryGetResponse({});
            if (data.found != null) {
                message.found = _DictionaryGetResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _DictionaryGetResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionaryGetResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _DictionaryGetResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _DictionaryGetResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DictionaryGetResponse.deserialize(bytes);
        }
    }
    __DictionaryGetResponse_one_of_decls = new WeakMap();
    cache_client._DictionaryGetResponse = _DictionaryGetResponse;
    (function(_DictionaryGetResponse) {
        var __DictionaryGetResponsePart_one_of_decls, __Found_one_of_decls_2, __Missing_one_of_decls_3;
        class _DictionaryGetResponsePart extends pb_1.Message {
            constructor(data){
                super();
                __DictionaryGetResponsePart_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DictionaryGetResponsePart_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("result" in data && data.result != undefined) {
                        this.result = data.result;
                    }
                    if ("cache_body" in data && data.cache_body != undefined) {
                        this.cache_body = data.cache_body;
                    }
                }
            }
            get result() {
                return pb_1.Message.getFieldWithDefault(this, 1, ECacheResult.Invalid);
            }
            set result(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get cache_body() {
                return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
            }
            set cache_body(value) {
                pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
                const message = new _DictionaryGetResponsePart({});
                if (data.result != null) {
                    message.result = data.result;
                }
                if (data.cache_body != null) {
                    message.cache_body = data.cache_body;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.result != null) {
                    data.result = this.result;
                }
                if (this.cache_body != null) {
                    data.cache_body = this.cache_body;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.result != ECacheResult.Invalid) writer.writeEnum(1, this.result);
                if (this.cache_body.length) writer.writeBytes(2, this.cache_body);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionaryGetResponsePart();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.result = reader.readEnum();
                            break;
                        case 2:
                            message.cache_body = reader.readBytes();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _DictionaryGetResponsePart.deserialize(bytes);
            }
        }
        __DictionaryGetResponsePart_one_of_decls = new WeakMap();
        _DictionaryGetResponse._DictionaryGetResponsePart = _DictionaryGetResponsePart;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_2.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                    1
                ], __classPrivateFieldGet(this, __Found_one_of_decls_2, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("items" in data && data.items != undefined) {
                        this.items = data.items;
                    }
                }
            }
            get items() {
                return pb_1.Message.getRepeatedWrapperField(this, _DictionaryGetResponse._DictionaryGetResponsePart, 1);
            }
            set items(value) {
                pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.items != null) {
                    message.items = data.items.map((item)=>_DictionaryGetResponse._DictionaryGetResponsePart.fromObject(item));
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.items != null) {
                    data.items = this.items.map((item)=>item.toObject());
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.items.length) writer.writeRepeatedMessage(1, this.items, (item)=>item.serialize(writer));
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            reader.readMessage(message.items, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _DictionaryGetResponse._DictionaryGetResponsePart.deserialize(reader), _DictionaryGetResponse._DictionaryGetResponsePart));
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_2 = new WeakMap();
        _DictionaryGetResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_3.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_3, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_3 = new WeakMap();
        _DictionaryGetResponse._Missing = _Missing;
    })(_DictionaryGetResponse = cache_client._DictionaryGetResponse || (cache_client._DictionaryGetResponse = {}));
    class _DictionaryFetchRequest extends pb_1.Message {
        constructor(data){
            super();
            __DictionaryFetchRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DictionaryFetchRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("dictionary_name" in data && data.dictionary_name != undefined) {
                    this.dictionary_name = data.dictionary_name;
                }
            }
        }
        get dictionary_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set dictionary_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _DictionaryFetchRequest({});
            if (data.dictionary_name != null) {
                message.dictionary_name = data.dictionary_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.dictionary_name != null) {
                data.dictionary_name = this.dictionary_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.dictionary_name.length) writer.writeBytes(1, this.dictionary_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionaryFetchRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.dictionary_name = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DictionaryFetchRequest.deserialize(bytes);
        }
    }
    __DictionaryFetchRequest_one_of_decls = new WeakMap();
    cache_client._DictionaryFetchRequest = _DictionaryFetchRequest;
    class _DictionaryFieldValuePair extends pb_1.Message {
        constructor(data){
            super();
            __DictionaryFieldValuePair_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DictionaryFieldValuePair_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("field" in data && data.field != undefined) {
                    this.field = data.field;
                }
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
            }
        }
        get field() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set field(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get value() {
            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
        }
        set value(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _DictionaryFieldValuePair({});
            if (data.field != null) {
                message.field = data.field;
            }
            if (data.value != null) {
                message.value = data.value;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.field != null) {
                data.field = this.field;
            }
            if (this.value != null) {
                data.value = this.value;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.field.length) writer.writeBytes(1, this.field);
            if (this.value.length) writer.writeBytes(2, this.value);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionaryFieldValuePair();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.field = reader.readBytes();
                        break;
                    case 2:
                        message.value = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DictionaryFieldValuePair.deserialize(bytes);
        }
    }
    __DictionaryFieldValuePair_one_of_decls = new WeakMap();
    cache_client._DictionaryFieldValuePair = _DictionaryFieldValuePair;
    class _DictionaryFetchResponse extends pb_1.Message {
        constructor(data){
            super();
            __DictionaryFetchResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DictionaryFetchResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _DictionaryFetchResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __DictionaryFetchResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _DictionaryFetchResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __DictionaryFetchResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get dictionary() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _DictionaryFetchResponse({});
            if (data.found != null) {
                message.found = _DictionaryFetchResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _DictionaryFetchResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionaryFetchResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _DictionaryFetchResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _DictionaryFetchResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DictionaryFetchResponse.deserialize(bytes);
        }
    }
    __DictionaryFetchResponse_one_of_decls = new WeakMap();
    cache_client._DictionaryFetchResponse = _DictionaryFetchResponse;
    (function(_DictionaryFetchResponse) {
        var __Found_one_of_decls_3, __Missing_one_of_decls_4;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_3.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                    1
                ], __classPrivateFieldGet(this, __Found_one_of_decls_3, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("items" in data && data.items != undefined) {
                        this.items = data.items;
                    }
                }
            }
            get items() {
                return pb_1.Message.getRepeatedWrapperField(this, _DictionaryFieldValuePair, 1);
            }
            set items(value) {
                pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.items != null) {
                    message.items = data.items.map((item)=>_DictionaryFieldValuePair.fromObject(item));
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.items != null) {
                    data.items = this.items.map((item)=>item.toObject());
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.items.length) writer.writeRepeatedMessage(1, this.items, (item)=>item.serialize(writer));
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            reader.readMessage(message.items, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _DictionaryFieldValuePair.deserialize(reader), _DictionaryFieldValuePair));
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_3 = new WeakMap();
        _DictionaryFetchResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_4.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_4, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_4 = new WeakMap();
        _DictionaryFetchResponse._Missing = _Missing;
    })(_DictionaryFetchResponse = cache_client._DictionaryFetchResponse || (cache_client._DictionaryFetchResponse = {}));
    class _DictionarySetRequest extends pb_1.Message {
        constructor(data){
            super();
            __DictionarySetRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                2
            ], __classPrivateFieldGet(this, __DictionarySetRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("dictionary_name" in data && data.dictionary_name != undefined) {
                    this.dictionary_name = data.dictionary_name;
                }
                if ("items" in data && data.items != undefined) {
                    this.items = data.items;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
                if ("refresh_ttl" in data && data.refresh_ttl != undefined) {
                    this.refresh_ttl = data.refresh_ttl;
                }
            }
        }
        get dictionary_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set dictionary_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get items() {
            return pb_1.Message.getRepeatedWrapperField(this, _DictionaryFieldValuePair, 2);
        }
        set items(value) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get refresh_ttl() {
            return pb_1.Message.getFieldWithDefault(this, 4, false);
        }
        set refresh_ttl(value) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data) {
            const message = new _DictionarySetRequest({});
            if (data.dictionary_name != null) {
                message.dictionary_name = data.dictionary_name;
            }
            if (data.items != null) {
                message.items = data.items.map((item)=>_DictionaryFieldValuePair.fromObject(item));
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            if (data.refresh_ttl != null) {
                message.refresh_ttl = data.refresh_ttl;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.dictionary_name != null) {
                data.dictionary_name = this.dictionary_name;
            }
            if (this.items != null) {
                data.items = this.items.map((item)=>item.toObject());
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            if (this.refresh_ttl != null) {
                data.refresh_ttl = this.refresh_ttl;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.dictionary_name.length) writer.writeBytes(1, this.dictionary_name);
            if (this.items.length) writer.writeRepeatedMessage(2, this.items, (item)=>item.serialize(writer));
            if (this.ttl_milliseconds != 0) writer.writeUint64(3, this.ttl_milliseconds);
            if (this.refresh_ttl != false) writer.writeBool(4, this.refresh_ttl);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionarySetRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.dictionary_name = reader.readBytes();
                        break;
                    case 2:
                        reader.readMessage(message.items, ()=>pb_1.Message.addToRepeatedWrapperField(message, 2, _DictionaryFieldValuePair.deserialize(reader), _DictionaryFieldValuePair));
                        break;
                    case 3:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    case 4:
                        message.refresh_ttl = reader.readBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DictionarySetRequest.deserialize(bytes);
        }
    }
    __DictionarySetRequest_one_of_decls = new WeakMap();
    cache_client._DictionarySetRequest = _DictionarySetRequest;
    class _DictionarySetResponse extends pb_1.Message {
        constructor(data){
            super();
            __DictionarySetResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DictionarySetResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _DictionarySetResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionarySetResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DictionarySetResponse.deserialize(bytes);
        }
    }
    __DictionarySetResponse_one_of_decls = new WeakMap();
    cache_client._DictionarySetResponse = _DictionarySetResponse;
    class _DictionaryIncrementRequest extends pb_1.Message {
        constructor(data){
            super();
            __DictionaryIncrementRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DictionaryIncrementRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("dictionary_name" in data && data.dictionary_name != undefined) {
                    this.dictionary_name = data.dictionary_name;
                }
                if ("field" in data && data.field != undefined) {
                    this.field = data.field;
                }
                if ("amount" in data && data.amount != undefined) {
                    this.amount = data.amount;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
                if ("refresh_ttl" in data && data.refresh_ttl != undefined) {
                    this.refresh_ttl = data.refresh_ttl;
                }
            }
        }
        get dictionary_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set dictionary_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get field() {
            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
        }
        set field(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get amount() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set amount(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 4, value);
        }
        get refresh_ttl() {
            return pb_1.Message.getFieldWithDefault(this, 5, false);
        }
        set refresh_ttl(value) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data) {
            const message = new _DictionaryIncrementRequest({});
            if (data.dictionary_name != null) {
                message.dictionary_name = data.dictionary_name;
            }
            if (data.field != null) {
                message.field = data.field;
            }
            if (data.amount != null) {
                message.amount = data.amount;
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            if (data.refresh_ttl != null) {
                message.refresh_ttl = data.refresh_ttl;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.dictionary_name != null) {
                data.dictionary_name = this.dictionary_name;
            }
            if (this.field != null) {
                data.field = this.field;
            }
            if (this.amount != null) {
                data.amount = this.amount;
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            if (this.refresh_ttl != null) {
                data.refresh_ttl = this.refresh_ttl;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.dictionary_name.length) writer.writeBytes(1, this.dictionary_name);
            if (this.field.length) writer.writeBytes(2, this.field);
            if (this.amount != 0) writer.writeInt64(3, this.amount);
            if (this.ttl_milliseconds != 0) writer.writeUint64(4, this.ttl_milliseconds);
            if (this.refresh_ttl != false) writer.writeBool(5, this.refresh_ttl);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionaryIncrementRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.dictionary_name = reader.readBytes();
                        break;
                    case 2:
                        message.field = reader.readBytes();
                        break;
                    case 3:
                        message.amount = reader.readInt64();
                        break;
                    case 4:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    case 5:
                        message.refresh_ttl = reader.readBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DictionaryIncrementRequest.deserialize(bytes);
        }
    }
    __DictionaryIncrementRequest_one_of_decls = new WeakMap();
    cache_client._DictionaryIncrementRequest = _DictionaryIncrementRequest;
    class _DictionaryIncrementResponse extends pb_1.Message {
        constructor(data){
            super();
            __DictionaryIncrementResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DictionaryIncrementResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
            }
        }
        get value() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set value(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _DictionaryIncrementResponse({});
            if (data.value != null) {
                message.value = data.value;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.value != null) {
                data.value = this.value;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.value != 0) writer.writeInt64(1, this.value);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionaryIncrementResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.value = reader.readInt64();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DictionaryIncrementResponse.deserialize(bytes);
        }
    }
    __DictionaryIncrementResponse_one_of_decls = new WeakMap();
    cache_client._DictionaryIncrementResponse = _DictionaryIncrementResponse;
    class _DictionaryDeleteRequest extends pb_1.Message {
        constructor(data){
            super();
            __DictionaryDeleteRequest_one_of_decls.set(this, [
                [
                    2,
                    3
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DictionaryDeleteRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("dictionary_name" in data && data.dictionary_name != undefined) {
                    this.dictionary_name = data.dictionary_name;
                }
                if ("some" in data && data.some != undefined) {
                    this.some = data.some;
                }
                if ("all" in data && data.all != undefined) {
                    this.all = data.all;
                }
            }
        }
        get dictionary_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set dictionary_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get some() {
            return pb_1.Message.getWrapperField(this, _DictionaryDeleteRequest.Some, 2);
        }
        set some(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __DictionaryDeleteRequest_one_of_decls, "f")[0], value);
        }
        get has_some() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get all() {
            return pb_1.Message.getWrapperField(this, _DictionaryDeleteRequest.All, 3);
        }
        set all(value) {
            pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, __DictionaryDeleteRequest_one_of_decls, "f")[0], value);
        }
        get has_all() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get delete() {
            const cases = {
                0: "none",
                2: "some",
                3: "all"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                2,
                3
            ])];
        }
        static fromObject(data) {
            const message = new _DictionaryDeleteRequest({});
            if (data.dictionary_name != null) {
                message.dictionary_name = data.dictionary_name;
            }
            if (data.some != null) {
                message.some = _DictionaryDeleteRequest.Some.fromObject(data.some);
            }
            if (data.all != null) {
                message.all = _DictionaryDeleteRequest.All.fromObject(data.all);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.dictionary_name != null) {
                data.dictionary_name = this.dictionary_name;
            }
            if (this.some != null) {
                data.some = this.some.toObject();
            }
            if (this.all != null) {
                data.all = this.all.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.dictionary_name.length) writer.writeBytes(1, this.dictionary_name);
            if (this.has_some) writer.writeMessage(2, this.some, ()=>this.some.serialize(writer));
            if (this.has_all) writer.writeMessage(3, this.all, ()=>this.all.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionaryDeleteRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.dictionary_name = reader.readBytes();
                        break;
                    case 2:
                        reader.readMessage(message.some, ()=>message.some = _DictionaryDeleteRequest.Some.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.all, ()=>message.all = _DictionaryDeleteRequest.All.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DictionaryDeleteRequest.deserialize(bytes);
        }
    }
    __DictionaryDeleteRequest_one_of_decls = new WeakMap();
    cache_client._DictionaryDeleteRequest = _DictionaryDeleteRequest;
    (function(_DictionaryDeleteRequest) {
        var _Some_one_of_decls, _All_one_of_decls;
        class Some extends pb_1.Message {
            constructor(data){
                super();
                _Some_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                    1
                ], __classPrivateFieldGet(this, _Some_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("fields" in data && data.fields != undefined) {
                        this.fields = data.fields;
                    }
                }
            }
            get fields() {
                return pb_1.Message.getFieldWithDefault(this, 1, []);
            }
            set fields(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new Some({});
                if (data.fields != null) {
                    message.fields = data.fields;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.fields != null) {
                    data.fields = this.fields;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.fields.length) writer.writeRepeatedBytes(1, this.fields);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Some();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return Some.deserialize(bytes);
            }
        }
        _Some_one_of_decls = new WeakMap();
        _DictionaryDeleteRequest.Some = Some;
        class All extends pb_1.Message {
            constructor(data){
                super();
                _All_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _All_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new All({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new All();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return All.deserialize(bytes);
            }
        }
        _All_one_of_decls = new WeakMap();
        _DictionaryDeleteRequest.All = All;
    })(_DictionaryDeleteRequest = cache_client._DictionaryDeleteRequest || (cache_client._DictionaryDeleteRequest = {}));
    class _DictionaryDeleteResponse extends pb_1.Message {
        constructor(data){
            super();
            __DictionaryDeleteResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DictionaryDeleteResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _DictionaryDeleteResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionaryDeleteResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DictionaryDeleteResponse.deserialize(bytes);
        }
    }
    __DictionaryDeleteResponse_one_of_decls = new WeakMap();
    cache_client._DictionaryDeleteResponse = _DictionaryDeleteResponse;
    class _DictionaryLengthRequest extends pb_1.Message {
        constructor(data){
            super();
            __DictionaryLengthRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DictionaryLengthRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("dictionary_name" in data && data.dictionary_name != undefined) {
                    this.dictionary_name = data.dictionary_name;
                }
            }
        }
        get dictionary_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set dictionary_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _DictionaryLengthRequest({});
            if (data.dictionary_name != null) {
                message.dictionary_name = data.dictionary_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.dictionary_name != null) {
                data.dictionary_name = this.dictionary_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.dictionary_name.length) writer.writeBytes(1, this.dictionary_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionaryLengthRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.dictionary_name = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DictionaryLengthRequest.deserialize(bytes);
        }
    }
    __DictionaryLengthRequest_one_of_decls = new WeakMap();
    cache_client._DictionaryLengthRequest = _DictionaryLengthRequest;
    class _DictionaryLengthResponse extends pb_1.Message {
        constructor(data){
            super();
            __DictionaryLengthResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DictionaryLengthResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _DictionaryLengthResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __DictionaryLengthResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _DictionaryLengthResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __DictionaryLengthResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get dictionary() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _DictionaryLengthResponse({});
            if (data.found != null) {
                message.found = _DictionaryLengthResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _DictionaryLengthResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DictionaryLengthResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _DictionaryLengthResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _DictionaryLengthResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DictionaryLengthResponse.deserialize(bytes);
        }
    }
    __DictionaryLengthResponse_one_of_decls = new WeakMap();
    cache_client._DictionaryLengthResponse = _DictionaryLengthResponse;
    (function(_DictionaryLengthResponse) {
        var __Found_one_of_decls_4, __Missing_one_of_decls_5;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_4.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls_4, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("length" in data && data.length != undefined) {
                        this.length = data.length;
                    }
                }
            }
            get length() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set length(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.length != null) {
                    message.length = data.length;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.length != null) {
                    data.length = this.length;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.length != 0) writer.writeUint32(1, this.length);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.length = reader.readUint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_4 = new WeakMap();
        _DictionaryLengthResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_5.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_5, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_5 = new WeakMap();
        _DictionaryLengthResponse._Missing = _Missing;
    })(_DictionaryLengthResponse = cache_client._DictionaryLengthResponse || (cache_client._DictionaryLengthResponse = {}));
    class _SetFetchRequest extends pb_1.Message {
        constructor(data){
            super();
            __SetFetchRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetFetchRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _SetFetchRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetFetchRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetFetchRequest.deserialize(bytes);
        }
    }
    __SetFetchRequest_one_of_decls = new WeakMap();
    cache_client._SetFetchRequest = _SetFetchRequest;
    class _SetFetchResponse extends pb_1.Message {
        constructor(data){
            super();
            __SetFetchResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetFetchResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _SetFetchResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SetFetchResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _SetFetchResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SetFetchResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get set() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _SetFetchResponse({});
            if (data.found != null) {
                message.found = _SetFetchResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _SetFetchResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetFetchResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _SetFetchResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _SetFetchResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetFetchResponse.deserialize(bytes);
        }
    }
    __SetFetchResponse_one_of_decls = new WeakMap();
    cache_client._SetFetchResponse = _SetFetchResponse;
    (function(_SetFetchResponse) {
        var __Found_one_of_decls_5, __Missing_one_of_decls_6;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_5.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                    1
                ], __classPrivateFieldGet(this, __Found_one_of_decls_5, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("elements" in data && data.elements != undefined) {
                        this.elements = data.elements;
                    }
                }
            }
            get elements() {
                return pb_1.Message.getFieldWithDefault(this, 1, []);
            }
            set elements(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.elements != null) {
                    message.elements = data.elements;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.elements != null) {
                    data.elements = this.elements;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.elements.length) writer.writeRepeatedBytes(1, this.elements);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_5 = new WeakMap();
        _SetFetchResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_6.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_6, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_6 = new WeakMap();
        _SetFetchResponse._Missing = _Missing;
    })(_SetFetchResponse = cache_client._SetFetchResponse || (cache_client._SetFetchResponse = {}));
    class _SetSampleRequest extends pb_1.Message {
        constructor(data){
            super();
            __SetSampleRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetSampleRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
                if ("limit" in data && data.limit != undefined) {
                    this.limit = data.limit;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get limit() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set limit(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _SetSampleRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            if (data.limit != null) {
                message.limit = data.limit;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            if (this.limit != null) {
                data.limit = this.limit;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (this.limit != 0) writer.writeUint64(2, this.limit);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetSampleRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    case 2:
                        message.limit = reader.readUint64();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetSampleRequest.deserialize(bytes);
        }
    }
    __SetSampleRequest_one_of_decls = new WeakMap();
    cache_client._SetSampleRequest = _SetSampleRequest;
    class _SetSampleResponse extends pb_1.Message {
        constructor(data){
            super();
            __SetSampleResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetSampleResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _SetSampleResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SetSampleResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _SetSampleResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SetSampleResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get set() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _SetSampleResponse({});
            if (data.found != null) {
                message.found = _SetSampleResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _SetSampleResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetSampleResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _SetSampleResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _SetSampleResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetSampleResponse.deserialize(bytes);
        }
    }
    __SetSampleResponse_one_of_decls = new WeakMap();
    cache_client._SetSampleResponse = _SetSampleResponse;
    (function(_SetSampleResponse) {
        var __Found_one_of_decls_6, __Missing_one_of_decls_7;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_6.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                    1
                ], __classPrivateFieldGet(this, __Found_one_of_decls_6, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("elements" in data && data.elements != undefined) {
                        this.elements = data.elements;
                    }
                }
            }
            get elements() {
                return pb_1.Message.getFieldWithDefault(this, 1, []);
            }
            set elements(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.elements != null) {
                    message.elements = data.elements;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.elements != null) {
                    data.elements = this.elements;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.elements.length) writer.writeRepeatedBytes(1, this.elements);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_6 = new WeakMap();
        _SetSampleResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_7.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_7, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_7 = new WeakMap();
        _SetSampleResponse._Missing = _Missing;
    })(_SetSampleResponse = cache_client._SetSampleResponse || (cache_client._SetSampleResponse = {}));
    class _SetUnionRequest extends pb_1.Message {
        constructor(data){
            super();
            __SetUnionRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                2
            ], __classPrivateFieldGet(this, __SetUnionRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
                if ("elements" in data && data.elements != undefined) {
                    this.elements = data.elements;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
                if ("refresh_ttl" in data && data.refresh_ttl != undefined) {
                    this.refresh_ttl = data.refresh_ttl;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get elements() {
            return pb_1.Message.getFieldWithDefault(this, 2, []);
        }
        set elements(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get refresh_ttl() {
            return pb_1.Message.getFieldWithDefault(this, 4, false);
        }
        set refresh_ttl(value) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data) {
            const message = new _SetUnionRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            if (data.elements != null) {
                message.elements = data.elements;
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            if (data.refresh_ttl != null) {
                message.refresh_ttl = data.refresh_ttl;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            if (this.elements != null) {
                data.elements = this.elements;
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            if (this.refresh_ttl != null) {
                data.refresh_ttl = this.refresh_ttl;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (this.elements.length) writer.writeRepeatedBytes(2, this.elements);
            if (this.ttl_milliseconds != 0) writer.writeUint64(3, this.ttl_milliseconds);
            if (this.refresh_ttl != false) writer.writeBool(4, this.refresh_ttl);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetUnionRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    case 2:
                        pb_1.Message.addToRepeatedField(message, 2, reader.readBytes());
                        break;
                    case 3:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    case 4:
                        message.refresh_ttl = reader.readBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetUnionRequest.deserialize(bytes);
        }
    }
    __SetUnionRequest_one_of_decls = new WeakMap();
    cache_client._SetUnionRequest = _SetUnionRequest;
    class _SetUnionResponse extends pb_1.Message {
        constructor(data){
            super();
            __SetUnionResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetUnionResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _SetUnionResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetUnionResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetUnionResponse.deserialize(bytes);
        }
    }
    __SetUnionResponse_one_of_decls = new WeakMap();
    cache_client._SetUnionResponse = _SetUnionResponse;
    class _SetDifferenceRequest extends pb_1.Message {
        constructor(data){
            super();
            __SetDifferenceRequest_one_of_decls.set(this, [
                [
                    2,
                    3
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetDifferenceRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
                if ("minuend" in data && data.minuend != undefined) {
                    this.minuend = data.minuend;
                }
                if ("subtrahend" in data && data.subtrahend != undefined) {
                    this.subtrahend = data.subtrahend;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get minuend() {
            return pb_1.Message.getWrapperField(this, _SetDifferenceRequest._Minuend, 2);
        }
        set minuend(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SetDifferenceRequest_one_of_decls, "f")[0], value);
        }
        get has_minuend() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get subtrahend() {
            return pb_1.Message.getWrapperField(this, _SetDifferenceRequest._Subtrahend, 3);
        }
        set subtrahend(value) {
            pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, __SetDifferenceRequest_one_of_decls, "f")[0], value);
        }
        get has_subtrahend() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get difference() {
            const cases = {
                0: "none",
                2: "minuend",
                3: "subtrahend"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                2,
                3
            ])];
        }
        static fromObject(data) {
            const message = new _SetDifferenceRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            if (data.minuend != null) {
                message.minuend = _SetDifferenceRequest._Minuend.fromObject(data.minuend);
            }
            if (data.subtrahend != null) {
                message.subtrahend = _SetDifferenceRequest._Subtrahend.fromObject(data.subtrahend);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            if (this.minuend != null) {
                data.minuend = this.minuend.toObject();
            }
            if (this.subtrahend != null) {
                data.subtrahend = this.subtrahend.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (this.has_minuend) writer.writeMessage(2, this.minuend, ()=>this.minuend.serialize(writer));
            if (this.has_subtrahend) writer.writeMessage(3, this.subtrahend, ()=>this.subtrahend.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetDifferenceRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    case 2:
                        reader.readMessage(message.minuend, ()=>message.minuend = _SetDifferenceRequest._Minuend.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.subtrahend, ()=>message.subtrahend = _SetDifferenceRequest._Subtrahend.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetDifferenceRequest.deserialize(bytes);
        }
    }
    __SetDifferenceRequest_one_of_decls = new WeakMap();
    cache_client._SetDifferenceRequest = _SetDifferenceRequest;
    (function(_SetDifferenceRequest) {
        var __Minuend_one_of_decls, __Subtrahend_one_of_decls;
        class _Minuend extends pb_1.Message {
            constructor(data){
                super();
                __Minuend_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                    1
                ], __classPrivateFieldGet(this, __Minuend_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("elements" in data && data.elements != undefined) {
                        this.elements = data.elements;
                    }
                }
            }
            get elements() {
                return pb_1.Message.getFieldWithDefault(this, 1, []);
            }
            set elements(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Minuend({});
                if (data.elements != null) {
                    message.elements = data.elements;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.elements != null) {
                    data.elements = this.elements;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.elements.length) writer.writeRepeatedBytes(1, this.elements);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Minuend();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Minuend.deserialize(bytes);
            }
        }
        __Minuend_one_of_decls = new WeakMap();
        _SetDifferenceRequest._Minuend = _Minuend;
        class _Subtrahend extends pb_1.Message {
            constructor(data){
                super();
                __Subtrahend_one_of_decls.set(this, [
                    [
                        1,
                        2
                    ]
                ]);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Subtrahend_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("set" in data && data.set != undefined) {
                        this.set = data.set;
                    }
                    if ("identity" in data && data.identity != undefined) {
                        this.identity = data.identity;
                    }
                }
            }
            get set() {
                return pb_1.Message.getWrapperField(this, _SetDifferenceRequest._Subtrahend._Set, 1);
            }
            set set(value) {
                pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __Subtrahend_one_of_decls, "f")[0], value);
            }
            get has_set() {
                return pb_1.Message.getField(this, 1) != null;
            }
            get identity() {
                return pb_1.Message.getWrapperField(this, _SetDifferenceRequest._Subtrahend._Identity, 2);
            }
            set identity(value) {
                pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __Subtrahend_one_of_decls, "f")[0], value);
            }
            get has_identity() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get subtrahend_set() {
                const cases = {
                    0: "none",
                    1: "set",
                    2: "identity"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    1,
                    2
                ])];
            }
            static fromObject(data) {
                const message = new _Subtrahend({});
                if (data.set != null) {
                    message.set = _SetDifferenceRequest._Subtrahend._Set.fromObject(data.set);
                }
                if (data.identity != null) {
                    message.identity = _SetDifferenceRequest._Subtrahend._Identity.fromObject(data.identity);
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.set != null) {
                    data.set = this.set.toObject();
                }
                if (this.identity != null) {
                    data.identity = this.identity.toObject();
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.has_set) writer.writeMessage(1, this.set, ()=>this.set.serialize(writer));
                if (this.has_identity) writer.writeMessage(2, this.identity, ()=>this.identity.serialize(writer));
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Subtrahend();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            reader.readMessage(message.set, ()=>message.set = _SetDifferenceRequest._Subtrahend._Set.deserialize(reader));
                            break;
                        case 2:
                            reader.readMessage(message.identity, ()=>message.identity = _SetDifferenceRequest._Subtrahend._Identity.deserialize(reader));
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Subtrahend.deserialize(bytes);
            }
        }
        __Subtrahend_one_of_decls = new WeakMap();
        _SetDifferenceRequest._Subtrahend = _Subtrahend;
        (function(_Subtrahend) {
            var __Set_one_of_decls_1, __Identity_one_of_decls;
            class _Set extends pb_1.Message {
                constructor(data){
                    super();
                    __Set_one_of_decls_1.set(this, []);
                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                        1
                    ], __classPrivateFieldGet(this, __Set_one_of_decls_1, "f"));
                    if (!Array.isArray(data) && typeof data == "object") {
                        if ("elements" in data && data.elements != undefined) {
                            this.elements = data.elements;
                        }
                    }
                }
                get elements() {
                    return pb_1.Message.getFieldWithDefault(this, 1, []);
                }
                set elements(value) {
                    pb_1.Message.setField(this, 1, value);
                }
                static fromObject(data) {
                    const message = new _Set({});
                    if (data.elements != null) {
                        message.elements = data.elements;
                    }
                    return message;
                }
                toObject() {
                    const data = {};
                    if (this.elements != null) {
                        data.elements = this.elements;
                    }
                    return data;
                }
                serialize(w) {
                    const writer = w || new pb_1.BinaryWriter();
                    if (this.elements.length) writer.writeRepeatedBytes(1, this.elements);
                    if (!w) return writer.getResultBuffer();
                }
                static deserialize(bytes) {
                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Set();
                    while(reader.nextField()){
                        if (reader.isEndGroup()) break;
                        switch(reader.getFieldNumber()){
                            case 1:
                                pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    return message;
                }
                serializeBinary() {
                    return this.serialize();
                }
                static deserializeBinary(bytes) {
                    return _Set.deserialize(bytes);
                }
            }
            __Set_one_of_decls_1 = new WeakMap();
            _Subtrahend._Set = _Set;
            class _Identity extends pb_1.Message {
                constructor(data){
                    super();
                    __Identity_one_of_decls.set(this, []);
                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Identity_one_of_decls, "f"));
                    if (!Array.isArray(data) && typeof data == "object") {}
                }
                static fromObject(data) {
                    const message = new _Identity({});
                    return message;
                }
                toObject() {
                    const data = {};
                    return data;
                }
                serialize(w) {
                    const writer = w || new pb_1.BinaryWriter();
                    if (!w) return writer.getResultBuffer();
                }
                static deserialize(bytes) {
                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Identity();
                    while(reader.nextField()){
                        if (reader.isEndGroup()) break;
                        switch(reader.getFieldNumber()){
                            default:
                                reader.skipField();
                        }
                    }
                    return message;
                }
                serializeBinary() {
                    return this.serialize();
                }
                static deserializeBinary(bytes) {
                    return _Identity.deserialize(bytes);
                }
            }
            __Identity_one_of_decls = new WeakMap();
            _Subtrahend._Identity = _Identity;
        })(_Subtrahend = _SetDifferenceRequest._Subtrahend || (_SetDifferenceRequest._Subtrahend = {}));
    })(_SetDifferenceRequest = cache_client._SetDifferenceRequest || (cache_client._SetDifferenceRequest = {}));
    class _SetDifferenceResponse extends pb_1.Message {
        constructor(data){
            super();
            __SetDifferenceResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetDifferenceResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _SetDifferenceResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SetDifferenceResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _SetDifferenceResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SetDifferenceResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get set() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _SetDifferenceResponse({});
            if (data.found != null) {
                message.found = _SetDifferenceResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _SetDifferenceResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetDifferenceResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _SetDifferenceResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _SetDifferenceResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetDifferenceResponse.deserialize(bytes);
        }
    }
    __SetDifferenceResponse_one_of_decls = new WeakMap();
    cache_client._SetDifferenceResponse = _SetDifferenceResponse;
    (function(_SetDifferenceResponse) {
        var __Found_one_of_decls_7, __Missing_one_of_decls_8;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_7.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls_7, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Found({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_7 = new WeakMap();
        _SetDifferenceResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_8.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_8, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_8 = new WeakMap();
        _SetDifferenceResponse._Missing = _Missing;
    })(_SetDifferenceResponse = cache_client._SetDifferenceResponse || (cache_client._SetDifferenceResponse = {}));
    class _SetContainsRequest extends pb_1.Message {
        constructor(data){
            super();
            __SetContainsRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                2
            ], __classPrivateFieldGet(this, __SetContainsRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
                if ("elements" in data && data.elements != undefined) {
                    this.elements = data.elements;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get elements() {
            return pb_1.Message.getFieldWithDefault(this, 2, []);
        }
        set elements(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _SetContainsRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            if (data.elements != null) {
                message.elements = data.elements;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            if (this.elements != null) {
                data.elements = this.elements;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (this.elements.length) writer.writeRepeatedBytes(2, this.elements);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetContainsRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    case 2:
                        pb_1.Message.addToRepeatedField(message, 2, reader.readBytes());
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetContainsRequest.deserialize(bytes);
        }
    }
    __SetContainsRequest_one_of_decls = new WeakMap();
    cache_client._SetContainsRequest = _SetContainsRequest;
    class _SetContainsResponse extends pb_1.Message {
        constructor(data){
            super();
            __SetContainsResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetContainsResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _SetContainsResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SetContainsResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _SetContainsResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SetContainsResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get set() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _SetContainsResponse({});
            if (data.found != null) {
                message.found = _SetContainsResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _SetContainsResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetContainsResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _SetContainsResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _SetContainsResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetContainsResponse.deserialize(bytes);
        }
    }
    __SetContainsResponse_one_of_decls = new WeakMap();
    cache_client._SetContainsResponse = _SetContainsResponse;
    (function(_SetContainsResponse) {
        var __Found_one_of_decls_8, __Missing_one_of_decls_9;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_8.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                    1
                ], __classPrivateFieldGet(this, __Found_one_of_decls_8, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("contains" in data && data.contains != undefined) {
                        this.contains = data.contains;
                    }
                }
            }
            get contains() {
                return pb_1.Message.getFieldWithDefault(this, 1, []);
            }
            set contains(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.contains != null) {
                    message.contains = data.contains;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.contains != null) {
                    data.contains = this.contains;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.contains.length) writer.writePackedBool(1, this.contains);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.contains = reader.readPackedBool();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_8 = new WeakMap();
        _SetContainsResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_9.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_9, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_9 = new WeakMap();
        _SetContainsResponse._Missing = _Missing;
    })(_SetContainsResponse = cache_client._SetContainsResponse || (cache_client._SetContainsResponse = {}));
    class _SetLengthRequest extends pb_1.Message {
        constructor(data){
            super();
            __SetLengthRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetLengthRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _SetLengthRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetLengthRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetLengthRequest.deserialize(bytes);
        }
    }
    __SetLengthRequest_one_of_decls = new WeakMap();
    cache_client._SetLengthRequest = _SetLengthRequest;
    class _SetLengthResponse extends pb_1.Message {
        constructor(data){
            super();
            __SetLengthResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetLengthResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _SetLengthResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SetLengthResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _SetLengthResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SetLengthResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get set() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _SetLengthResponse({});
            if (data.found != null) {
                message.found = _SetLengthResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _SetLengthResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetLengthResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _SetLengthResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _SetLengthResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetLengthResponse.deserialize(bytes);
        }
    }
    __SetLengthResponse_one_of_decls = new WeakMap();
    cache_client._SetLengthResponse = _SetLengthResponse;
    (function(_SetLengthResponse) {
        var __Found_one_of_decls_9, __Missing_one_of_decls_10;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_9.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls_9, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("length" in data && data.length != undefined) {
                        this.length = data.length;
                    }
                }
            }
            get length() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set length(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.length != null) {
                    message.length = data.length;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.length != null) {
                    data.length = this.length;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.length != 0) writer.writeUint32(1, this.length);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.length = reader.readUint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_9 = new WeakMap();
        _SetLengthResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_10.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_10, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_10 = new WeakMap();
        _SetLengthResponse._Missing = _Missing;
    })(_SetLengthResponse = cache_client._SetLengthResponse || (cache_client._SetLengthResponse = {}));
    class _SetPopRequest extends pb_1.Message {
        constructor(data){
            super();
            __SetPopRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetPopRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
                if ("count" in data && data.count != undefined) {
                    this.count = data.count;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get count() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set count(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _SetPopRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            if (data.count != null) {
                message.count = data.count;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            if (this.count != null) {
                data.count = this.count;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (this.count != 0) writer.writeUint32(2, this.count);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetPopRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    case 2:
                        message.count = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetPopRequest.deserialize(bytes);
        }
    }
    __SetPopRequest_one_of_decls = new WeakMap();
    cache_client._SetPopRequest = _SetPopRequest;
    class _SetPopResponse extends pb_1.Message {
        constructor(data){
            super();
            __SetPopResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SetPopResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _SetPopResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SetPopResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _SetPopResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SetPopResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get set() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _SetPopResponse({});
            if (data.found != null) {
                message.found = _SetPopResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _SetPopResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SetPopResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _SetPopResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _SetPopResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SetPopResponse.deserialize(bytes);
        }
    }
    __SetPopResponse_one_of_decls = new WeakMap();
    cache_client._SetPopResponse = _SetPopResponse;
    (function(_SetPopResponse) {
        var __Found_one_of_decls_10, __Missing_one_of_decls_11;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_10.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                    1
                ], __classPrivateFieldGet(this, __Found_one_of_decls_10, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("elements" in data && data.elements != undefined) {
                        this.elements = data.elements;
                    }
                }
            }
            get elements() {
                return pb_1.Message.getFieldWithDefault(this, 1, []);
            }
            set elements(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.elements != null) {
                    message.elements = data.elements;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.elements != null) {
                    data.elements = this.elements;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.elements.length) writer.writeRepeatedBytes(1, this.elements);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_10 = new WeakMap();
        _SetPopResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_11.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_11, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_11 = new WeakMap();
        _SetPopResponse._Missing = _Missing;
    })(_SetPopResponse = cache_client._SetPopResponse || (cache_client._SetPopResponse = {}));
    class _ListConcatenateFrontRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListConcatenateFrontRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                2
            ], __classPrivateFieldGet(this, __ListConcatenateFrontRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_name" in data && data.list_name != undefined) {
                    this.list_name = data.list_name;
                }
                if ("values" in data && data.values != undefined) {
                    this.values = data.values;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
                if ("refresh_ttl" in data && data.refresh_ttl != undefined) {
                    this.refresh_ttl = data.refresh_ttl;
                }
                if ("truncate_back_to_size" in data && data.truncate_back_to_size != undefined) {
                    this.truncate_back_to_size = data.truncate_back_to_size;
                }
            }
        }
        get list_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set list_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get values() {
            return pb_1.Message.getFieldWithDefault(this, 2, []);
        }
        set values(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get refresh_ttl() {
            return pb_1.Message.getFieldWithDefault(this, 4, false);
        }
        set refresh_ttl(value) {
            pb_1.Message.setField(this, 4, value);
        }
        get truncate_back_to_size() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0);
        }
        set truncate_back_to_size(value) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data) {
            const message = new _ListConcatenateFrontRequest({});
            if (data.list_name != null) {
                message.list_name = data.list_name;
            }
            if (data.values != null) {
                message.values = data.values;
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            if (data.refresh_ttl != null) {
                message.refresh_ttl = data.refresh_ttl;
            }
            if (data.truncate_back_to_size != null) {
                message.truncate_back_to_size = data.truncate_back_to_size;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_name != null) {
                data.list_name = this.list_name;
            }
            if (this.values != null) {
                data.values = this.values;
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            if (this.refresh_ttl != null) {
                data.refresh_ttl = this.refresh_ttl;
            }
            if (this.truncate_back_to_size != null) {
                data.truncate_back_to_size = this.truncate_back_to_size;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_name.length) writer.writeBytes(1, this.list_name);
            if (this.values.length) writer.writeRepeatedBytes(2, this.values);
            if (this.ttl_milliseconds != 0) writer.writeUint64(3, this.ttl_milliseconds);
            if (this.refresh_ttl != false) writer.writeBool(4, this.refresh_ttl);
            if (this.truncate_back_to_size != 0) writer.writeUint32(5, this.truncate_back_to_size);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListConcatenateFrontRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_name = reader.readBytes();
                        break;
                    case 2:
                        pb_1.Message.addToRepeatedField(message, 2, reader.readBytes());
                        break;
                    case 3:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    case 4:
                        message.refresh_ttl = reader.readBool();
                        break;
                    case 5:
                        message.truncate_back_to_size = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListConcatenateFrontRequest.deserialize(bytes);
        }
    }
    __ListConcatenateFrontRequest_one_of_decls = new WeakMap();
    cache_client._ListConcatenateFrontRequest = _ListConcatenateFrontRequest;
    class _ListConcatenateFrontResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListConcatenateFrontResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListConcatenateFrontResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_length" in data && data.list_length != undefined) {
                    this.list_length = data.list_length;
                }
            }
        }
        get list_length() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set list_length(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ListConcatenateFrontResponse({});
            if (data.list_length != null) {
                message.list_length = data.list_length;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_length != null) {
                data.list_length = this.list_length;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_length != 0) writer.writeUint32(1, this.list_length);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListConcatenateFrontResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_length = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListConcatenateFrontResponse.deserialize(bytes);
        }
    }
    __ListConcatenateFrontResponse_one_of_decls = new WeakMap();
    cache_client._ListConcatenateFrontResponse = _ListConcatenateFrontResponse;
    class _ListConcatenateBackRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListConcatenateBackRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                2
            ], __classPrivateFieldGet(this, __ListConcatenateBackRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_name" in data && data.list_name != undefined) {
                    this.list_name = data.list_name;
                }
                if ("values" in data && data.values != undefined) {
                    this.values = data.values;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
                if ("refresh_ttl" in data && data.refresh_ttl != undefined) {
                    this.refresh_ttl = data.refresh_ttl;
                }
                if ("truncate_front_to_size" in data && data.truncate_front_to_size != undefined) {
                    this.truncate_front_to_size = data.truncate_front_to_size;
                }
            }
        }
        get list_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set list_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get values() {
            return pb_1.Message.getFieldWithDefault(this, 2, []);
        }
        set values(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get refresh_ttl() {
            return pb_1.Message.getFieldWithDefault(this, 4, false);
        }
        set refresh_ttl(value) {
            pb_1.Message.setField(this, 4, value);
        }
        get truncate_front_to_size() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0);
        }
        set truncate_front_to_size(value) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data) {
            const message = new _ListConcatenateBackRequest({});
            if (data.list_name != null) {
                message.list_name = data.list_name;
            }
            if (data.values != null) {
                message.values = data.values;
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            if (data.refresh_ttl != null) {
                message.refresh_ttl = data.refresh_ttl;
            }
            if (data.truncate_front_to_size != null) {
                message.truncate_front_to_size = data.truncate_front_to_size;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_name != null) {
                data.list_name = this.list_name;
            }
            if (this.values != null) {
                data.values = this.values;
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            if (this.refresh_ttl != null) {
                data.refresh_ttl = this.refresh_ttl;
            }
            if (this.truncate_front_to_size != null) {
                data.truncate_front_to_size = this.truncate_front_to_size;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_name.length) writer.writeBytes(1, this.list_name);
            if (this.values.length) writer.writeRepeatedBytes(2, this.values);
            if (this.ttl_milliseconds != 0) writer.writeUint64(3, this.ttl_milliseconds);
            if (this.refresh_ttl != false) writer.writeBool(4, this.refresh_ttl);
            if (this.truncate_front_to_size != 0) writer.writeUint32(5, this.truncate_front_to_size);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListConcatenateBackRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_name = reader.readBytes();
                        break;
                    case 2:
                        pb_1.Message.addToRepeatedField(message, 2, reader.readBytes());
                        break;
                    case 3:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    case 4:
                        message.refresh_ttl = reader.readBool();
                        break;
                    case 5:
                        message.truncate_front_to_size = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListConcatenateBackRequest.deserialize(bytes);
        }
    }
    __ListConcatenateBackRequest_one_of_decls = new WeakMap();
    cache_client._ListConcatenateBackRequest = _ListConcatenateBackRequest;
    class _ListConcatenateBackResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListConcatenateBackResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListConcatenateBackResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_length" in data && data.list_length != undefined) {
                    this.list_length = data.list_length;
                }
            }
        }
        get list_length() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set list_length(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ListConcatenateBackResponse({});
            if (data.list_length != null) {
                message.list_length = data.list_length;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_length != null) {
                data.list_length = this.list_length;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_length != 0) writer.writeUint32(1, this.list_length);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListConcatenateBackResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_length = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListConcatenateBackResponse.deserialize(bytes);
        }
    }
    __ListConcatenateBackResponse_one_of_decls = new WeakMap();
    cache_client._ListConcatenateBackResponse = _ListConcatenateBackResponse;
    class _ListPushFrontRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListPushFrontRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListPushFrontRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_name" in data && data.list_name != undefined) {
                    this.list_name = data.list_name;
                }
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
                if ("refresh_ttl" in data && data.refresh_ttl != undefined) {
                    this.refresh_ttl = data.refresh_ttl;
                }
                if ("truncate_back_to_size" in data && data.truncate_back_to_size != undefined) {
                    this.truncate_back_to_size = data.truncate_back_to_size;
                }
            }
        }
        get list_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set list_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get value() {
            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
        }
        set value(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get refresh_ttl() {
            return pb_1.Message.getFieldWithDefault(this, 4, false);
        }
        set refresh_ttl(value) {
            pb_1.Message.setField(this, 4, value);
        }
        get truncate_back_to_size() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0);
        }
        set truncate_back_to_size(value) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data) {
            const message = new _ListPushFrontRequest({});
            if (data.list_name != null) {
                message.list_name = data.list_name;
            }
            if (data.value != null) {
                message.value = data.value;
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            if (data.refresh_ttl != null) {
                message.refresh_ttl = data.refresh_ttl;
            }
            if (data.truncate_back_to_size != null) {
                message.truncate_back_to_size = data.truncate_back_to_size;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_name != null) {
                data.list_name = this.list_name;
            }
            if (this.value != null) {
                data.value = this.value;
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            if (this.refresh_ttl != null) {
                data.refresh_ttl = this.refresh_ttl;
            }
            if (this.truncate_back_to_size != null) {
                data.truncate_back_to_size = this.truncate_back_to_size;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_name.length) writer.writeBytes(1, this.list_name);
            if (this.value.length) writer.writeBytes(2, this.value);
            if (this.ttl_milliseconds != 0) writer.writeUint64(3, this.ttl_milliseconds);
            if (this.refresh_ttl != false) writer.writeBool(4, this.refresh_ttl);
            if (this.truncate_back_to_size != 0) writer.writeUint32(5, this.truncate_back_to_size);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListPushFrontRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_name = reader.readBytes();
                        break;
                    case 2:
                        message.value = reader.readBytes();
                        break;
                    case 3:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    case 4:
                        message.refresh_ttl = reader.readBool();
                        break;
                    case 5:
                        message.truncate_back_to_size = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListPushFrontRequest.deserialize(bytes);
        }
    }
    __ListPushFrontRequest_one_of_decls = new WeakMap();
    cache_client._ListPushFrontRequest = _ListPushFrontRequest;
    class _ListPushFrontResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListPushFrontResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListPushFrontResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_length" in data && data.list_length != undefined) {
                    this.list_length = data.list_length;
                }
            }
        }
        get list_length() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set list_length(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ListPushFrontResponse({});
            if (data.list_length != null) {
                message.list_length = data.list_length;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_length != null) {
                data.list_length = this.list_length;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_length != 0) writer.writeUint32(1, this.list_length);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListPushFrontResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_length = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListPushFrontResponse.deserialize(bytes);
        }
    }
    __ListPushFrontResponse_one_of_decls = new WeakMap();
    cache_client._ListPushFrontResponse = _ListPushFrontResponse;
    class _ListPushBackRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListPushBackRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListPushBackRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_name" in data && data.list_name != undefined) {
                    this.list_name = data.list_name;
                }
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
                if ("refresh_ttl" in data && data.refresh_ttl != undefined) {
                    this.refresh_ttl = data.refresh_ttl;
                }
                if ("truncate_front_to_size" in data && data.truncate_front_to_size != undefined) {
                    this.truncate_front_to_size = data.truncate_front_to_size;
                }
            }
        }
        get list_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set list_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get value() {
            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
        }
        set value(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get refresh_ttl() {
            return pb_1.Message.getFieldWithDefault(this, 4, false);
        }
        set refresh_ttl(value) {
            pb_1.Message.setField(this, 4, value);
        }
        get truncate_front_to_size() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0);
        }
        set truncate_front_to_size(value) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data) {
            const message = new _ListPushBackRequest({});
            if (data.list_name != null) {
                message.list_name = data.list_name;
            }
            if (data.value != null) {
                message.value = data.value;
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            if (data.refresh_ttl != null) {
                message.refresh_ttl = data.refresh_ttl;
            }
            if (data.truncate_front_to_size != null) {
                message.truncate_front_to_size = data.truncate_front_to_size;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_name != null) {
                data.list_name = this.list_name;
            }
            if (this.value != null) {
                data.value = this.value;
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            if (this.refresh_ttl != null) {
                data.refresh_ttl = this.refresh_ttl;
            }
            if (this.truncate_front_to_size != null) {
                data.truncate_front_to_size = this.truncate_front_to_size;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_name.length) writer.writeBytes(1, this.list_name);
            if (this.value.length) writer.writeBytes(2, this.value);
            if (this.ttl_milliseconds != 0) writer.writeUint64(3, this.ttl_milliseconds);
            if (this.refresh_ttl != false) writer.writeBool(4, this.refresh_ttl);
            if (this.truncate_front_to_size != 0) writer.writeUint32(5, this.truncate_front_to_size);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListPushBackRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_name = reader.readBytes();
                        break;
                    case 2:
                        message.value = reader.readBytes();
                        break;
                    case 3:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    case 4:
                        message.refresh_ttl = reader.readBool();
                        break;
                    case 5:
                        message.truncate_front_to_size = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListPushBackRequest.deserialize(bytes);
        }
    }
    __ListPushBackRequest_one_of_decls = new WeakMap();
    cache_client._ListPushBackRequest = _ListPushBackRequest;
    class _ListPushBackResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListPushBackResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListPushBackResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_length" in data && data.list_length != undefined) {
                    this.list_length = data.list_length;
                }
            }
        }
        get list_length() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set list_length(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ListPushBackResponse({});
            if (data.list_length != null) {
                message.list_length = data.list_length;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_length != null) {
                data.list_length = this.list_length;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_length != 0) writer.writeUint32(1, this.list_length);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListPushBackResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_length = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListPushBackResponse.deserialize(bytes);
        }
    }
    __ListPushBackResponse_one_of_decls = new WeakMap();
    cache_client._ListPushBackResponse = _ListPushBackResponse;
    class _ListPopFrontRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListPopFrontRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListPopFrontRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_name" in data && data.list_name != undefined) {
                    this.list_name = data.list_name;
                }
            }
        }
        get list_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set list_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ListPopFrontRequest({});
            if (data.list_name != null) {
                message.list_name = data.list_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_name != null) {
                data.list_name = this.list_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_name.length) writer.writeBytes(1, this.list_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListPopFrontRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_name = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListPopFrontRequest.deserialize(bytes);
        }
    }
    __ListPopFrontRequest_one_of_decls = new WeakMap();
    cache_client._ListPopFrontRequest = _ListPopFrontRequest;
    class _ListPopFrontResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListPopFrontResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListPopFrontResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _ListPopFrontResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __ListPopFrontResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _ListPopFrontResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __ListPopFrontResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get list() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _ListPopFrontResponse({});
            if (data.found != null) {
                message.found = _ListPopFrontResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _ListPopFrontResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListPopFrontResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _ListPopFrontResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _ListPopFrontResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListPopFrontResponse.deserialize(bytes);
        }
    }
    __ListPopFrontResponse_one_of_decls = new WeakMap();
    cache_client._ListPopFrontResponse = _ListPopFrontResponse;
    (function(_ListPopFrontResponse) {
        var __Found_one_of_decls_11, __Missing_one_of_decls_12;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_11.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls_11, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("front" in data && data.front != undefined) {
                        this.front = data.front;
                    }
                    if ("list_length" in data && data.list_length != undefined) {
                        this.list_length = data.list_length;
                    }
                }
            }
            get front() {
                return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
            }
            set front(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get list_length() {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            }
            set list_length(value) {
                pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.front != null) {
                    message.front = data.front;
                }
                if (data.list_length != null) {
                    message.list_length = data.list_length;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.front != null) {
                    data.front = this.front;
                }
                if (this.list_length != null) {
                    data.list_length = this.list_length;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.front.length) writer.writeBytes(1, this.front);
                if (this.list_length != 0) writer.writeUint32(2, this.list_length);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.front = reader.readBytes();
                            break;
                        case 2:
                            message.list_length = reader.readUint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_11 = new WeakMap();
        _ListPopFrontResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_12.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_12, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_12 = new WeakMap();
        _ListPopFrontResponse._Missing = _Missing;
    })(_ListPopFrontResponse = cache_client._ListPopFrontResponse || (cache_client._ListPopFrontResponse = {}));
    class _ListPopBackRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListPopBackRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListPopBackRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_name" in data && data.list_name != undefined) {
                    this.list_name = data.list_name;
                }
            }
        }
        get list_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set list_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ListPopBackRequest({});
            if (data.list_name != null) {
                message.list_name = data.list_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_name != null) {
                data.list_name = this.list_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_name.length) writer.writeBytes(1, this.list_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListPopBackRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_name = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListPopBackRequest.deserialize(bytes);
        }
    }
    __ListPopBackRequest_one_of_decls = new WeakMap();
    cache_client._ListPopBackRequest = _ListPopBackRequest;
    class _ListPopBackResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListPopBackResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListPopBackResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _ListPopBackResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __ListPopBackResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _ListPopBackResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __ListPopBackResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get list() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _ListPopBackResponse({});
            if (data.found != null) {
                message.found = _ListPopBackResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _ListPopBackResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListPopBackResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _ListPopBackResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _ListPopBackResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListPopBackResponse.deserialize(bytes);
        }
    }
    __ListPopBackResponse_one_of_decls = new WeakMap();
    cache_client._ListPopBackResponse = _ListPopBackResponse;
    (function(_ListPopBackResponse) {
        var __Found_one_of_decls_12, __Missing_one_of_decls_13;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_12.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls_12, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("back" in data && data.back != undefined) {
                        this.back = data.back;
                    }
                    if ("list_length" in data && data.list_length != undefined) {
                        this.list_length = data.list_length;
                    }
                }
            }
            get back() {
                return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
            }
            set back(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get list_length() {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            }
            set list_length(value) {
                pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.back != null) {
                    message.back = data.back;
                }
                if (data.list_length != null) {
                    message.list_length = data.list_length;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.back != null) {
                    data.back = this.back;
                }
                if (this.list_length != null) {
                    data.list_length = this.list_length;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.back.length) writer.writeBytes(1, this.back);
                if (this.list_length != 0) writer.writeUint32(2, this.list_length);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.back = reader.readBytes();
                            break;
                        case 2:
                            message.list_length = reader.readUint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_12 = new WeakMap();
        _ListPopBackResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_13.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_13, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_13 = new WeakMap();
        _ListPopBackResponse._Missing = _Missing;
    })(_ListPopBackResponse = cache_client._ListPopBackResponse || (cache_client._ListPopBackResponse = {}));
    class _ListRange extends pb_1.Message {
        constructor(data){
            super();
            __ListRange_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListRange_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("begin_index" in data && data.begin_index != undefined) {
                    this.begin_index = data.begin_index;
                }
                if ("count" in data && data.count != undefined) {
                    this.count = data.count;
                }
            }
        }
        get begin_index() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set begin_index(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get count() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set count(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _ListRange({});
            if (data.begin_index != null) {
                message.begin_index = data.begin_index;
            }
            if (data.count != null) {
                message.count = data.count;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.begin_index != null) {
                data.begin_index = this.begin_index;
            }
            if (this.count != null) {
                data.count = this.count;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.begin_index != 0) writer.writeUint32(1, this.begin_index);
            if (this.count != 0) writer.writeUint32(2, this.count);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListRange();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.begin_index = reader.readUint32();
                        break;
                    case 2:
                        message.count = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListRange.deserialize(bytes);
        }
    }
    __ListRange_one_of_decls = new WeakMap();
    cache_client._ListRange = _ListRange;
    class _ListEraseRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListEraseRequest_one_of_decls.set(this, [
                [
                    2,
                    3
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListEraseRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_name" in data && data.list_name != undefined) {
                    this.list_name = data.list_name;
                }
                if ("some" in data && data.some != undefined) {
                    this.some = data.some;
                }
                if ("all" in data && data.all != undefined) {
                    this.all = data.all;
                }
            }
        }
        get list_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set list_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get some() {
            return pb_1.Message.getWrapperField(this, _ListEraseRequest._ListRanges, 2);
        }
        set some(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __ListEraseRequest_one_of_decls, "f")[0], value);
        }
        get has_some() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get all() {
            return pb_1.Message.getWrapperField(this, _ListEraseRequest._All, 3);
        }
        set all(value) {
            pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, __ListEraseRequest_one_of_decls, "f")[0], value);
        }
        get has_all() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get erase() {
            const cases = {
                0: "none",
                2: "some",
                3: "all"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                2,
                3
            ])];
        }
        static fromObject(data) {
            const message = new _ListEraseRequest({});
            if (data.list_name != null) {
                message.list_name = data.list_name;
            }
            if (data.some != null) {
                message.some = _ListEraseRequest._ListRanges.fromObject(data.some);
            }
            if (data.all != null) {
                message.all = _ListEraseRequest._All.fromObject(data.all);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_name != null) {
                data.list_name = this.list_name;
            }
            if (this.some != null) {
                data.some = this.some.toObject();
            }
            if (this.all != null) {
                data.all = this.all.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_name.length) writer.writeBytes(1, this.list_name);
            if (this.has_some) writer.writeMessage(2, this.some, ()=>this.some.serialize(writer));
            if (this.has_all) writer.writeMessage(3, this.all, ()=>this.all.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListEraseRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_name = reader.readBytes();
                        break;
                    case 2:
                        reader.readMessage(message.some, ()=>message.some = _ListEraseRequest._ListRanges.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.all, ()=>message.all = _ListEraseRequest._All.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListEraseRequest.deserialize(bytes);
        }
    }
    __ListEraseRequest_one_of_decls = new WeakMap();
    cache_client._ListEraseRequest = _ListEraseRequest;
    (function(_ListEraseRequest) {
        var __All_one_of_decls, __ListRanges_one_of_decls;
        class _All extends pb_1.Message {
            constructor(data){
                super();
                __All_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __All_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _All({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _All();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _All.deserialize(bytes);
            }
        }
        __All_one_of_decls = new WeakMap();
        _ListEraseRequest._All = _All;
        class _ListRanges extends pb_1.Message {
            constructor(data){
                super();
                __ListRanges_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                    1
                ], __classPrivateFieldGet(this, __ListRanges_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("ranges" in data && data.ranges != undefined) {
                        this.ranges = data.ranges;
                    }
                }
            }
            get ranges() {
                return pb_1.Message.getRepeatedWrapperField(this, _ListRange, 1);
            }
            set ranges(value) {
                pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _ListRanges({});
                if (data.ranges != null) {
                    message.ranges = data.ranges.map((item)=>_ListRange.fromObject(item));
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.ranges != null) {
                    data.ranges = this.ranges.map((item)=>item.toObject());
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.ranges.length) writer.writeRepeatedMessage(1, this.ranges, (item)=>item.serialize(writer));
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListRanges();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            reader.readMessage(message.ranges, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _ListRange.deserialize(reader), _ListRange));
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _ListRanges.deserialize(bytes);
            }
        }
        __ListRanges_one_of_decls = new WeakMap();
        _ListEraseRequest._ListRanges = _ListRanges;
    })(_ListEraseRequest = cache_client._ListEraseRequest || (cache_client._ListEraseRequest = {}));
    class _ListEraseResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListEraseResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListEraseResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _ListEraseResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __ListEraseResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _ListEraseResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __ListEraseResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get list() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _ListEraseResponse({});
            if (data.found != null) {
                message.found = _ListEraseResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _ListEraseResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListEraseResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _ListEraseResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _ListEraseResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListEraseResponse.deserialize(bytes);
        }
    }
    __ListEraseResponse_one_of_decls = new WeakMap();
    cache_client._ListEraseResponse = _ListEraseResponse;
    (function(_ListEraseResponse) {
        var __Found_one_of_decls_13, __Missing_one_of_decls_14;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_13.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls_13, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("list_length" in data && data.list_length != undefined) {
                        this.list_length = data.list_length;
                    }
                }
            }
            get list_length() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set list_length(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.list_length != null) {
                    message.list_length = data.list_length;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.list_length != null) {
                    data.list_length = this.list_length;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.list_length != 0) writer.writeUint32(1, this.list_length);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.list_length = reader.readUint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_13 = new WeakMap();
        _ListEraseResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_14.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_14, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_14 = new WeakMap();
        _ListEraseResponse._Missing = _Missing;
    })(_ListEraseResponse = cache_client._ListEraseResponse || (cache_client._ListEraseResponse = {}));
    class _ListRemoveRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListRemoveRequest_one_of_decls.set(this, [
                [
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListRemoveRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_name" in data && data.list_name != undefined) {
                    this.list_name = data.list_name;
                }
                if ("all_elements_with_value" in data && data.all_elements_with_value != undefined) {
                    this.all_elements_with_value = data.all_elements_with_value;
                }
            }
        }
        get list_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set list_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get all_elements_with_value() {
            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
        }
        set all_elements_with_value(value) {
            pb_1.Message.setOneofField(this, 2, __classPrivateFieldGet(this, __ListRemoveRequest_one_of_decls, "f")[0], value);
        }
        get has_all_elements_with_value() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get remove() {
            const cases = {
                0: "none",
                2: "all_elements_with_value"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                2
            ])];
        }
        static fromObject(data) {
            const message = new _ListRemoveRequest({});
            if (data.list_name != null) {
                message.list_name = data.list_name;
            }
            if (data.all_elements_with_value != null) {
                message.all_elements_with_value = data.all_elements_with_value;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_name != null) {
                data.list_name = this.list_name;
            }
            if (this.all_elements_with_value != null) {
                data.all_elements_with_value = this.all_elements_with_value;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_name.length) writer.writeBytes(1, this.list_name);
            if (this.has_all_elements_with_value) writer.writeBytes(2, this.all_elements_with_value);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListRemoveRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_name = reader.readBytes();
                        break;
                    case 2:
                        message.all_elements_with_value = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListRemoveRequest.deserialize(bytes);
        }
    }
    __ListRemoveRequest_one_of_decls = new WeakMap();
    cache_client._ListRemoveRequest = _ListRemoveRequest;
    class _ListRemoveResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListRemoveResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListRemoveResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _ListRemoveResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __ListRemoveResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _ListRemoveResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __ListRemoveResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get list() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _ListRemoveResponse({});
            if (data.found != null) {
                message.found = _ListRemoveResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _ListRemoveResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListRemoveResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _ListRemoveResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _ListRemoveResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListRemoveResponse.deserialize(bytes);
        }
    }
    __ListRemoveResponse_one_of_decls = new WeakMap();
    cache_client._ListRemoveResponse = _ListRemoveResponse;
    (function(_ListRemoveResponse) {
        var __Found_one_of_decls_14, __Missing_one_of_decls_15;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_14.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls_14, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("list_length" in data && data.list_length != undefined) {
                        this.list_length = data.list_length;
                    }
                }
            }
            get list_length() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set list_length(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.list_length != null) {
                    message.list_length = data.list_length;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.list_length != null) {
                    data.list_length = this.list_length;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.list_length != 0) writer.writeUint32(1, this.list_length);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.list_length = reader.readUint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_14 = new WeakMap();
        _ListRemoveResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_15.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_15, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_15 = new WeakMap();
        _ListRemoveResponse._Missing = _Missing;
    })(_ListRemoveResponse = cache_client._ListRemoveResponse || (cache_client._ListRemoveResponse = {}));
    class _ListFetchRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListFetchRequest_one_of_decls.set(this, [
                [
                    2,
                    3
                ],
                [
                    4,
                    5
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListFetchRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_name" in data && data.list_name != undefined) {
                    this.list_name = data.list_name;
                }
                if ("unbounded_start" in data && data.unbounded_start != undefined) {
                    this.unbounded_start = data.unbounded_start;
                }
                if ("inclusive_start" in data && data.inclusive_start != undefined) {
                    this.inclusive_start = data.inclusive_start;
                }
                if ("unbounded_end" in data && data.unbounded_end != undefined) {
                    this.unbounded_end = data.unbounded_end;
                }
                if ("exclusive_end" in data && data.exclusive_end != undefined) {
                    this.exclusive_end = data.exclusive_end;
                }
            }
        }
        get list_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set list_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get unbounded_start() {
            return pb_1.Message.getWrapperField(this, dependency_1.common._Unbounded, 2);
        }
        set unbounded_start(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __ListFetchRequest_one_of_decls, "f")[0], value);
        }
        get has_unbounded_start() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get inclusive_start() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set inclusive_start(value) {
            pb_1.Message.setOneofField(this, 3, __classPrivateFieldGet(this, __ListFetchRequest_one_of_decls, "f")[0], value);
        }
        get has_inclusive_start() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get unbounded_end() {
            return pb_1.Message.getWrapperField(this, dependency_1.common._Unbounded, 4);
        }
        set unbounded_end(value) {
            pb_1.Message.setOneofWrapperField(this, 4, __classPrivateFieldGet(this, __ListFetchRequest_one_of_decls, "f")[1], value);
        }
        get has_unbounded_end() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get exclusive_end() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0);
        }
        set exclusive_end(value) {
            pb_1.Message.setOneofField(this, 5, __classPrivateFieldGet(this, __ListFetchRequest_one_of_decls, "f")[1], value);
        }
        get has_exclusive_end() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get start_index() {
            const cases = {
                0: "none",
                2: "unbounded_start",
                3: "inclusive_start"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                2,
                3
            ])];
        }
        get end_index() {
            const cases = {
                0: "none",
                4: "unbounded_end",
                5: "exclusive_end"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                4,
                5
            ])];
        }
        static fromObject(data) {
            const message = new _ListFetchRequest({});
            if (data.list_name != null) {
                message.list_name = data.list_name;
            }
            if (data.unbounded_start != null) {
                message.unbounded_start = dependency_1.common._Unbounded.fromObject(data.unbounded_start);
            }
            if (data.inclusive_start != null) {
                message.inclusive_start = data.inclusive_start;
            }
            if (data.unbounded_end != null) {
                message.unbounded_end = dependency_1.common._Unbounded.fromObject(data.unbounded_end);
            }
            if (data.exclusive_end != null) {
                message.exclusive_end = data.exclusive_end;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_name != null) {
                data.list_name = this.list_name;
            }
            if (this.unbounded_start != null) {
                data.unbounded_start = this.unbounded_start.toObject();
            }
            if (this.inclusive_start != null) {
                data.inclusive_start = this.inclusive_start;
            }
            if (this.unbounded_end != null) {
                data.unbounded_end = this.unbounded_end.toObject();
            }
            if (this.exclusive_end != null) {
                data.exclusive_end = this.exclusive_end;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_name.length) writer.writeBytes(1, this.list_name);
            if (this.has_unbounded_start) writer.writeMessage(2, this.unbounded_start, ()=>this.unbounded_start.serialize(writer));
            if (this.has_inclusive_start) writer.writeSint32(3, this.inclusive_start);
            if (this.has_unbounded_end) writer.writeMessage(4, this.unbounded_end, ()=>this.unbounded_end.serialize(writer));
            if (this.has_exclusive_end) writer.writeSint32(5, this.exclusive_end);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListFetchRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_name = reader.readBytes();
                        break;
                    case 2:
                        reader.readMessage(message.unbounded_start, ()=>message.unbounded_start = dependency_1.common._Unbounded.deserialize(reader));
                        break;
                    case 3:
                        message.inclusive_start = reader.readSint32();
                        break;
                    case 4:
                        reader.readMessage(message.unbounded_end, ()=>message.unbounded_end = dependency_1.common._Unbounded.deserialize(reader));
                        break;
                    case 5:
                        message.exclusive_end = reader.readSint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListFetchRequest.deserialize(bytes);
        }
    }
    __ListFetchRequest_one_of_decls = new WeakMap();
    cache_client._ListFetchRequest = _ListFetchRequest;
    class _ListRetainRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListRetainRequest_one_of_decls.set(this, [
                [
                    2,
                    3
                ],
                [
                    4,
                    5
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListRetainRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_name" in data && data.list_name != undefined) {
                    this.list_name = data.list_name;
                }
                if ("unbounded_start" in data && data.unbounded_start != undefined) {
                    this.unbounded_start = data.unbounded_start;
                }
                if ("inclusive_start" in data && data.inclusive_start != undefined) {
                    this.inclusive_start = data.inclusive_start;
                }
                if ("unbounded_end" in data && data.unbounded_end != undefined) {
                    this.unbounded_end = data.unbounded_end;
                }
                if ("exclusive_end" in data && data.exclusive_end != undefined) {
                    this.exclusive_end = data.exclusive_end;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
                if ("refresh_ttl" in data && data.refresh_ttl != undefined) {
                    this.refresh_ttl = data.refresh_ttl;
                }
            }
        }
        get list_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set list_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get unbounded_start() {
            return pb_1.Message.getWrapperField(this, dependency_1.common._Unbounded, 2);
        }
        set unbounded_start(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __ListRetainRequest_one_of_decls, "f")[0], value);
        }
        get has_unbounded_start() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get inclusive_start() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set inclusive_start(value) {
            pb_1.Message.setOneofField(this, 3, __classPrivateFieldGet(this, __ListRetainRequest_one_of_decls, "f")[0], value);
        }
        get has_inclusive_start() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get unbounded_end() {
            return pb_1.Message.getWrapperField(this, dependency_1.common._Unbounded, 4);
        }
        set unbounded_end(value) {
            pb_1.Message.setOneofWrapperField(this, 4, __classPrivateFieldGet(this, __ListRetainRequest_one_of_decls, "f")[1], value);
        }
        get has_unbounded_end() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get exclusive_end() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0);
        }
        set exclusive_end(value) {
            pb_1.Message.setOneofField(this, 5, __classPrivateFieldGet(this, __ListRetainRequest_one_of_decls, "f")[1], value);
        }
        get has_exclusive_end() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 6, value);
        }
        get refresh_ttl() {
            return pb_1.Message.getFieldWithDefault(this, 7, false);
        }
        set refresh_ttl(value) {
            pb_1.Message.setField(this, 7, value);
        }
        get start_index() {
            const cases = {
                0: "none",
                2: "unbounded_start",
                3: "inclusive_start"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                2,
                3
            ])];
        }
        get end_index() {
            const cases = {
                0: "none",
                4: "unbounded_end",
                5: "exclusive_end"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                4,
                5
            ])];
        }
        static fromObject(data) {
            const message = new _ListRetainRequest({});
            if (data.list_name != null) {
                message.list_name = data.list_name;
            }
            if (data.unbounded_start != null) {
                message.unbounded_start = dependency_1.common._Unbounded.fromObject(data.unbounded_start);
            }
            if (data.inclusive_start != null) {
                message.inclusive_start = data.inclusive_start;
            }
            if (data.unbounded_end != null) {
                message.unbounded_end = dependency_1.common._Unbounded.fromObject(data.unbounded_end);
            }
            if (data.exclusive_end != null) {
                message.exclusive_end = data.exclusive_end;
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            if (data.refresh_ttl != null) {
                message.refresh_ttl = data.refresh_ttl;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_name != null) {
                data.list_name = this.list_name;
            }
            if (this.unbounded_start != null) {
                data.unbounded_start = this.unbounded_start.toObject();
            }
            if (this.inclusive_start != null) {
                data.inclusive_start = this.inclusive_start;
            }
            if (this.unbounded_end != null) {
                data.unbounded_end = this.unbounded_end.toObject();
            }
            if (this.exclusive_end != null) {
                data.exclusive_end = this.exclusive_end;
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            if (this.refresh_ttl != null) {
                data.refresh_ttl = this.refresh_ttl;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_name.length) writer.writeBytes(1, this.list_name);
            if (this.has_unbounded_start) writer.writeMessage(2, this.unbounded_start, ()=>this.unbounded_start.serialize(writer));
            if (this.has_inclusive_start) writer.writeSint32(3, this.inclusive_start);
            if (this.has_unbounded_end) writer.writeMessage(4, this.unbounded_end, ()=>this.unbounded_end.serialize(writer));
            if (this.has_exclusive_end) writer.writeSint32(5, this.exclusive_end);
            if (this.ttl_milliseconds != 0) writer.writeUint64(6, this.ttl_milliseconds);
            if (this.refresh_ttl != false) writer.writeBool(7, this.refresh_ttl);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListRetainRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_name = reader.readBytes();
                        break;
                    case 2:
                        reader.readMessage(message.unbounded_start, ()=>message.unbounded_start = dependency_1.common._Unbounded.deserialize(reader));
                        break;
                    case 3:
                        message.inclusive_start = reader.readSint32();
                        break;
                    case 4:
                        reader.readMessage(message.unbounded_end, ()=>message.unbounded_end = dependency_1.common._Unbounded.deserialize(reader));
                        break;
                    case 5:
                        message.exclusive_end = reader.readSint32();
                        break;
                    case 6:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    case 7:
                        message.refresh_ttl = reader.readBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListRetainRequest.deserialize(bytes);
        }
    }
    __ListRetainRequest_one_of_decls = new WeakMap();
    cache_client._ListRetainRequest = _ListRetainRequest;
    class _ListRetainResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListRetainResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListRetainResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _ListRetainResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __ListRetainResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _ListRetainResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __ListRetainResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get list() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _ListRetainResponse({});
            if (data.found != null) {
                message.found = _ListRetainResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _ListRetainResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListRetainResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _ListRetainResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _ListRetainResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListRetainResponse.deserialize(bytes);
        }
    }
    __ListRetainResponse_one_of_decls = new WeakMap();
    cache_client._ListRetainResponse = _ListRetainResponse;
    (function(_ListRetainResponse) {
        var __Found_one_of_decls_15, __Missing_one_of_decls_16;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_15.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls_15, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("list_length" in data && data.list_length != undefined) {
                        this.list_length = data.list_length;
                    }
                }
            }
            get list_length() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set list_length(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.list_length != null) {
                    message.list_length = data.list_length;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.list_length != null) {
                    data.list_length = this.list_length;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.list_length != 0) writer.writeUint32(1, this.list_length);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.list_length = reader.readUint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_15 = new WeakMap();
        _ListRetainResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_16.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_16, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_16 = new WeakMap();
        _ListRetainResponse._Missing = _Missing;
    })(_ListRetainResponse = cache_client._ListRetainResponse || (cache_client._ListRetainResponse = {}));
    class _ListFetchResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListFetchResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListFetchResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _ListFetchResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __ListFetchResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _ListFetchResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __ListFetchResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get list() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _ListFetchResponse({});
            if (data.found != null) {
                message.found = _ListFetchResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _ListFetchResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListFetchResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _ListFetchResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _ListFetchResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListFetchResponse.deserialize(bytes);
        }
    }
    __ListFetchResponse_one_of_decls = new WeakMap();
    cache_client._ListFetchResponse = _ListFetchResponse;
    (function(_ListFetchResponse) {
        var __Found_one_of_decls_16, __Missing_one_of_decls_17;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_16.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                    1
                ], __classPrivateFieldGet(this, __Found_one_of_decls_16, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("values" in data && data.values != undefined) {
                        this.values = data.values;
                    }
                }
            }
            get values() {
                return pb_1.Message.getFieldWithDefault(this, 1, []);
            }
            set values(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.values != null) {
                    message.values = data.values;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.values != null) {
                    data.values = this.values;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.values.length) writer.writeRepeatedBytes(1, this.values);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_16 = new WeakMap();
        _ListFetchResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_17.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_17, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_17 = new WeakMap();
        _ListFetchResponse._Missing = _Missing;
    })(_ListFetchResponse = cache_client._ListFetchResponse || (cache_client._ListFetchResponse = {}));
    class _ListLengthRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListLengthRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListLengthRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("list_name" in data && data.list_name != undefined) {
                    this.list_name = data.list_name;
                }
            }
        }
        get list_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set list_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ListLengthRequest({});
            if (data.list_name != null) {
                message.list_name = data.list_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.list_name != null) {
                data.list_name = this.list_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.list_name.length) writer.writeBytes(1, this.list_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListLengthRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.list_name = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListLengthRequest.deserialize(bytes);
        }
    }
    __ListLengthRequest_one_of_decls = new WeakMap();
    cache_client._ListLengthRequest = _ListLengthRequest;
    class _ListLengthResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListLengthResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListLengthResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _ListLengthResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __ListLengthResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _ListLengthResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __ListLengthResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get list() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _ListLengthResponse({});
            if (data.found != null) {
                message.found = _ListLengthResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _ListLengthResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListLengthResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _ListLengthResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _ListLengthResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListLengthResponse.deserialize(bytes);
        }
    }
    __ListLengthResponse_one_of_decls = new WeakMap();
    cache_client._ListLengthResponse = _ListLengthResponse;
    (function(_ListLengthResponse) {
        var __Found_one_of_decls_17, __Missing_one_of_decls_18;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_17.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls_17, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("length" in data && data.length != undefined) {
                        this.length = data.length;
                    }
                }
            }
            get length() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set length(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.length != null) {
                    message.length = data.length;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.length != null) {
                    data.length = this.length;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.length != 0) writer.writeUint32(1, this.length);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.length = reader.readUint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_17 = new WeakMap();
        _ListLengthResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_18.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_18, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_18 = new WeakMap();
        _ListLengthResponse._Missing = _Missing;
    })(_ListLengthResponse = cache_client._ListLengthResponse || (cache_client._ListLengthResponse = {}));
    class _SortedSetElement extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetElement_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetElement_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
                if ("score" in data && data.score != undefined) {
                    this.score = data.score;
                }
            }
        }
        get value() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set value(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get score() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set score(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _SortedSetElement({});
            if (data.value != null) {
                message.value = data.value;
            }
            if (data.score != null) {
                message.score = data.score;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.value != null) {
                data.value = this.value;
            }
            if (this.score != null) {
                data.score = this.score;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.value.length) writer.writeBytes(1, this.value);
            if (this.score != 0) writer.writeDouble(2, this.score);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetElement();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.value = reader.readBytes();
                        break;
                    case 2:
                        message.score = reader.readDouble();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetElement.deserialize(bytes);
        }
    }
    __SortedSetElement_one_of_decls = new WeakMap();
    cache_client._SortedSetElement = _SortedSetElement;
    class _SortedSetPutRequest extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetPutRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                2
            ], __classPrivateFieldGet(this, __SortedSetPutRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
                if ("elements" in data && data.elements != undefined) {
                    this.elements = data.elements;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
                if ("refresh_ttl" in data && data.refresh_ttl != undefined) {
                    this.refresh_ttl = data.refresh_ttl;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get elements() {
            return pb_1.Message.getRepeatedWrapperField(this, _SortedSetElement, 2);
        }
        set elements(value) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get refresh_ttl() {
            return pb_1.Message.getFieldWithDefault(this, 4, false);
        }
        set refresh_ttl(value) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data) {
            const message = new _SortedSetPutRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            if (data.elements != null) {
                message.elements = data.elements.map((item)=>_SortedSetElement.fromObject(item));
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            if (data.refresh_ttl != null) {
                message.refresh_ttl = data.refresh_ttl;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            if (this.elements != null) {
                data.elements = this.elements.map((item)=>item.toObject());
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            if (this.refresh_ttl != null) {
                data.refresh_ttl = this.refresh_ttl;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (this.elements.length) writer.writeRepeatedMessage(2, this.elements, (item)=>item.serialize(writer));
            if (this.ttl_milliseconds != 0) writer.writeUint64(3, this.ttl_milliseconds);
            if (this.refresh_ttl != false) writer.writeBool(4, this.refresh_ttl);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetPutRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    case 2:
                        reader.readMessage(message.elements, ()=>pb_1.Message.addToRepeatedWrapperField(message, 2, _SortedSetElement.deserialize(reader), _SortedSetElement));
                        break;
                    case 3:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    case 4:
                        message.refresh_ttl = reader.readBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetPutRequest.deserialize(bytes);
        }
    }
    __SortedSetPutRequest_one_of_decls = new WeakMap();
    cache_client._SortedSetPutRequest = _SortedSetPutRequest;
    class _SortedSetPutResponse extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetPutResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetPutResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _SortedSetPutResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetPutResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetPutResponse.deserialize(bytes);
        }
    }
    __SortedSetPutResponse_one_of_decls = new WeakMap();
    cache_client._SortedSetPutResponse = _SortedSetPutResponse;
    class _SortedSetFetchRequest extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetFetchRequest_one_of_decls.set(this, [
                [
                    4,
                    5
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetFetchRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
                if ("order" in data && data.order != undefined) {
                    this.order = data.order;
                }
                if ("with_scores" in data && data.with_scores != undefined) {
                    this.with_scores = data.with_scores;
                }
                if ("by_index" in data && data.by_index != undefined) {
                    this.by_index = data.by_index;
                }
                if ("by_score" in data && data.by_score != undefined) {
                    this.by_score = data.by_score;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get order() {
            return pb_1.Message.getFieldWithDefault(this, 2, _SortedSetFetchRequest.Order.ASCENDING);
        }
        set order(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get with_scores() {
            return pb_1.Message.getFieldWithDefault(this, 3, false);
        }
        set with_scores(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get by_index() {
            return pb_1.Message.getWrapperField(this, _SortedSetFetchRequest._ByIndex, 4);
        }
        set by_index(value) {
            pb_1.Message.setOneofWrapperField(this, 4, __classPrivateFieldGet(this, __SortedSetFetchRequest_one_of_decls, "f")[0], value);
        }
        get has_by_index() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get by_score() {
            return pb_1.Message.getWrapperField(this, _SortedSetFetchRequest._ByScore, 5);
        }
        set by_score(value) {
            pb_1.Message.setOneofWrapperField(this, 5, __classPrivateFieldGet(this, __SortedSetFetchRequest_one_of_decls, "f")[0], value);
        }
        get has_by_score() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get range() {
            const cases = {
                0: "none",
                4: "by_index",
                5: "by_score"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                4,
                5
            ])];
        }
        static fromObject(data) {
            const message = new _SortedSetFetchRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            if (data.order != null) {
                message.order = data.order;
            }
            if (data.with_scores != null) {
                message.with_scores = data.with_scores;
            }
            if (data.by_index != null) {
                message.by_index = _SortedSetFetchRequest._ByIndex.fromObject(data.by_index);
            }
            if (data.by_score != null) {
                message.by_score = _SortedSetFetchRequest._ByScore.fromObject(data.by_score);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            if (this.order != null) {
                data.order = this.order;
            }
            if (this.with_scores != null) {
                data.with_scores = this.with_scores;
            }
            if (this.by_index != null) {
                data.by_index = this.by_index.toObject();
            }
            if (this.by_score != null) {
                data.by_score = this.by_score.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (this.order != _SortedSetFetchRequest.Order.ASCENDING) writer.writeEnum(2, this.order);
            if (this.with_scores != false) writer.writeBool(3, this.with_scores);
            if (this.has_by_index) writer.writeMessage(4, this.by_index, ()=>this.by_index.serialize(writer));
            if (this.has_by_score) writer.writeMessage(5, this.by_score, ()=>this.by_score.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetFetchRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    case 2:
                        message.order = reader.readEnum();
                        break;
                    case 3:
                        message.with_scores = reader.readBool();
                        break;
                    case 4:
                        reader.readMessage(message.by_index, ()=>message.by_index = _SortedSetFetchRequest._ByIndex.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.by_score, ()=>message.by_score = _SortedSetFetchRequest._ByScore.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetFetchRequest.deserialize(bytes);
        }
    }
    __SortedSetFetchRequest_one_of_decls = new WeakMap();
    cache_client._SortedSetFetchRequest = _SortedSetFetchRequest;
    (function(_SortedSetFetchRequest) {
        var __ByIndex_one_of_decls, __ByScore_one_of_decls;
        let Order;
        (function(Order) {
            Order[Order["ASCENDING"] = 0] = "ASCENDING";
            Order[Order["DESCENDING"] = 1] = "DESCENDING";
        })(Order = _SortedSetFetchRequest.Order || (_SortedSetFetchRequest.Order = {}));
        class _ByIndex extends pb_1.Message {
            constructor(data){
                super();
                __ByIndex_one_of_decls.set(this, [
                    [
                        1,
                        2
                    ],
                    [
                        3,
                        4
                    ]
                ]);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ByIndex_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("unbounded_start" in data && data.unbounded_start != undefined) {
                        this.unbounded_start = data.unbounded_start;
                    }
                    if ("inclusive_start_index" in data && data.inclusive_start_index != undefined) {
                        this.inclusive_start_index = data.inclusive_start_index;
                    }
                    if ("unbounded_end" in data && data.unbounded_end != undefined) {
                        this.unbounded_end = data.unbounded_end;
                    }
                    if ("exclusive_end_index" in data && data.exclusive_end_index != undefined) {
                        this.exclusive_end_index = data.exclusive_end_index;
                    }
                }
            }
            get unbounded_start() {
                return pb_1.Message.getWrapperField(this, dependency_1.common._Unbounded, 1);
            }
            set unbounded_start(value) {
                pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __ByIndex_one_of_decls, "f")[0], value);
            }
            get has_unbounded_start() {
                return pb_1.Message.getField(this, 1) != null;
            }
            get inclusive_start_index() {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            }
            set inclusive_start_index(value) {
                pb_1.Message.setOneofField(this, 2, __classPrivateFieldGet(this, __ByIndex_one_of_decls, "f")[0], value);
            }
            get has_inclusive_start_index() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get unbounded_end() {
                return pb_1.Message.getWrapperField(this, dependency_1.common._Unbounded, 3);
            }
            set unbounded_end(value) {
                pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, __ByIndex_one_of_decls, "f")[1], value);
            }
            get has_unbounded_end() {
                return pb_1.Message.getField(this, 3) != null;
            }
            get exclusive_end_index() {
                return pb_1.Message.getFieldWithDefault(this, 4, 0);
            }
            set exclusive_end_index(value) {
                pb_1.Message.setOneofField(this, 4, __classPrivateFieldGet(this, __ByIndex_one_of_decls, "f")[1], value);
            }
            get has_exclusive_end_index() {
                return pb_1.Message.getField(this, 4) != null;
            }
            get start() {
                const cases = {
                    0: "none",
                    1: "unbounded_start",
                    2: "inclusive_start_index"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    1,
                    2
                ])];
            }
            get end() {
                const cases = {
                    0: "none",
                    3: "unbounded_end",
                    4: "exclusive_end_index"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    3,
                    4
                ])];
            }
            static fromObject(data) {
                const message = new _ByIndex({});
                if (data.unbounded_start != null) {
                    message.unbounded_start = dependency_1.common._Unbounded.fromObject(data.unbounded_start);
                }
                if (data.inclusive_start_index != null) {
                    message.inclusive_start_index = data.inclusive_start_index;
                }
                if (data.unbounded_end != null) {
                    message.unbounded_end = dependency_1.common._Unbounded.fromObject(data.unbounded_end);
                }
                if (data.exclusive_end_index != null) {
                    message.exclusive_end_index = data.exclusive_end_index;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.unbounded_start != null) {
                    data.unbounded_start = this.unbounded_start.toObject();
                }
                if (this.inclusive_start_index != null) {
                    data.inclusive_start_index = this.inclusive_start_index;
                }
                if (this.unbounded_end != null) {
                    data.unbounded_end = this.unbounded_end.toObject();
                }
                if (this.exclusive_end_index != null) {
                    data.exclusive_end_index = this.exclusive_end_index;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.has_unbounded_start) writer.writeMessage(1, this.unbounded_start, ()=>this.unbounded_start.serialize(writer));
                if (this.has_inclusive_start_index) writer.writeSint32(2, this.inclusive_start_index);
                if (this.has_unbounded_end) writer.writeMessage(3, this.unbounded_end, ()=>this.unbounded_end.serialize(writer));
                if (this.has_exclusive_end_index) writer.writeSint32(4, this.exclusive_end_index);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ByIndex();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            reader.readMessage(message.unbounded_start, ()=>message.unbounded_start = dependency_1.common._Unbounded.deserialize(reader));
                            break;
                        case 2:
                            message.inclusive_start_index = reader.readSint32();
                            break;
                        case 3:
                            reader.readMessage(message.unbounded_end, ()=>message.unbounded_end = dependency_1.common._Unbounded.deserialize(reader));
                            break;
                        case 4:
                            message.exclusive_end_index = reader.readSint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _ByIndex.deserialize(bytes);
            }
        }
        __ByIndex_one_of_decls = new WeakMap();
        _SortedSetFetchRequest._ByIndex = _ByIndex;
        class _ByScore extends pb_1.Message {
            constructor(data){
                super();
                __ByScore_one_of_decls.set(this, [
                    [
                        1,
                        2
                    ],
                    [
                        3,
                        4
                    ]
                ]);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ByScore_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("unbounded_min" in data && data.unbounded_min != undefined) {
                        this.unbounded_min = data.unbounded_min;
                    }
                    if ("min_score" in data && data.min_score != undefined) {
                        this.min_score = data.min_score;
                    }
                    if ("unbounded_max" in data && data.unbounded_max != undefined) {
                        this.unbounded_max = data.unbounded_max;
                    }
                    if ("max_score" in data && data.max_score != undefined) {
                        this.max_score = data.max_score;
                    }
                    if ("offset" in data && data.offset != undefined) {
                        this.offset = data.offset;
                    }
                    if ("count" in data && data.count != undefined) {
                        this.count = data.count;
                    }
                }
            }
            get unbounded_min() {
                return pb_1.Message.getWrapperField(this, dependency_1.common._Unbounded, 1);
            }
            set unbounded_min(value) {
                pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __ByScore_one_of_decls, "f")[0], value);
            }
            get has_unbounded_min() {
                return pb_1.Message.getField(this, 1) != null;
            }
            get min_score() {
                return pb_1.Message.getWrapperField(this, _SortedSetFetchRequest._ByScore._Score, 2);
            }
            set min_score(value) {
                pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __ByScore_one_of_decls, "f")[0], value);
            }
            get has_min_score() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get unbounded_max() {
                return pb_1.Message.getWrapperField(this, dependency_1.common._Unbounded, 3);
            }
            set unbounded_max(value) {
                pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, __ByScore_one_of_decls, "f")[1], value);
            }
            get has_unbounded_max() {
                return pb_1.Message.getField(this, 3) != null;
            }
            get max_score() {
                return pb_1.Message.getWrapperField(this, _SortedSetFetchRequest._ByScore._Score, 4);
            }
            set max_score(value) {
                pb_1.Message.setOneofWrapperField(this, 4, __classPrivateFieldGet(this, __ByScore_one_of_decls, "f")[1], value);
            }
            get has_max_score() {
                return pb_1.Message.getField(this, 4) != null;
            }
            get offset() {
                return pb_1.Message.getFieldWithDefault(this, 5, 0);
            }
            set offset(value) {
                pb_1.Message.setField(this, 5, value);
            }
            get count() {
                return pb_1.Message.getFieldWithDefault(this, 6, 0);
            }
            set count(value) {
                pb_1.Message.setField(this, 6, value);
            }
            get min() {
                const cases = {
                    0: "none",
                    1: "unbounded_min",
                    2: "min_score"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    1,
                    2
                ])];
            }
            get max() {
                const cases = {
                    0: "none",
                    3: "unbounded_max",
                    4: "max_score"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    3,
                    4
                ])];
            }
            static fromObject(data) {
                const message = new _ByScore({});
                if (data.unbounded_min != null) {
                    message.unbounded_min = dependency_1.common._Unbounded.fromObject(data.unbounded_min);
                }
                if (data.min_score != null) {
                    message.min_score = _SortedSetFetchRequest._ByScore._Score.fromObject(data.min_score);
                }
                if (data.unbounded_max != null) {
                    message.unbounded_max = dependency_1.common._Unbounded.fromObject(data.unbounded_max);
                }
                if (data.max_score != null) {
                    message.max_score = _SortedSetFetchRequest._ByScore._Score.fromObject(data.max_score);
                }
                if (data.offset != null) {
                    message.offset = data.offset;
                }
                if (data.count != null) {
                    message.count = data.count;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.unbounded_min != null) {
                    data.unbounded_min = this.unbounded_min.toObject();
                }
                if (this.min_score != null) {
                    data.min_score = this.min_score.toObject();
                }
                if (this.unbounded_max != null) {
                    data.unbounded_max = this.unbounded_max.toObject();
                }
                if (this.max_score != null) {
                    data.max_score = this.max_score.toObject();
                }
                if (this.offset != null) {
                    data.offset = this.offset;
                }
                if (this.count != null) {
                    data.count = this.count;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.has_unbounded_min) writer.writeMessage(1, this.unbounded_min, ()=>this.unbounded_min.serialize(writer));
                if (this.has_min_score) writer.writeMessage(2, this.min_score, ()=>this.min_score.serialize(writer));
                if (this.has_unbounded_max) writer.writeMessage(3, this.unbounded_max, ()=>this.unbounded_max.serialize(writer));
                if (this.has_max_score) writer.writeMessage(4, this.max_score, ()=>this.max_score.serialize(writer));
                if (this.offset != 0) writer.writeUint32(5, this.offset);
                if (this.count != 0) writer.writeSint32(6, this.count);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ByScore();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            reader.readMessage(message.unbounded_min, ()=>message.unbounded_min = dependency_1.common._Unbounded.deserialize(reader));
                            break;
                        case 2:
                            reader.readMessage(message.min_score, ()=>message.min_score = _SortedSetFetchRequest._ByScore._Score.deserialize(reader));
                            break;
                        case 3:
                            reader.readMessage(message.unbounded_max, ()=>message.unbounded_max = dependency_1.common._Unbounded.deserialize(reader));
                            break;
                        case 4:
                            reader.readMessage(message.max_score, ()=>message.max_score = _SortedSetFetchRequest._ByScore._Score.deserialize(reader));
                            break;
                        case 5:
                            message.offset = reader.readUint32();
                            break;
                        case 6:
                            message.count = reader.readSint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _ByScore.deserialize(bytes);
            }
        }
        __ByScore_one_of_decls = new WeakMap();
        _SortedSetFetchRequest._ByScore = _ByScore;
        (function(_ByScore) {
            var __Score_one_of_decls;
            class _Score extends pb_1.Message {
                constructor(data){
                    super();
                    __Score_one_of_decls.set(this, []);
                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Score_one_of_decls, "f"));
                    if (!Array.isArray(data) && typeof data == "object") {
                        if ("score" in data && data.score != undefined) {
                            this.score = data.score;
                        }
                        if ("exclusive" in data && data.exclusive != undefined) {
                            this.exclusive = data.exclusive;
                        }
                    }
                }
                get score() {
                    return pb_1.Message.getFieldWithDefault(this, 1, 0);
                }
                set score(value) {
                    pb_1.Message.setField(this, 1, value);
                }
                get exclusive() {
                    return pb_1.Message.getFieldWithDefault(this, 2, false);
                }
                set exclusive(value) {
                    pb_1.Message.setField(this, 2, value);
                }
                static fromObject(data) {
                    const message = new _Score({});
                    if (data.score != null) {
                        message.score = data.score;
                    }
                    if (data.exclusive != null) {
                        message.exclusive = data.exclusive;
                    }
                    return message;
                }
                toObject() {
                    const data = {};
                    if (this.score != null) {
                        data.score = this.score;
                    }
                    if (this.exclusive != null) {
                        data.exclusive = this.exclusive;
                    }
                    return data;
                }
                serialize(w) {
                    const writer = w || new pb_1.BinaryWriter();
                    if (this.score != 0) writer.writeDouble(1, this.score);
                    if (this.exclusive != false) writer.writeBool(2, this.exclusive);
                    if (!w) return writer.getResultBuffer();
                }
                static deserialize(bytes) {
                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Score();
                    while(reader.nextField()){
                        if (reader.isEndGroup()) break;
                        switch(reader.getFieldNumber()){
                            case 1:
                                message.score = reader.readDouble();
                                break;
                            case 2:
                                message.exclusive = reader.readBool();
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    return message;
                }
                serializeBinary() {
                    return this.serialize();
                }
                static deserializeBinary(bytes) {
                    return _Score.deserialize(bytes);
                }
            }
            __Score_one_of_decls = new WeakMap();
            _ByScore._Score = _Score;
        })(_ByScore = _SortedSetFetchRequest._ByScore || (_SortedSetFetchRequest._ByScore = {}));
    })(_SortedSetFetchRequest = cache_client._SortedSetFetchRequest || (cache_client._SortedSetFetchRequest = {}));
    class _SortedSetFetchResponse extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetFetchResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetFetchResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _SortedSetFetchResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SortedSetFetchResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _SortedSetFetchResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SortedSetFetchResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get sorted_set() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _SortedSetFetchResponse({});
            if (data.found != null) {
                message.found = _SortedSetFetchResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _SortedSetFetchResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetFetchResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _SortedSetFetchResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _SortedSetFetchResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetFetchResponse.deserialize(bytes);
        }
    }
    __SortedSetFetchResponse_one_of_decls = new WeakMap();
    cache_client._SortedSetFetchResponse = _SortedSetFetchResponse;
    (function(_SortedSetFetchResponse) {
        var __Found_one_of_decls_18, __Missing_one_of_decls_19;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_18.set(this, [
                    [
                        1,
                        2
                    ]
                ]);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls_18, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("values_with_scores" in data && data.values_with_scores != undefined) {
                        this.values_with_scores = data.values_with_scores;
                    }
                    if ("values" in data && data.values != undefined) {
                        this.values = data.values;
                    }
                }
            }
            get values_with_scores() {
                return pb_1.Message.getWrapperField(this, _SortedSetFetchResponse._Found._ValuesWithScores, 1);
            }
            set values_with_scores(value) {
                pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __Found_one_of_decls_18, "f")[0], value);
            }
            get has_values_with_scores() {
                return pb_1.Message.getField(this, 1) != null;
            }
            get values() {
                return pb_1.Message.getWrapperField(this, _SortedSetFetchResponse._Found._Values, 2);
            }
            set values(value) {
                pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __Found_one_of_decls_18, "f")[0], value);
            }
            get has_values() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get elements() {
                const cases = {
                    0: "none",
                    1: "values_with_scores",
                    2: "values"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    1,
                    2
                ])];
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.values_with_scores != null) {
                    message.values_with_scores = _SortedSetFetchResponse._Found._ValuesWithScores.fromObject(data.values_with_scores);
                }
                if (data.values != null) {
                    message.values = _SortedSetFetchResponse._Found._Values.fromObject(data.values);
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.values_with_scores != null) {
                    data.values_with_scores = this.values_with_scores.toObject();
                }
                if (this.values != null) {
                    data.values = this.values.toObject();
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.has_values_with_scores) writer.writeMessage(1, this.values_with_scores, ()=>this.values_with_scores.serialize(writer));
                if (this.has_values) writer.writeMessage(2, this.values, ()=>this.values.serialize(writer));
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            reader.readMessage(message.values_with_scores, ()=>message.values_with_scores = _SortedSetFetchResponse._Found._ValuesWithScores.deserialize(reader));
                            break;
                        case 2:
                            reader.readMessage(message.values, ()=>message.values = _SortedSetFetchResponse._Found._Values.deserialize(reader));
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_18 = new WeakMap();
        _SortedSetFetchResponse._Found = _Found;
        (function(_Found) {
            var __ValuesWithScores_one_of_decls, __Values_one_of_decls;
            class _ValuesWithScores extends pb_1.Message {
                constructor(data){
                    super();
                    __ValuesWithScores_one_of_decls.set(this, []);
                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                        1
                    ], __classPrivateFieldGet(this, __ValuesWithScores_one_of_decls, "f"));
                    if (!Array.isArray(data) && typeof data == "object") {
                        if ("elements" in data && data.elements != undefined) {
                            this.elements = data.elements;
                        }
                    }
                }
                get elements() {
                    return pb_1.Message.getRepeatedWrapperField(this, _SortedSetElement, 1);
                }
                set elements(value) {
                    pb_1.Message.setRepeatedWrapperField(this, 1, value);
                }
                static fromObject(data) {
                    const message = new _ValuesWithScores({});
                    if (data.elements != null) {
                        message.elements = data.elements.map((item)=>_SortedSetElement.fromObject(item));
                    }
                    return message;
                }
                toObject() {
                    const data = {};
                    if (this.elements != null) {
                        data.elements = this.elements.map((item)=>item.toObject());
                    }
                    return data;
                }
                serialize(w) {
                    const writer = w || new pb_1.BinaryWriter();
                    if (this.elements.length) writer.writeRepeatedMessage(1, this.elements, (item)=>item.serialize(writer));
                    if (!w) return writer.getResultBuffer();
                }
                static deserialize(bytes) {
                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ValuesWithScores();
                    while(reader.nextField()){
                        if (reader.isEndGroup()) break;
                        switch(reader.getFieldNumber()){
                            case 1:
                                reader.readMessage(message.elements, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _SortedSetElement.deserialize(reader), _SortedSetElement));
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    return message;
                }
                serializeBinary() {
                    return this.serialize();
                }
                static deserializeBinary(bytes) {
                    return _ValuesWithScores.deserialize(bytes);
                }
            }
            __ValuesWithScores_one_of_decls = new WeakMap();
            _Found._ValuesWithScores = _ValuesWithScores;
            class _Values extends pb_1.Message {
                constructor(data){
                    super();
                    __Values_one_of_decls.set(this, []);
                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                        1
                    ], __classPrivateFieldGet(this, __Values_one_of_decls, "f"));
                    if (!Array.isArray(data) && typeof data == "object") {
                        if ("values" in data && data.values != undefined) {
                            this.values = data.values;
                        }
                    }
                }
                get values() {
                    return pb_1.Message.getFieldWithDefault(this, 1, []);
                }
                set values(value) {
                    pb_1.Message.setField(this, 1, value);
                }
                static fromObject(data) {
                    const message = new _Values({});
                    if (data.values != null) {
                        message.values = data.values;
                    }
                    return message;
                }
                toObject() {
                    const data = {};
                    if (this.values != null) {
                        data.values = this.values;
                    }
                    return data;
                }
                serialize(w) {
                    const writer = w || new pb_1.BinaryWriter();
                    if (this.values.length) writer.writeRepeatedBytes(1, this.values);
                    if (!w) return writer.getResultBuffer();
                }
                static deserialize(bytes) {
                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Values();
                    while(reader.nextField()){
                        if (reader.isEndGroup()) break;
                        switch(reader.getFieldNumber()){
                            case 1:
                                pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    return message;
                }
                serializeBinary() {
                    return this.serialize();
                }
                static deserializeBinary(bytes) {
                    return _Values.deserialize(bytes);
                }
            }
            __Values_one_of_decls = new WeakMap();
            _Found._Values = _Values;
        })(_Found = _SortedSetFetchResponse._Found || (_SortedSetFetchResponse._Found = {}));
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_19.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_19, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_19 = new WeakMap();
        _SortedSetFetchResponse._Missing = _Missing;
    })(_SortedSetFetchResponse = cache_client._SortedSetFetchResponse || (cache_client._SortedSetFetchResponse = {}));
    class _SortedSetGetScoreRequest extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetGetScoreRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                2
            ], __classPrivateFieldGet(this, __SortedSetGetScoreRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
                if ("values" in data && data.values != undefined) {
                    this.values = data.values;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get values() {
            return pb_1.Message.getFieldWithDefault(this, 2, []);
        }
        set values(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _SortedSetGetScoreRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            if (data.values != null) {
                message.values = data.values;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            if (this.values != null) {
                data.values = this.values;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (this.values.length) writer.writeRepeatedBytes(2, this.values);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetGetScoreRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    case 2:
                        pb_1.Message.addToRepeatedField(message, 2, reader.readBytes());
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetGetScoreRequest.deserialize(bytes);
        }
    }
    __SortedSetGetScoreRequest_one_of_decls = new WeakMap();
    cache_client._SortedSetGetScoreRequest = _SortedSetGetScoreRequest;
    class _SortedSetGetScoreResponse extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetGetScoreResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetGetScoreResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _SortedSetGetScoreResponse._SortedSetFound, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SortedSetGetScoreResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _SortedSetGetScoreResponse._SortedSetMissing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SortedSetGetScoreResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get sorted_set() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _SortedSetGetScoreResponse({});
            if (data.found != null) {
                message.found = _SortedSetGetScoreResponse._SortedSetFound.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _SortedSetGetScoreResponse._SortedSetMissing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetGetScoreResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _SortedSetGetScoreResponse._SortedSetFound.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _SortedSetGetScoreResponse._SortedSetMissing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetGetScoreResponse.deserialize(bytes);
        }
    }
    __SortedSetGetScoreResponse_one_of_decls = new WeakMap();
    cache_client._SortedSetGetScoreResponse = _SortedSetGetScoreResponse;
    (function(_SortedSetGetScoreResponse) {
        var __SortedSetGetScoreResponsePart_one_of_decls, __SortedSetFound_one_of_decls, __SortedSetMissing_one_of_decls;
        class _SortedSetGetScoreResponsePart extends pb_1.Message {
            constructor(data){
                super();
                __SortedSetGetScoreResponsePart_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetGetScoreResponsePart_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("result" in data && data.result != undefined) {
                        this.result = data.result;
                    }
                    if ("score" in data && data.score != undefined) {
                        this.score = data.score;
                    }
                }
            }
            get result() {
                return pb_1.Message.getFieldWithDefault(this, 1, ECacheResult.Invalid);
            }
            set result(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get score() {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            }
            set score(value) {
                pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
                const message = new _SortedSetGetScoreResponsePart({});
                if (data.result != null) {
                    message.result = data.result;
                }
                if (data.score != null) {
                    message.score = data.score;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.result != null) {
                    data.result = this.result;
                }
                if (this.score != null) {
                    data.score = this.score;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.result != ECacheResult.Invalid) writer.writeEnum(1, this.result);
                if (this.score != 0) writer.writeDouble(2, this.score);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetGetScoreResponsePart();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.result = reader.readEnum();
                            break;
                        case 2:
                            message.score = reader.readDouble();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _SortedSetGetScoreResponsePart.deserialize(bytes);
            }
        }
        __SortedSetGetScoreResponsePart_one_of_decls = new WeakMap();
        _SortedSetGetScoreResponse._SortedSetGetScoreResponsePart = _SortedSetGetScoreResponsePart;
        class _SortedSetFound extends pb_1.Message {
            constructor(data){
                super();
                __SortedSetFound_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                    1
                ], __classPrivateFieldGet(this, __SortedSetFound_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("elements" in data && data.elements != undefined) {
                        this.elements = data.elements;
                    }
                }
            }
            get elements() {
                return pb_1.Message.getRepeatedWrapperField(this, _SortedSetGetScoreResponse._SortedSetGetScoreResponsePart, 1);
            }
            set elements(value) {
                pb_1.Message.setRepeatedWrapperField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _SortedSetFound({});
                if (data.elements != null) {
                    message.elements = data.elements.map((item)=>_SortedSetGetScoreResponse._SortedSetGetScoreResponsePart.fromObject(item));
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.elements != null) {
                    data.elements = this.elements.map((item)=>item.toObject());
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.elements.length) writer.writeRepeatedMessage(1, this.elements, (item)=>item.serialize(writer));
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetFound();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            reader.readMessage(message.elements, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _SortedSetGetScoreResponse._SortedSetGetScoreResponsePart.deserialize(reader), _SortedSetGetScoreResponse._SortedSetGetScoreResponsePart));
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _SortedSetFound.deserialize(bytes);
            }
        }
        __SortedSetFound_one_of_decls = new WeakMap();
        _SortedSetGetScoreResponse._SortedSetFound = _SortedSetFound;
        class _SortedSetMissing extends pb_1.Message {
            constructor(data){
                super();
                __SortedSetMissing_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetMissing_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _SortedSetMissing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetMissing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _SortedSetMissing.deserialize(bytes);
            }
        }
        __SortedSetMissing_one_of_decls = new WeakMap();
        _SortedSetGetScoreResponse._SortedSetMissing = _SortedSetMissing;
    })(_SortedSetGetScoreResponse = cache_client._SortedSetGetScoreResponse || (cache_client._SortedSetGetScoreResponse = {}));
    class _SortedSetRemoveRequest extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetRemoveRequest_one_of_decls.set(this, [
                [
                    2,
                    3
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetRemoveRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
                if ("all" in data && data.all != undefined) {
                    this.all = data.all;
                }
                if ("some" in data && data.some != undefined) {
                    this.some = data.some;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get all() {
            return pb_1.Message.getWrapperField(this, _SortedSetRemoveRequest._All, 2);
        }
        set all(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SortedSetRemoveRequest_one_of_decls, "f")[0], value);
        }
        get has_all() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get some() {
            return pb_1.Message.getWrapperField(this, _SortedSetRemoveRequest._Some, 3);
        }
        set some(value) {
            pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, __SortedSetRemoveRequest_one_of_decls, "f")[0], value);
        }
        get has_some() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get remove_elements() {
            const cases = {
                0: "none",
                2: "all",
                3: "some"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                2,
                3
            ])];
        }
        static fromObject(data) {
            const message = new _SortedSetRemoveRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            if (data.all != null) {
                message.all = _SortedSetRemoveRequest._All.fromObject(data.all);
            }
            if (data.some != null) {
                message.some = _SortedSetRemoveRequest._Some.fromObject(data.some);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            if (this.all != null) {
                data.all = this.all.toObject();
            }
            if (this.some != null) {
                data.some = this.some.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (this.has_all) writer.writeMessage(2, this.all, ()=>this.all.serialize(writer));
            if (this.has_some) writer.writeMessage(3, this.some, ()=>this.some.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetRemoveRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    case 2:
                        reader.readMessage(message.all, ()=>message.all = _SortedSetRemoveRequest._All.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.some, ()=>message.some = _SortedSetRemoveRequest._Some.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetRemoveRequest.deserialize(bytes);
        }
    }
    __SortedSetRemoveRequest_one_of_decls = new WeakMap();
    cache_client._SortedSetRemoveRequest = _SortedSetRemoveRequest;
    (function(_SortedSetRemoveRequest) {
        var __All_one_of_decls_1, __Some_one_of_decls;
        class _All extends pb_1.Message {
            constructor(data){
                super();
                __All_one_of_decls_1.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __All_one_of_decls_1, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _All({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _All();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _All.deserialize(bytes);
            }
        }
        __All_one_of_decls_1 = new WeakMap();
        _SortedSetRemoveRequest._All = _All;
        class _Some extends pb_1.Message {
            constructor(data){
                super();
                __Some_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                    1
                ], __classPrivateFieldGet(this, __Some_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("values" in data && data.values != undefined) {
                        this.values = data.values;
                    }
                }
            }
            get values() {
                return pb_1.Message.getFieldWithDefault(this, 1, []);
            }
            set values(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Some({});
                if (data.values != null) {
                    message.values = data.values;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.values != null) {
                    data.values = this.values;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.values.length) writer.writeRepeatedBytes(1, this.values);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Some();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Some.deserialize(bytes);
            }
        }
        __Some_one_of_decls = new WeakMap();
        _SortedSetRemoveRequest._Some = _Some;
    })(_SortedSetRemoveRequest = cache_client._SortedSetRemoveRequest || (cache_client._SortedSetRemoveRequest = {}));
    class _SortedSetRemoveResponse extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetRemoveResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetRemoveResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _SortedSetRemoveResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetRemoveResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetRemoveResponse.deserialize(bytes);
        }
    }
    __SortedSetRemoveResponse_one_of_decls = new WeakMap();
    cache_client._SortedSetRemoveResponse = _SortedSetRemoveResponse;
    class _SortedSetIncrementRequest extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetIncrementRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetIncrementRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
                if ("amount" in data && data.amount != undefined) {
                    this.amount = data.amount;
                }
                if ("ttl_milliseconds" in data && data.ttl_milliseconds != undefined) {
                    this.ttl_milliseconds = data.ttl_milliseconds;
                }
                if ("refresh_ttl" in data && data.refresh_ttl != undefined) {
                    this.refresh_ttl = data.refresh_ttl;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get value() {
            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
        }
        set value(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get amount() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set amount(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get ttl_milliseconds() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0);
        }
        set ttl_milliseconds(value) {
            pb_1.Message.setField(this, 4, value);
        }
        get refresh_ttl() {
            return pb_1.Message.getFieldWithDefault(this, 5, false);
        }
        set refresh_ttl(value) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data) {
            const message = new _SortedSetIncrementRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            if (data.value != null) {
                message.value = data.value;
            }
            if (data.amount != null) {
                message.amount = data.amount;
            }
            if (data.ttl_milliseconds != null) {
                message.ttl_milliseconds = data.ttl_milliseconds;
            }
            if (data.refresh_ttl != null) {
                message.refresh_ttl = data.refresh_ttl;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            if (this.value != null) {
                data.value = this.value;
            }
            if (this.amount != null) {
                data.amount = this.amount;
            }
            if (this.ttl_milliseconds != null) {
                data.ttl_milliseconds = this.ttl_milliseconds;
            }
            if (this.refresh_ttl != null) {
                data.refresh_ttl = this.refresh_ttl;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (this.value.length) writer.writeBytes(2, this.value);
            if (this.amount != 0) writer.writeDouble(3, this.amount);
            if (this.ttl_milliseconds != 0) writer.writeUint64(4, this.ttl_milliseconds);
            if (this.refresh_ttl != false) writer.writeBool(5, this.refresh_ttl);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetIncrementRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    case 2:
                        message.value = reader.readBytes();
                        break;
                    case 3:
                        message.amount = reader.readDouble();
                        break;
                    case 4:
                        message.ttl_milliseconds = reader.readUint64();
                        break;
                    case 5:
                        message.refresh_ttl = reader.readBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetIncrementRequest.deserialize(bytes);
        }
    }
    __SortedSetIncrementRequest_one_of_decls = new WeakMap();
    cache_client._SortedSetIncrementRequest = _SortedSetIncrementRequest;
    class _SortedSetIncrementResponse extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetIncrementResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetIncrementResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("score" in data && data.score != undefined) {
                    this.score = data.score;
                }
            }
        }
        get score() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set score(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _SortedSetIncrementResponse({});
            if (data.score != null) {
                message.score = data.score;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.score != null) {
                data.score = this.score;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.score != 0) writer.writeDouble(1, this.score);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetIncrementResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.score = reader.readDouble();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetIncrementResponse.deserialize(bytes);
        }
    }
    __SortedSetIncrementResponse_one_of_decls = new WeakMap();
    cache_client._SortedSetIncrementResponse = _SortedSetIncrementResponse;
    class _SortedSetGetRankRequest extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetGetRankRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetGetRankRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
                if ("order" in data && data.order != undefined) {
                    this.order = data.order;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get value() {
            return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
        }
        set value(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get order() {
            return pb_1.Message.getFieldWithDefault(this, 3, _SortedSetGetRankRequest.Order.ASCENDING);
        }
        set order(value) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data) {
            const message = new _SortedSetGetRankRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            if (data.value != null) {
                message.value = data.value;
            }
            if (data.order != null) {
                message.order = data.order;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            if (this.value != null) {
                data.value = this.value;
            }
            if (this.order != null) {
                data.order = this.order;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (this.value.length) writer.writeBytes(2, this.value);
            if (this.order != _SortedSetGetRankRequest.Order.ASCENDING) writer.writeEnum(3, this.order);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetGetRankRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    case 2:
                        message.value = reader.readBytes();
                        break;
                    case 3:
                        message.order = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetGetRankRequest.deserialize(bytes);
        }
    }
    __SortedSetGetRankRequest_one_of_decls = new WeakMap();
    cache_client._SortedSetGetRankRequest = _SortedSetGetRankRequest;
    (function(_SortedSetGetRankRequest) {
        let Order;
        (function(Order) {
            Order[Order["ASCENDING"] = 0] = "ASCENDING";
            Order[Order["DESCENDING"] = 1] = "DESCENDING";
        })(Order = _SortedSetGetRankRequest.Order || (_SortedSetGetRankRequest.Order = {}));
    })(_SortedSetGetRankRequest = cache_client._SortedSetGetRankRequest || (cache_client._SortedSetGetRankRequest = {}));
    class _SortedSetGetRankResponse extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetGetRankResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetGetRankResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("element_rank" in data && data.element_rank != undefined) {
                    this.element_rank = data.element_rank;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get element_rank() {
            return pb_1.Message.getWrapperField(this, _SortedSetGetRankResponse._RankResponsePart, 1);
        }
        set element_rank(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SortedSetGetRankResponse_one_of_decls, "f")[0], value);
        }
        get has_element_rank() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _SortedSetGetRankResponse._SortedSetMissing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SortedSetGetRankResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get rank() {
            const cases = {
                0: "none",
                1: "element_rank",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _SortedSetGetRankResponse({});
            if (data.element_rank != null) {
                message.element_rank = _SortedSetGetRankResponse._RankResponsePart.fromObject(data.element_rank);
            }
            if (data.missing != null) {
                message.missing = _SortedSetGetRankResponse._SortedSetMissing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.element_rank != null) {
                data.element_rank = this.element_rank.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_element_rank) writer.writeMessage(1, this.element_rank, ()=>this.element_rank.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetGetRankResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.element_rank, ()=>message.element_rank = _SortedSetGetRankResponse._RankResponsePart.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _SortedSetGetRankResponse._SortedSetMissing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetGetRankResponse.deserialize(bytes);
        }
    }
    __SortedSetGetRankResponse_one_of_decls = new WeakMap();
    cache_client._SortedSetGetRankResponse = _SortedSetGetRankResponse;
    (function(_SortedSetGetRankResponse) {
        var __RankResponsePart_one_of_decls, __SortedSetMissing_one_of_decls_1;
        class _RankResponsePart extends pb_1.Message {
            constructor(data){
                super();
                __RankResponsePart_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __RankResponsePart_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("result" in data && data.result != undefined) {
                        this.result = data.result;
                    }
                    if ("rank" in data && data.rank != undefined) {
                        this.rank = data.rank;
                    }
                }
            }
            get result() {
                return pb_1.Message.getFieldWithDefault(this, 1, ECacheResult.Invalid);
            }
            set result(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get rank() {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            }
            set rank(value) {
                pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
                const message = new _RankResponsePart({});
                if (data.result != null) {
                    message.result = data.result;
                }
                if (data.rank != null) {
                    message.rank = data.rank;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.result != null) {
                    data.result = this.result;
                }
                if (this.rank != null) {
                    data.rank = this.rank;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.result != ECacheResult.Invalid) writer.writeEnum(1, this.result);
                if (this.rank != 0) writer.writeUint64(2, this.rank);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _RankResponsePart();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.result = reader.readEnum();
                            break;
                        case 2:
                            message.rank = reader.readUint64();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _RankResponsePart.deserialize(bytes);
            }
        }
        __RankResponsePart_one_of_decls = new WeakMap();
        _SortedSetGetRankResponse._RankResponsePart = _RankResponsePart;
        class _SortedSetMissing extends pb_1.Message {
            constructor(data){
                super();
                __SortedSetMissing_one_of_decls_1.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetMissing_one_of_decls_1, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _SortedSetMissing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetMissing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _SortedSetMissing.deserialize(bytes);
            }
        }
        __SortedSetMissing_one_of_decls_1 = new WeakMap();
        _SortedSetGetRankResponse._SortedSetMissing = _SortedSetMissing;
    })(_SortedSetGetRankResponse = cache_client._SortedSetGetRankResponse || (cache_client._SortedSetGetRankResponse = {}));
    class _SortedSetLengthRequest extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetLengthRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetLengthRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _SortedSetLengthRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetLengthRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetLengthRequest.deserialize(bytes);
        }
    }
    __SortedSetLengthRequest_one_of_decls = new WeakMap();
    cache_client._SortedSetLengthRequest = _SortedSetLengthRequest;
    class _SortedSetLengthResponse extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetLengthResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetLengthResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _SortedSetLengthResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SortedSetLengthResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _SortedSetLengthResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SortedSetLengthResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get sorted_set() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _SortedSetLengthResponse({});
            if (data.found != null) {
                message.found = _SortedSetLengthResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _SortedSetLengthResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetLengthResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _SortedSetLengthResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _SortedSetLengthResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetLengthResponse.deserialize(bytes);
        }
    }
    __SortedSetLengthResponse_one_of_decls = new WeakMap();
    cache_client._SortedSetLengthResponse = _SortedSetLengthResponse;
    (function(_SortedSetLengthResponse) {
        var __Found_one_of_decls_19, __Missing_one_of_decls_20;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_19.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls_19, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("length" in data && data.length != undefined) {
                        this.length = data.length;
                    }
                }
            }
            get length() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set length(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.length != null) {
                    message.length = data.length;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.length != null) {
                    data.length = this.length;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.length != 0) writer.writeUint32(1, this.length);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.length = reader.readUint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_19 = new WeakMap();
        _SortedSetLengthResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_20.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_20, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_20 = new WeakMap();
        _SortedSetLengthResponse._Missing = _Missing;
    })(_SortedSetLengthResponse = cache_client._SortedSetLengthResponse || (cache_client._SortedSetLengthResponse = {}));
    class _SortedSetLengthByScoreRequest extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetLengthByScoreRequest_one_of_decls.set(this, [
                [
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetLengthByScoreRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("set_name" in data && data.set_name != undefined) {
                    this.set_name = data.set_name;
                }
                if ("inclusive_min" in data && data.inclusive_min != undefined) {
                    this.inclusive_min = data.inclusive_min;
                }
                if ("exclusive_min" in data && data.exclusive_min != undefined) {
                    this.exclusive_min = data.exclusive_min;
                }
                if ("unbounded_min" in data && data.unbounded_min != undefined) {
                    this.unbounded_min = data.unbounded_min;
                }
                if ("inclusive_max" in data && data.inclusive_max != undefined) {
                    this.inclusive_max = data.inclusive_max;
                }
                if ("exclusive_max" in data && data.exclusive_max != undefined) {
                    this.exclusive_max = data.exclusive_max;
                }
                if ("unbounded_max" in data && data.unbounded_max != undefined) {
                    this.unbounded_max = data.unbounded_max;
                }
            }
        }
        get set_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set set_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get inclusive_min() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set inclusive_min(value) {
            pb_1.Message.setOneofField(this, 2, __classPrivateFieldGet(this, __SortedSetLengthByScoreRequest_one_of_decls, "f")[0], value);
        }
        get has_inclusive_min() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get exclusive_min() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set exclusive_min(value) {
            pb_1.Message.setOneofField(this, 3, __classPrivateFieldGet(this, __SortedSetLengthByScoreRequest_one_of_decls, "f")[0], value);
        }
        get has_exclusive_min() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get unbounded_min() {
            return pb_1.Message.getWrapperField(this, dependency_1.common._Unbounded, 4);
        }
        set unbounded_min(value) {
            pb_1.Message.setOneofWrapperField(this, 4, __classPrivateFieldGet(this, __SortedSetLengthByScoreRequest_one_of_decls, "f")[0], value);
        }
        get has_unbounded_min() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get inclusive_max() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0);
        }
        set inclusive_max(value) {
            pb_1.Message.setOneofField(this, 5, __classPrivateFieldGet(this, __SortedSetLengthByScoreRequest_one_of_decls, "f")[1], value);
        }
        get has_inclusive_max() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get exclusive_max() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0);
        }
        set exclusive_max(value) {
            pb_1.Message.setOneofField(this, 6, __classPrivateFieldGet(this, __SortedSetLengthByScoreRequest_one_of_decls, "f")[1], value);
        }
        get has_exclusive_max() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get unbounded_max() {
            return pb_1.Message.getWrapperField(this, dependency_1.common._Unbounded, 7);
        }
        set unbounded_max(value) {
            pb_1.Message.setOneofWrapperField(this, 7, __classPrivateFieldGet(this, __SortedSetLengthByScoreRequest_one_of_decls, "f")[1], value);
        }
        get has_unbounded_max() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get min() {
            const cases = {
                0: "none",
                2: "inclusive_min",
                3: "exclusive_min",
                4: "unbounded_min"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                2,
                3,
                4
            ])];
        }
        get max() {
            const cases = {
                0: "none",
                5: "inclusive_max",
                6: "exclusive_max",
                7: "unbounded_max"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                5,
                6,
                7
            ])];
        }
        static fromObject(data) {
            const message = new _SortedSetLengthByScoreRequest({});
            if (data.set_name != null) {
                message.set_name = data.set_name;
            }
            if (data.inclusive_min != null) {
                message.inclusive_min = data.inclusive_min;
            }
            if (data.exclusive_min != null) {
                message.exclusive_min = data.exclusive_min;
            }
            if (data.unbounded_min != null) {
                message.unbounded_min = dependency_1.common._Unbounded.fromObject(data.unbounded_min);
            }
            if (data.inclusive_max != null) {
                message.inclusive_max = data.inclusive_max;
            }
            if (data.exclusive_max != null) {
                message.exclusive_max = data.exclusive_max;
            }
            if (data.unbounded_max != null) {
                message.unbounded_max = dependency_1.common._Unbounded.fromObject(data.unbounded_max);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.set_name != null) {
                data.set_name = this.set_name;
            }
            if (this.inclusive_min != null) {
                data.inclusive_min = this.inclusive_min;
            }
            if (this.exclusive_min != null) {
                data.exclusive_min = this.exclusive_min;
            }
            if (this.unbounded_min != null) {
                data.unbounded_min = this.unbounded_min.toObject();
            }
            if (this.inclusive_max != null) {
                data.inclusive_max = this.inclusive_max;
            }
            if (this.exclusive_max != null) {
                data.exclusive_max = this.exclusive_max;
            }
            if (this.unbounded_max != null) {
                data.unbounded_max = this.unbounded_max.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.set_name.length) writer.writeBytes(1, this.set_name);
            if (this.has_inclusive_min) writer.writeDouble(2, this.inclusive_min);
            if (this.has_exclusive_min) writer.writeDouble(3, this.exclusive_min);
            if (this.has_unbounded_min) writer.writeMessage(4, this.unbounded_min, ()=>this.unbounded_min.serialize(writer));
            if (this.has_inclusive_max) writer.writeDouble(5, this.inclusive_max);
            if (this.has_exclusive_max) writer.writeDouble(6, this.exclusive_max);
            if (this.has_unbounded_max) writer.writeMessage(7, this.unbounded_max, ()=>this.unbounded_max.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetLengthByScoreRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.set_name = reader.readBytes();
                        break;
                    case 2:
                        message.inclusive_min = reader.readDouble();
                        break;
                    case 3:
                        message.exclusive_min = reader.readDouble();
                        break;
                    case 4:
                        reader.readMessage(message.unbounded_min, ()=>message.unbounded_min = dependency_1.common._Unbounded.deserialize(reader));
                        break;
                    case 5:
                        message.inclusive_max = reader.readDouble();
                        break;
                    case 6:
                        message.exclusive_max = reader.readDouble();
                        break;
                    case 7:
                        reader.readMessage(message.unbounded_max, ()=>message.unbounded_max = dependency_1.common._Unbounded.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetLengthByScoreRequest.deserialize(bytes);
        }
    }
    __SortedSetLengthByScoreRequest_one_of_decls = new WeakMap();
    cache_client._SortedSetLengthByScoreRequest = _SortedSetLengthByScoreRequest;
    class _SortedSetLengthByScoreResponse extends pb_1.Message {
        constructor(data){
            super();
            __SortedSetLengthByScoreResponse_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SortedSetLengthByScoreResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("found" in data && data.found != undefined) {
                    this.found = data.found;
                }
                if ("missing" in data && data.missing != undefined) {
                    this.missing = data.missing;
                }
            }
        }
        get found() {
            return pb_1.Message.getWrapperField(this, _SortedSetLengthByScoreResponse._Found, 1);
        }
        set found(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SortedSetLengthByScoreResponse_one_of_decls, "f")[0], value);
        }
        get has_found() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get missing() {
            return pb_1.Message.getWrapperField(this, _SortedSetLengthByScoreResponse._Missing, 2);
        }
        set missing(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SortedSetLengthByScoreResponse_one_of_decls, "f")[0], value);
        }
        get has_missing() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get sorted_set() {
            const cases = {
                0: "none",
                1: "found",
                2: "missing"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _SortedSetLengthByScoreResponse({});
            if (data.found != null) {
                message.found = _SortedSetLengthByScoreResponse._Found.fromObject(data.found);
            }
            if (data.missing != null) {
                message.missing = _SortedSetLengthByScoreResponse._Missing.fromObject(data.missing);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.found != null) {
                data.found = this.found.toObject();
            }
            if (this.missing != null) {
                data.missing = this.missing.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_found) writer.writeMessage(1, this.found, ()=>this.found.serialize(writer));
            if (this.has_missing) writer.writeMessage(2, this.missing, ()=>this.missing.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SortedSetLengthByScoreResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.found, ()=>message.found = _SortedSetLengthByScoreResponse._Found.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.missing, ()=>message.missing = _SortedSetLengthByScoreResponse._Missing.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SortedSetLengthByScoreResponse.deserialize(bytes);
        }
    }
    __SortedSetLengthByScoreResponse_one_of_decls = new WeakMap();
    cache_client._SortedSetLengthByScoreResponse = _SortedSetLengthByScoreResponse;
    (function(_SortedSetLengthByScoreResponse) {
        var __Found_one_of_decls_20, __Missing_one_of_decls_21;
        class _Found extends pb_1.Message {
            constructor(data){
                super();
                __Found_one_of_decls_20.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Found_one_of_decls_20, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("length" in data && data.length != undefined) {
                        this.length = data.length;
                    }
                }
            }
            get length() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set length(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new _Found({});
                if (data.length != null) {
                    message.length = data.length;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.length != null) {
                    data.length = this.length;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.length != 0) writer.writeUint32(1, this.length);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Found();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.length = reader.readUint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Found.deserialize(bytes);
            }
        }
        __Found_one_of_decls_20 = new WeakMap();
        _SortedSetLengthByScoreResponse._Found = _Found;
        class _Missing extends pb_1.Message {
            constructor(data){
                super();
                __Missing_one_of_decls_21.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Missing_one_of_decls_21, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Missing({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Missing();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Missing.deserialize(bytes);
            }
        }
        __Missing_one_of_decls_21 = new WeakMap();
        _SortedSetLengthByScoreResponse._Missing = _Missing;
    })(_SortedSetLengthByScoreResponse = cache_client._SortedSetLengthByScoreResponse || (cache_client._SortedSetLengthByScoreResponse = {}));
    class UnimplementedScsService {
    }
    UnimplementedScsService.definition = {
        Get: {
            path: "/cache_client.Scs/Get",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_GetRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_GetResponse.deserialize(new Uint8Array(bytes))
        },
        GetBatch: {
            path: "/cache_client.Scs/GetBatch",
            requestStream: false,
            responseStream: true,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_GetBatchRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_GetResponse.deserialize(new Uint8Array(bytes))
        },
        Set: {
            path: "/cache_client.Scs/Set",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SetRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SetResponse.deserialize(new Uint8Array(bytes))
        },
        SetBatch: {
            path: "/cache_client.Scs/SetBatch",
            requestStream: false,
            responseStream: true,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SetBatchRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SetResponse.deserialize(new Uint8Array(bytes))
        },
        SetIf: {
            path: "/cache_client.Scs/SetIf",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SetIfRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SetIfResponse.deserialize(new Uint8Array(bytes))
        },
        SetIfNotExists: {
            path: "/cache_client.Scs/SetIfNotExists",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SetIfNotExistsRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SetIfNotExistsResponse.deserialize(new Uint8Array(bytes))
        },
        Delete: {
            path: "/cache_client.Scs/Delete",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_DeleteRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_DeleteResponse.deserialize(new Uint8Array(bytes))
        },
        KeysExist: {
            path: "/cache_client.Scs/KeysExist",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_KeysExistRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_KeysExistResponse.deserialize(new Uint8Array(bytes))
        },
        Increment: {
            path: "/cache_client.Scs/Increment",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_IncrementRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_IncrementResponse.deserialize(new Uint8Array(bytes))
        },
        UpdateTtl: {
            path: "/cache_client.Scs/UpdateTtl",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_UpdateTtlRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_UpdateTtlResponse.deserialize(new Uint8Array(bytes))
        },
        ItemGetTtl: {
            path: "/cache_client.Scs/ItemGetTtl",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ItemGetTtlRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ItemGetTtlResponse.deserialize(new Uint8Array(bytes))
        },
        ItemGetType: {
            path: "/cache_client.Scs/ItemGetType",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ItemGetTypeRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ItemGetTypeResponse.deserialize(new Uint8Array(bytes))
        },
        DictionaryGet: {
            path: "/cache_client.Scs/DictionaryGet",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_DictionaryGetRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_DictionaryGetResponse.deserialize(new Uint8Array(bytes))
        },
        DictionaryFetch: {
            path: "/cache_client.Scs/DictionaryFetch",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_DictionaryFetchRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_DictionaryFetchResponse.deserialize(new Uint8Array(bytes))
        },
        DictionarySet: {
            path: "/cache_client.Scs/DictionarySet",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_DictionarySetRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_DictionarySetResponse.deserialize(new Uint8Array(bytes))
        },
        DictionaryIncrement: {
            path: "/cache_client.Scs/DictionaryIncrement",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_DictionaryIncrementRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_DictionaryIncrementResponse.deserialize(new Uint8Array(bytes))
        },
        DictionaryDelete: {
            path: "/cache_client.Scs/DictionaryDelete",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_DictionaryDeleteRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_DictionaryDeleteResponse.deserialize(new Uint8Array(bytes))
        },
        DictionaryLength: {
            path: "/cache_client.Scs/DictionaryLength",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_DictionaryLengthRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_DictionaryLengthResponse.deserialize(new Uint8Array(bytes))
        },
        SetFetch: {
            path: "/cache_client.Scs/SetFetch",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SetFetchRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SetFetchResponse.deserialize(new Uint8Array(bytes))
        },
        SetSample: {
            path: "/cache_client.Scs/SetSample",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SetSampleRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SetSampleResponse.deserialize(new Uint8Array(bytes))
        },
        SetUnion: {
            path: "/cache_client.Scs/SetUnion",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SetUnionRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SetUnionResponse.deserialize(new Uint8Array(bytes))
        },
        SetDifference: {
            path: "/cache_client.Scs/SetDifference",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SetDifferenceRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SetDifferenceResponse.deserialize(new Uint8Array(bytes))
        },
        SetContains: {
            path: "/cache_client.Scs/SetContains",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SetContainsRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SetContainsResponse.deserialize(new Uint8Array(bytes))
        },
        SetLength: {
            path: "/cache_client.Scs/SetLength",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SetLengthRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SetLengthResponse.deserialize(new Uint8Array(bytes))
        },
        SetPop: {
            path: "/cache_client.Scs/SetPop",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SetPopRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SetPopResponse.deserialize(new Uint8Array(bytes))
        },
        ListPushFront: {
            path: "/cache_client.Scs/ListPushFront",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListPushFrontRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListPushFrontResponse.deserialize(new Uint8Array(bytes))
        },
        ListPushBack: {
            path: "/cache_client.Scs/ListPushBack",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListPushBackRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListPushBackResponse.deserialize(new Uint8Array(bytes))
        },
        ListPopFront: {
            path: "/cache_client.Scs/ListPopFront",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListPopFrontRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListPopFrontResponse.deserialize(new Uint8Array(bytes))
        },
        ListPopBack: {
            path: "/cache_client.Scs/ListPopBack",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListPopBackRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListPopBackResponse.deserialize(new Uint8Array(bytes))
        },
        ListErase: {
            path: "/cache_client.Scs/ListErase",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListEraseRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListEraseResponse.deserialize(new Uint8Array(bytes))
        },
        ListRemove: {
            path: "/cache_client.Scs/ListRemove",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListRemoveRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListRemoveResponse.deserialize(new Uint8Array(bytes))
        },
        ListFetch: {
            path: "/cache_client.Scs/ListFetch",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListFetchRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListFetchResponse.deserialize(new Uint8Array(bytes))
        },
        ListLength: {
            path: "/cache_client.Scs/ListLength",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListLengthRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListLengthResponse.deserialize(new Uint8Array(bytes))
        },
        ListConcatenateFront: {
            path: "/cache_client.Scs/ListConcatenateFront",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListConcatenateFrontRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListConcatenateFrontResponse.deserialize(new Uint8Array(bytes))
        },
        ListConcatenateBack: {
            path: "/cache_client.Scs/ListConcatenateBack",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListConcatenateBackRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListConcatenateBackResponse.deserialize(new Uint8Array(bytes))
        },
        ListRetain: {
            path: "/cache_client.Scs/ListRetain",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListRetainRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListRetainResponse.deserialize(new Uint8Array(bytes))
        },
        SortedSetPut: {
            path: "/cache_client.Scs/SortedSetPut",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SortedSetPutRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SortedSetPutResponse.deserialize(new Uint8Array(bytes))
        },
        SortedSetFetch: {
            path: "/cache_client.Scs/SortedSetFetch",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SortedSetFetchRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SortedSetFetchResponse.deserialize(new Uint8Array(bytes))
        },
        SortedSetGetScore: {
            path: "/cache_client.Scs/SortedSetGetScore",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SortedSetGetScoreRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SortedSetGetScoreResponse.deserialize(new Uint8Array(bytes))
        },
        SortedSetRemove: {
            path: "/cache_client.Scs/SortedSetRemove",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SortedSetRemoveRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SortedSetRemoveResponse.deserialize(new Uint8Array(bytes))
        },
        SortedSetIncrement: {
            path: "/cache_client.Scs/SortedSetIncrement",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SortedSetIncrementRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SortedSetIncrementResponse.deserialize(new Uint8Array(bytes))
        },
        SortedSetGetRank: {
            path: "/cache_client.Scs/SortedSetGetRank",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SortedSetGetRankRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SortedSetGetRankResponse.deserialize(new Uint8Array(bytes))
        },
        SortedSetLength: {
            path: "/cache_client.Scs/SortedSetLength",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SortedSetLengthRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SortedSetLengthResponse.deserialize(new Uint8Array(bytes))
        },
        SortedSetLengthByScore: {
            path: "/cache_client.Scs/SortedSetLengthByScore",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_SortedSetLengthByScoreRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_SortedSetLengthByScoreResponse.deserialize(new Uint8Array(bytes))
        }
    };
    cache_client.UnimplementedScsService = UnimplementedScsService;
    class ScsClient extends grpc_1.makeGenericClientConstructor(UnimplementedScsService.definition, "Scs", {}) {
        constructor(address, credentials, options){
            super(address, credentials, options);
            this.Get = (message, metadata, options, callback)=>{
                return super.Get(message, metadata, options, callback);
            };
            this.GetBatch = (message, metadata, options)=>{
                return super.GetBatch(message, metadata, options);
            };
            this.Set = (message, metadata, options, callback)=>{
                return super.Set(message, metadata, options, callback);
            };
            this.SetBatch = (message, metadata, options)=>{
                return super.SetBatch(message, metadata, options);
            };
            this.SetIf = (message, metadata, options, callback)=>{
                return super.SetIf(message, metadata, options, callback);
            };
            /** @deprecated*/ this.SetIfNotExists = (message, metadata, options, callback)=>{
                return super.SetIfNotExists(message, metadata, options, callback);
            };
            this.Delete = (message, metadata, options, callback)=>{
                return super.Delete(message, metadata, options, callback);
            };
            this.KeysExist = (message, metadata, options, callback)=>{
                return super.KeysExist(message, metadata, options, callback);
            };
            this.Increment = (message, metadata, options, callback)=>{
                return super.Increment(message, metadata, options, callback);
            };
            this.UpdateTtl = (message, metadata, options, callback)=>{
                return super.UpdateTtl(message, metadata, options, callback);
            };
            this.ItemGetTtl = (message, metadata, options, callback)=>{
                return super.ItemGetTtl(message, metadata, options, callback);
            };
            this.ItemGetType = (message, metadata, options, callback)=>{
                return super.ItemGetType(message, metadata, options, callback);
            };
            this.DictionaryGet = (message, metadata, options, callback)=>{
                return super.DictionaryGet(message, metadata, options, callback);
            };
            this.DictionaryFetch = (message, metadata, options, callback)=>{
                return super.DictionaryFetch(message, metadata, options, callback);
            };
            this.DictionarySet = (message, metadata, options, callback)=>{
                return super.DictionarySet(message, metadata, options, callback);
            };
            this.DictionaryIncrement = (message, metadata, options, callback)=>{
                return super.DictionaryIncrement(message, metadata, options, callback);
            };
            this.DictionaryDelete = (message, metadata, options, callback)=>{
                return super.DictionaryDelete(message, metadata, options, callback);
            };
            this.DictionaryLength = (message, metadata, options, callback)=>{
                return super.DictionaryLength(message, metadata, options, callback);
            };
            this.SetFetch = (message, metadata, options, callback)=>{
                return super.SetFetch(message, metadata, options, callback);
            };
            this.SetSample = (message, metadata, options, callback)=>{
                return super.SetSample(message, metadata, options, callback);
            };
            this.SetUnion = (message, metadata, options, callback)=>{
                return super.SetUnion(message, metadata, options, callback);
            };
            this.SetDifference = (message, metadata, options, callback)=>{
                return super.SetDifference(message, metadata, options, callback);
            };
            this.SetContains = (message, metadata, options, callback)=>{
                return super.SetContains(message, metadata, options, callback);
            };
            this.SetLength = (message, metadata, options, callback)=>{
                return super.SetLength(message, metadata, options, callback);
            };
            this.SetPop = (message, metadata, options, callback)=>{
                return super.SetPop(message, metadata, options, callback);
            };
            this.ListPushFront = (message, metadata, options, callback)=>{
                return super.ListPushFront(message, metadata, options, callback);
            };
            this.ListPushBack = (message, metadata, options, callback)=>{
                return super.ListPushBack(message, metadata, options, callback);
            };
            this.ListPopFront = (message, metadata, options, callback)=>{
                return super.ListPopFront(message, metadata, options, callback);
            };
            this.ListPopBack = (message, metadata, options, callback)=>{
                return super.ListPopBack(message, metadata, options, callback);
            };
            this.ListErase = (message, metadata, options, callback)=>{
                return super.ListErase(message, metadata, options, callback);
            };
            this.ListRemove = (message, metadata, options, callback)=>{
                return super.ListRemove(message, metadata, options, callback);
            };
            this.ListFetch = (message, metadata, options, callback)=>{
                return super.ListFetch(message, metadata, options, callback);
            };
            this.ListLength = (message, metadata, options, callback)=>{
                return super.ListLength(message, metadata, options, callback);
            };
            this.ListConcatenateFront = (message, metadata, options, callback)=>{
                return super.ListConcatenateFront(message, metadata, options, callback);
            };
            this.ListConcatenateBack = (message, metadata, options, callback)=>{
                return super.ListConcatenateBack(message, metadata, options, callback);
            };
            this.ListRetain = (message, metadata, options, callback)=>{
                return super.ListRetain(message, metadata, options, callback);
            };
            this.SortedSetPut = (message, metadata, options, callback)=>{
                return super.SortedSetPut(message, metadata, options, callback);
            };
            this.SortedSetFetch = (message, metadata, options, callback)=>{
                return super.SortedSetFetch(message, metadata, options, callback);
            };
            this.SortedSetGetScore = (message, metadata, options, callback)=>{
                return super.SortedSetGetScore(message, metadata, options, callback);
            };
            this.SortedSetRemove = (message, metadata, options, callback)=>{
                return super.SortedSetRemove(message, metadata, options, callback);
            };
            this.SortedSetIncrement = (message, metadata, options, callback)=>{
                return super.SortedSetIncrement(message, metadata, options, callback);
            };
            this.SortedSetGetRank = (message, metadata, options, callback)=>{
                return super.SortedSetGetRank(message, metadata, options, callback);
            };
            this.SortedSetLength = (message, metadata, options, callback)=>{
                return super.SortedSetLength(message, metadata, options, callback);
            };
            this.SortedSetLengthByScore = (message, metadata, options, callback)=>{
                return super.SortedSetLengthByScore(message, metadata, options, callback);
            };
        }
    }
    cache_client.ScsClient = ScsClient;
})(cache_client = exports.cache_client || (exports.cache_client = {}));

}.call(this) }),
"[project]/node_modules/@gomomento/generated-types/dist/controlclient.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.control_client = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: controlclient.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */ const pb_1 = __importStar(__turbopack_require__("[project]/node_modules/google-protobuf/google-protobuf.js [app-route] (ecmascript)"));
const grpc_1 = __importStar(__turbopack_require__("[project]/node_modules/@grpc/grpc-js/build/src/index.js [app-route] (ecmascript)"));
var control_client;
(function(control_client) {
    var __CreateStoreRequest_one_of_decls, __CreateStoreResponse_one_of_decls, __DeleteStoreRequest_one_of_decls, __DeleteStoreResponse_one_of_decls, __ListStoresRequest_one_of_decls, __ListStoresResponse_one_of_decls, __Store_one_of_decls, __SimilarityMetric_one_of_decls, __CreateIndexRequest_one_of_decls, __CreateIndexResponse_one_of_decls, __DeleteIndexRequest_one_of_decls, __DeleteIndexResponse_one_of_decls, __ListIndexesRequest_one_of_decls, __ListIndexesResponse_one_of_decls, __DeleteCacheRequest_one_of_decls, __DeleteCacheResponse_one_of_decls, __CreateCacheRequest_one_of_decls, __CreateCacheResponse_one_of_decls, __ListCachesRequest_one_of_decls, __CacheLimits_one_of_decls, __TopicLimits_one_of_decls, __Cache_one_of_decls, __ListCachesResponse_one_of_decls, __CreateSigningKeyRequest_one_of_decls, __CreateSigningKeyResponse_one_of_decls, __RevokeSigningKeyRequest_one_of_decls, __RevokeSigningKeyResponse_one_of_decls, __SigningKey_one_of_decls, __ListSigningKeysRequest_one_of_decls, __ListSigningKeysResponse_one_of_decls, __FlushCacheRequest_one_of_decls, __FlushCacheResponse_one_of_decls;
    class _CreateStoreRequest extends pb_1.Message {
        constructor(data){
            super();
            __CreateStoreRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __CreateStoreRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("store_name" in data && data.store_name != undefined) {
                    this.store_name = data.store_name;
                }
            }
        }
        get store_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set store_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _CreateStoreRequest({});
            if (data.store_name != null) {
                message.store_name = data.store_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.store_name != null) {
                data.store_name = this.store_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.store_name.length) writer.writeString(1, this.store_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _CreateStoreRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.store_name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _CreateStoreRequest.deserialize(bytes);
        }
    }
    __CreateStoreRequest_one_of_decls = new WeakMap();
    control_client._CreateStoreRequest = _CreateStoreRequest;
    class _CreateStoreResponse extends pb_1.Message {
        constructor(data){
            super();
            __CreateStoreResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __CreateStoreResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _CreateStoreResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _CreateStoreResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _CreateStoreResponse.deserialize(bytes);
        }
    }
    __CreateStoreResponse_one_of_decls = new WeakMap();
    control_client._CreateStoreResponse = _CreateStoreResponse;
    class _DeleteStoreRequest extends pb_1.Message {
        constructor(data){
            super();
            __DeleteStoreRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DeleteStoreRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("store_name" in data && data.store_name != undefined) {
                    this.store_name = data.store_name;
                }
            }
        }
        get store_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set store_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _DeleteStoreRequest({});
            if (data.store_name != null) {
                message.store_name = data.store_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.store_name != null) {
                data.store_name = this.store_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.store_name.length) writer.writeString(1, this.store_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DeleteStoreRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.store_name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DeleteStoreRequest.deserialize(bytes);
        }
    }
    __DeleteStoreRequest_one_of_decls = new WeakMap();
    control_client._DeleteStoreRequest = _DeleteStoreRequest;
    class _DeleteStoreResponse extends pb_1.Message {
        constructor(data){
            super();
            __DeleteStoreResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DeleteStoreResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _DeleteStoreResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DeleteStoreResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DeleteStoreResponse.deserialize(bytes);
        }
    }
    __DeleteStoreResponse_one_of_decls = new WeakMap();
    control_client._DeleteStoreResponse = _DeleteStoreResponse;
    class _ListStoresRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListStoresRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListStoresRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("next_token" in data && data.next_token != undefined) {
                    this.next_token = data.next_token;
                }
            }
        }
        get next_token() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set next_token(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ListStoresRequest({});
            if (data.next_token != null) {
                message.next_token = data.next_token;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.next_token != null) {
                data.next_token = this.next_token;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.next_token.length) writer.writeString(1, this.next_token);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListStoresRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.next_token = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListStoresRequest.deserialize(bytes);
        }
    }
    __ListStoresRequest_one_of_decls = new WeakMap();
    control_client._ListStoresRequest = _ListStoresRequest;
    class _ListStoresResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListStoresResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                1
            ], __classPrivateFieldGet(this, __ListStoresResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("store" in data && data.store != undefined) {
                    this.store = data.store;
                }
                if ("next_token" in data && data.next_token != undefined) {
                    this.next_token = data.next_token;
                }
            }
        }
        get store() {
            return pb_1.Message.getRepeatedWrapperField(this, _Store, 1);
        }
        set store(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get next_token() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set next_token(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _ListStoresResponse({});
            if (data.store != null) {
                message.store = data.store.map((item)=>_Store.fromObject(item));
            }
            if (data.next_token != null) {
                message.next_token = data.next_token;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.store != null) {
                data.store = this.store.map((item)=>item.toObject());
            }
            if (this.next_token != null) {
                data.next_token = this.next_token;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.store.length) writer.writeRepeatedMessage(1, this.store, (item)=>item.serialize(writer));
            if (this.next_token.length) writer.writeString(2, this.next_token);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListStoresResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.store, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _Store.deserialize(reader), _Store));
                        break;
                    case 2:
                        message.next_token = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListStoresResponse.deserialize(bytes);
        }
    }
    __ListStoresResponse_one_of_decls = new WeakMap();
    control_client._ListStoresResponse = _ListStoresResponse;
    class _Store extends pb_1.Message {
        constructor(data){
            super();
            __Store_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Store_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("store_name" in data && data.store_name != undefined) {
                    this.store_name = data.store_name;
                }
            }
        }
        get store_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set store_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _Store({});
            if (data.store_name != null) {
                message.store_name = data.store_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.store_name != null) {
                data.store_name = this.store_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.store_name.length) writer.writeString(1, this.store_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Store();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.store_name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _Store.deserialize(bytes);
        }
    }
    __Store_one_of_decls = new WeakMap();
    control_client._Store = _Store;
    class _SimilarityMetric extends pb_1.Message {
        constructor(data){
            super();
            __SimilarityMetric_one_of_decls.set(this, [
                [
                    1,
                    2,
                    3
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SimilarityMetric_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("euclidean_similarity" in data && data.euclidean_similarity != undefined) {
                    this.euclidean_similarity = data.euclidean_similarity;
                }
                if ("inner_product" in data && data.inner_product != undefined) {
                    this.inner_product = data.inner_product;
                }
                if ("cosine_similarity" in data && data.cosine_similarity != undefined) {
                    this.cosine_similarity = data.cosine_similarity;
                }
            }
        }
        get euclidean_similarity() {
            return pb_1.Message.getWrapperField(this, _SimilarityMetric._EuclideanSimilarity, 1);
        }
        set euclidean_similarity(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SimilarityMetric_one_of_decls, "f")[0], value);
        }
        get has_euclidean_similarity() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get inner_product() {
            return pb_1.Message.getWrapperField(this, _SimilarityMetric._InnerProduct, 2);
        }
        set inner_product(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SimilarityMetric_one_of_decls, "f")[0], value);
        }
        get has_inner_product() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get cosine_similarity() {
            return pb_1.Message.getWrapperField(this, _SimilarityMetric._CosineSimilarity, 3);
        }
        set cosine_similarity(value) {
            pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, __SimilarityMetric_one_of_decls, "f")[0], value);
        }
        get has_cosine_similarity() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get similarity_metric() {
            const cases = {
                0: "none",
                1: "euclidean_similarity",
                2: "inner_product",
                3: "cosine_similarity"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2,
                3
            ])];
        }
        static fromObject(data) {
            const message = new _SimilarityMetric({});
            if (data.euclidean_similarity != null) {
                message.euclidean_similarity = _SimilarityMetric._EuclideanSimilarity.fromObject(data.euclidean_similarity);
            }
            if (data.inner_product != null) {
                message.inner_product = _SimilarityMetric._InnerProduct.fromObject(data.inner_product);
            }
            if (data.cosine_similarity != null) {
                message.cosine_similarity = _SimilarityMetric._CosineSimilarity.fromObject(data.cosine_similarity);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.euclidean_similarity != null) {
                data.euclidean_similarity = this.euclidean_similarity.toObject();
            }
            if (this.inner_product != null) {
                data.inner_product = this.inner_product.toObject();
            }
            if (this.cosine_similarity != null) {
                data.cosine_similarity = this.cosine_similarity.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_euclidean_similarity) writer.writeMessage(1, this.euclidean_similarity, ()=>this.euclidean_similarity.serialize(writer));
            if (this.has_inner_product) writer.writeMessage(2, this.inner_product, ()=>this.inner_product.serialize(writer));
            if (this.has_cosine_similarity) writer.writeMessage(3, this.cosine_similarity, ()=>this.cosine_similarity.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SimilarityMetric();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.euclidean_similarity, ()=>message.euclidean_similarity = _SimilarityMetric._EuclideanSimilarity.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.inner_product, ()=>message.inner_product = _SimilarityMetric._InnerProduct.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.cosine_similarity, ()=>message.cosine_similarity = _SimilarityMetric._CosineSimilarity.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SimilarityMetric.deserialize(bytes);
        }
    }
    __SimilarityMetric_one_of_decls = new WeakMap();
    control_client._SimilarityMetric = _SimilarityMetric;
    (function(_SimilarityMetric) {
        var __EuclideanSimilarity_one_of_decls, __InnerProduct_one_of_decls, __CosineSimilarity_one_of_decls;
        class _EuclideanSimilarity extends pb_1.Message {
            constructor(data){
                super();
                __EuclideanSimilarity_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __EuclideanSimilarity_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _EuclideanSimilarity({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _EuclideanSimilarity();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _EuclideanSimilarity.deserialize(bytes);
            }
        }
        __EuclideanSimilarity_one_of_decls = new WeakMap();
        _SimilarityMetric._EuclideanSimilarity = _EuclideanSimilarity;
        class _InnerProduct extends pb_1.Message {
            constructor(data){
                super();
                __InnerProduct_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __InnerProduct_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _InnerProduct({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _InnerProduct();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _InnerProduct.deserialize(bytes);
            }
        }
        __InnerProduct_one_of_decls = new WeakMap();
        _SimilarityMetric._InnerProduct = _InnerProduct;
        class _CosineSimilarity extends pb_1.Message {
            constructor(data){
                super();
                __CosineSimilarity_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __CosineSimilarity_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _CosineSimilarity({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _CosineSimilarity();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _CosineSimilarity.deserialize(bytes);
            }
        }
        __CosineSimilarity_one_of_decls = new WeakMap();
        _SimilarityMetric._CosineSimilarity = _CosineSimilarity;
    })(_SimilarityMetric = control_client._SimilarityMetric || (control_client._SimilarityMetric = {}));
    class _CreateIndexRequest extends pb_1.Message {
        constructor(data){
            super();
            __CreateIndexRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __CreateIndexRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("index_name" in data && data.index_name != undefined) {
                    this.index_name = data.index_name;
                }
                if ("num_dimensions" in data && data.num_dimensions != undefined) {
                    this.num_dimensions = data.num_dimensions;
                }
                if ("similarity_metric" in data && data.similarity_metric != undefined) {
                    this.similarity_metric = data.similarity_metric;
                }
            }
        }
        get index_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set index_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get num_dimensions() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set num_dimensions(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get similarity_metric() {
            return pb_1.Message.getWrapperField(this, _SimilarityMetric, 3);
        }
        set similarity_metric(value) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_similarity_metric() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data) {
            const message = new _CreateIndexRequest({});
            if (data.index_name != null) {
                message.index_name = data.index_name;
            }
            if (data.num_dimensions != null) {
                message.num_dimensions = data.num_dimensions;
            }
            if (data.similarity_metric != null) {
                message.similarity_metric = _SimilarityMetric.fromObject(data.similarity_metric);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.index_name != null) {
                data.index_name = this.index_name;
            }
            if (this.num_dimensions != null) {
                data.num_dimensions = this.num_dimensions;
            }
            if (this.similarity_metric != null) {
                data.similarity_metric = this.similarity_metric.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.index_name.length) writer.writeString(1, this.index_name);
            if (this.num_dimensions != 0) writer.writeUint64(2, this.num_dimensions);
            if (this.has_similarity_metric) writer.writeMessage(3, this.similarity_metric, ()=>this.similarity_metric.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _CreateIndexRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.index_name = reader.readString();
                        break;
                    case 2:
                        message.num_dimensions = reader.readUint64();
                        break;
                    case 3:
                        reader.readMessage(message.similarity_metric, ()=>message.similarity_metric = _SimilarityMetric.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _CreateIndexRequest.deserialize(bytes);
        }
    }
    __CreateIndexRequest_one_of_decls = new WeakMap();
    control_client._CreateIndexRequest = _CreateIndexRequest;
    class _CreateIndexResponse extends pb_1.Message {
        constructor(data){
            super();
            __CreateIndexResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __CreateIndexResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _CreateIndexResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _CreateIndexResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _CreateIndexResponse.deserialize(bytes);
        }
    }
    __CreateIndexResponse_one_of_decls = new WeakMap();
    control_client._CreateIndexResponse = _CreateIndexResponse;
    class _DeleteIndexRequest extends pb_1.Message {
        constructor(data){
            super();
            __DeleteIndexRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DeleteIndexRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("index_name" in data && data.index_name != undefined) {
                    this.index_name = data.index_name;
                }
            }
        }
        get index_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set index_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _DeleteIndexRequest({});
            if (data.index_name != null) {
                message.index_name = data.index_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.index_name != null) {
                data.index_name = this.index_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.index_name.length) writer.writeString(1, this.index_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DeleteIndexRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.index_name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DeleteIndexRequest.deserialize(bytes);
        }
    }
    __DeleteIndexRequest_one_of_decls = new WeakMap();
    control_client._DeleteIndexRequest = _DeleteIndexRequest;
    class _DeleteIndexResponse extends pb_1.Message {
        constructor(data){
            super();
            __DeleteIndexResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DeleteIndexResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _DeleteIndexResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DeleteIndexResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DeleteIndexResponse.deserialize(bytes);
        }
    }
    __DeleteIndexResponse_one_of_decls = new WeakMap();
    control_client._DeleteIndexResponse = _DeleteIndexResponse;
    class _ListIndexesRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListIndexesRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListIndexesRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _ListIndexesRequest({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListIndexesRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListIndexesRequest.deserialize(bytes);
        }
    }
    __ListIndexesRequest_one_of_decls = new WeakMap();
    control_client._ListIndexesRequest = _ListIndexesRequest;
    class _ListIndexesResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListIndexesResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                1
            ], __classPrivateFieldGet(this, __ListIndexesResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("indexes" in data && data.indexes != undefined) {
                    this.indexes = data.indexes;
                }
            }
        }
        get indexes() {
            return pb_1.Message.getRepeatedWrapperField(this, _ListIndexesResponse._Index, 1);
        }
        set indexes(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ListIndexesResponse({});
            if (data.indexes != null) {
                message.indexes = data.indexes.map((item)=>_ListIndexesResponse._Index.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.indexes != null) {
                data.indexes = this.indexes.map((item)=>item.toObject());
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.indexes.length) writer.writeRepeatedMessage(1, this.indexes, (item)=>item.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListIndexesResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.indexes, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _ListIndexesResponse._Index.deserialize(reader), _ListIndexesResponse._Index));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListIndexesResponse.deserialize(bytes);
        }
    }
    __ListIndexesResponse_one_of_decls = new WeakMap();
    control_client._ListIndexesResponse = _ListIndexesResponse;
    (function(_ListIndexesResponse) {
        var __Index_one_of_decls;
        class _Index extends pb_1.Message {
            constructor(data){
                super();
                __Index_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Index_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("index_name" in data && data.index_name != undefined) {
                        this.index_name = data.index_name;
                    }
                    if ("num_dimensions" in data && data.num_dimensions != undefined) {
                        this.num_dimensions = data.num_dimensions;
                    }
                    if ("similarity_metric" in data && data.similarity_metric != undefined) {
                        this.similarity_metric = data.similarity_metric;
                    }
                }
            }
            get index_name() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set index_name(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get num_dimensions() {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            }
            set num_dimensions(value) {
                pb_1.Message.setField(this, 2, value);
            }
            get similarity_metric() {
                return pb_1.Message.getWrapperField(this, _SimilarityMetric, 3);
            }
            set similarity_metric(value) {
                pb_1.Message.setWrapperField(this, 3, value);
            }
            get has_similarity_metric() {
                return pb_1.Message.getField(this, 3) != null;
            }
            static fromObject(data) {
                const message = new _Index({});
                if (data.index_name != null) {
                    message.index_name = data.index_name;
                }
                if (data.num_dimensions != null) {
                    message.num_dimensions = data.num_dimensions;
                }
                if (data.similarity_metric != null) {
                    message.similarity_metric = _SimilarityMetric.fromObject(data.similarity_metric);
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.index_name != null) {
                    data.index_name = this.index_name;
                }
                if (this.num_dimensions != null) {
                    data.num_dimensions = this.num_dimensions;
                }
                if (this.similarity_metric != null) {
                    data.similarity_metric = this.similarity_metric.toObject();
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.index_name.length) writer.writeString(1, this.index_name);
                if (this.num_dimensions != 0) writer.writeUint64(2, this.num_dimensions);
                if (this.has_similarity_metric) writer.writeMessage(3, this.similarity_metric, ()=>this.similarity_metric.serialize(writer));
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Index();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.index_name = reader.readString();
                            break;
                        case 2:
                            message.num_dimensions = reader.readUint64();
                            break;
                        case 3:
                            reader.readMessage(message.similarity_metric, ()=>message.similarity_metric = _SimilarityMetric.deserialize(reader));
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Index.deserialize(bytes);
            }
        }
        __Index_one_of_decls = new WeakMap();
        _ListIndexesResponse._Index = _Index;
    })(_ListIndexesResponse = control_client._ListIndexesResponse || (control_client._ListIndexesResponse = {}));
    class _DeleteCacheRequest extends pb_1.Message {
        constructor(data){
            super();
            __DeleteCacheRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DeleteCacheRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _DeleteCacheRequest({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DeleteCacheRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DeleteCacheRequest.deserialize(bytes);
        }
    }
    __DeleteCacheRequest_one_of_decls = new WeakMap();
    control_client._DeleteCacheRequest = _DeleteCacheRequest;
    class _DeleteCacheResponse extends pb_1.Message {
        constructor(data){
            super();
            __DeleteCacheResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DeleteCacheResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _DeleteCacheResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DeleteCacheResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DeleteCacheResponse.deserialize(bytes);
        }
    }
    __DeleteCacheResponse_one_of_decls = new WeakMap();
    control_client._DeleteCacheResponse = _DeleteCacheResponse;
    class _CreateCacheRequest extends pb_1.Message {
        constructor(data){
            super();
            __CreateCacheRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __CreateCacheRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _CreateCacheRequest({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _CreateCacheRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _CreateCacheRequest.deserialize(bytes);
        }
    }
    __CreateCacheRequest_one_of_decls = new WeakMap();
    control_client._CreateCacheRequest = _CreateCacheRequest;
    class _CreateCacheResponse extends pb_1.Message {
        constructor(data){
            super();
            __CreateCacheResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __CreateCacheResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _CreateCacheResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _CreateCacheResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _CreateCacheResponse.deserialize(bytes);
        }
    }
    __CreateCacheResponse_one_of_decls = new WeakMap();
    control_client._CreateCacheResponse = _CreateCacheResponse;
    class _ListCachesRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListCachesRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListCachesRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("next_token" in data && data.next_token != undefined) {
                    this.next_token = data.next_token;
                }
            }
        }
        get next_token() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set next_token(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ListCachesRequest({});
            if (data.next_token != null) {
                message.next_token = data.next_token;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.next_token != null) {
                data.next_token = this.next_token;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.next_token.length) writer.writeString(1, this.next_token);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListCachesRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.next_token = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListCachesRequest.deserialize(bytes);
        }
    }
    __ListCachesRequest_one_of_decls = new WeakMap();
    control_client._ListCachesRequest = _ListCachesRequest;
    class _CacheLimits extends pb_1.Message {
        constructor(data){
            super();
            __CacheLimits_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __CacheLimits_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("max_traffic_rate" in data && data.max_traffic_rate != undefined) {
                    this.max_traffic_rate = data.max_traffic_rate;
                }
                if ("max_throughput_kbps" in data && data.max_throughput_kbps != undefined) {
                    this.max_throughput_kbps = data.max_throughput_kbps;
                }
                if ("max_item_size_kb" in data && data.max_item_size_kb != undefined) {
                    this.max_item_size_kb = data.max_item_size_kb;
                }
                if ("max_ttl_seconds" in data && data.max_ttl_seconds != undefined) {
                    this.max_ttl_seconds = data.max_ttl_seconds;
                }
            }
        }
        get max_traffic_rate() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set max_traffic_rate(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get max_throughput_kbps() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set max_throughput_kbps(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get max_item_size_kb() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set max_item_size_kb(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get max_ttl_seconds() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0);
        }
        set max_ttl_seconds(value) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data) {
            const message = new _CacheLimits({});
            if (data.max_traffic_rate != null) {
                message.max_traffic_rate = data.max_traffic_rate;
            }
            if (data.max_throughput_kbps != null) {
                message.max_throughput_kbps = data.max_throughput_kbps;
            }
            if (data.max_item_size_kb != null) {
                message.max_item_size_kb = data.max_item_size_kb;
            }
            if (data.max_ttl_seconds != null) {
                message.max_ttl_seconds = data.max_ttl_seconds;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.max_traffic_rate != null) {
                data.max_traffic_rate = this.max_traffic_rate;
            }
            if (this.max_throughput_kbps != null) {
                data.max_throughput_kbps = this.max_throughput_kbps;
            }
            if (this.max_item_size_kb != null) {
                data.max_item_size_kb = this.max_item_size_kb;
            }
            if (this.max_ttl_seconds != null) {
                data.max_ttl_seconds = this.max_ttl_seconds;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.max_traffic_rate != 0) writer.writeUint32(1, this.max_traffic_rate);
            if (this.max_throughput_kbps != 0) writer.writeUint32(2, this.max_throughput_kbps);
            if (this.max_item_size_kb != 0) writer.writeUint32(3, this.max_item_size_kb);
            if (this.max_ttl_seconds != 0) writer.writeUint64(4, this.max_ttl_seconds);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _CacheLimits();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.max_traffic_rate = reader.readUint32();
                        break;
                    case 2:
                        message.max_throughput_kbps = reader.readUint32();
                        break;
                    case 3:
                        message.max_item_size_kb = reader.readUint32();
                        break;
                    case 4:
                        message.max_ttl_seconds = reader.readUint64();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _CacheLimits.deserialize(bytes);
        }
    }
    __CacheLimits_one_of_decls = new WeakMap();
    control_client._CacheLimits = _CacheLimits;
    class _TopicLimits extends pb_1.Message {
        constructor(data){
            super();
            __TopicLimits_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __TopicLimits_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("max_publish_rate" in data && data.max_publish_rate != undefined) {
                    this.max_publish_rate = data.max_publish_rate;
                }
                if ("max_subscription_count" in data && data.max_subscription_count != undefined) {
                    this.max_subscription_count = data.max_subscription_count;
                }
                if ("max_publish_message_size_kb" in data && data.max_publish_message_size_kb != undefined) {
                    this.max_publish_message_size_kb = data.max_publish_message_size_kb;
                }
            }
        }
        get max_publish_rate() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set max_publish_rate(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get max_subscription_count() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set max_subscription_count(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get max_publish_message_size_kb() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set max_publish_message_size_kb(value) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data) {
            const message = new _TopicLimits({});
            if (data.max_publish_rate != null) {
                message.max_publish_rate = data.max_publish_rate;
            }
            if (data.max_subscription_count != null) {
                message.max_subscription_count = data.max_subscription_count;
            }
            if (data.max_publish_message_size_kb != null) {
                message.max_publish_message_size_kb = data.max_publish_message_size_kb;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.max_publish_rate != null) {
                data.max_publish_rate = this.max_publish_rate;
            }
            if (this.max_subscription_count != null) {
                data.max_subscription_count = this.max_subscription_count;
            }
            if (this.max_publish_message_size_kb != null) {
                data.max_publish_message_size_kb = this.max_publish_message_size_kb;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.max_publish_rate != 0) writer.writeUint32(1, this.max_publish_rate);
            if (this.max_subscription_count != 0) writer.writeUint32(2, this.max_subscription_count);
            if (this.max_publish_message_size_kb != 0) writer.writeUint32(3, this.max_publish_message_size_kb);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _TopicLimits();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.max_publish_rate = reader.readUint32();
                        break;
                    case 2:
                        message.max_subscription_count = reader.readUint32();
                        break;
                    case 3:
                        message.max_publish_message_size_kb = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _TopicLimits.deserialize(bytes);
        }
    }
    __TopicLimits_one_of_decls = new WeakMap();
    control_client._TopicLimits = _TopicLimits;
    class _Cache extends pb_1.Message {
        constructor(data){
            super();
            __Cache_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Cache_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
                if ("cache_limits" in data && data.cache_limits != undefined) {
                    this.cache_limits = data.cache_limits;
                }
                if ("topic_limits" in data && data.topic_limits != undefined) {
                    this.topic_limits = data.topic_limits;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get cache_limits() {
            return pb_1.Message.getWrapperField(this, _CacheLimits, 2);
        }
        set cache_limits(value) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_cache_limits() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get topic_limits() {
            return pb_1.Message.getWrapperField(this, _TopicLimits, 3);
        }
        set topic_limits(value) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_topic_limits() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data) {
            const message = new _Cache({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            if (data.cache_limits != null) {
                message.cache_limits = _CacheLimits.fromObject(data.cache_limits);
            }
            if (data.topic_limits != null) {
                message.topic_limits = _TopicLimits.fromObject(data.topic_limits);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            if (this.cache_limits != null) {
                data.cache_limits = this.cache_limits.toObject();
            }
            if (this.topic_limits != null) {
                data.topic_limits = this.topic_limits.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (this.has_cache_limits) writer.writeMessage(2, this.cache_limits, ()=>this.cache_limits.serialize(writer));
            if (this.has_topic_limits) writer.writeMessage(3, this.topic_limits, ()=>this.topic_limits.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Cache();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.cache_limits, ()=>message.cache_limits = _CacheLimits.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.topic_limits, ()=>message.topic_limits = _TopicLimits.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _Cache.deserialize(bytes);
        }
    }
    __Cache_one_of_decls = new WeakMap();
    control_client._Cache = _Cache;
    class _ListCachesResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListCachesResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                1
            ], __classPrivateFieldGet(this, __ListCachesResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache" in data && data.cache != undefined) {
                    this.cache = data.cache;
                }
                if ("next_token" in data && data.next_token != undefined) {
                    this.next_token = data.next_token;
                }
            }
        }
        get cache() {
            return pb_1.Message.getRepeatedWrapperField(this, _Cache, 1);
        }
        set cache(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get next_token() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set next_token(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _ListCachesResponse({});
            if (data.cache != null) {
                message.cache = data.cache.map((item)=>_Cache.fromObject(item));
            }
            if (data.next_token != null) {
                message.next_token = data.next_token;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache != null) {
                data.cache = this.cache.map((item)=>item.toObject());
            }
            if (this.next_token != null) {
                data.next_token = this.next_token;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache.length) writer.writeRepeatedMessage(1, this.cache, (item)=>item.serialize(writer));
            if (this.next_token.length) writer.writeString(2, this.next_token);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListCachesResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.cache, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _Cache.deserialize(reader), _Cache));
                        break;
                    case 2:
                        message.next_token = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListCachesResponse.deserialize(bytes);
        }
    }
    __ListCachesResponse_one_of_decls = new WeakMap();
    control_client._ListCachesResponse = _ListCachesResponse;
    class _CreateSigningKeyRequest extends pb_1.Message {
        constructor(data){
            super();
            __CreateSigningKeyRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __CreateSigningKeyRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("ttl_minutes" in data && data.ttl_minutes != undefined) {
                    this.ttl_minutes = data.ttl_minutes;
                }
            }
        }
        get ttl_minutes() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set ttl_minutes(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _CreateSigningKeyRequest({});
            if (data.ttl_minutes != null) {
                message.ttl_minutes = data.ttl_minutes;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.ttl_minutes != null) {
                data.ttl_minutes = this.ttl_minutes;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.ttl_minutes != 0) writer.writeUint32(1, this.ttl_minutes);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _CreateSigningKeyRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.ttl_minutes = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _CreateSigningKeyRequest.deserialize(bytes);
        }
    }
    __CreateSigningKeyRequest_one_of_decls = new WeakMap();
    control_client._CreateSigningKeyRequest = _CreateSigningKeyRequest;
    class _CreateSigningKeyResponse extends pb_1.Message {
        constructor(data){
            super();
            __CreateSigningKeyResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __CreateSigningKeyResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("key" in data && data.key != undefined) {
                    this.key = data.key;
                }
                if ("expires_at" in data && data.expires_at != undefined) {
                    this.expires_at = data.expires_at;
                }
            }
        }
        get key() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get expires_at() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set expires_at(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _CreateSigningKeyResponse({});
            if (data.key != null) {
                message.key = data.key;
            }
            if (data.expires_at != null) {
                message.expires_at = data.expires_at;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.key != null) {
                data.key = this.key;
            }
            if (this.expires_at != null) {
                data.expires_at = this.expires_at;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.key.length) writer.writeString(1, this.key);
            if (this.expires_at != 0) writer.writeUint64(2, this.expires_at);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _CreateSigningKeyResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.key = reader.readString();
                        break;
                    case 2:
                        message.expires_at = reader.readUint64();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _CreateSigningKeyResponse.deserialize(bytes);
        }
    }
    __CreateSigningKeyResponse_one_of_decls = new WeakMap();
    control_client._CreateSigningKeyResponse = _CreateSigningKeyResponse;
    class _RevokeSigningKeyRequest extends pb_1.Message {
        constructor(data){
            super();
            __RevokeSigningKeyRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __RevokeSigningKeyRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("key_id" in data && data.key_id != undefined) {
                    this.key_id = data.key_id;
                }
            }
        }
        get key_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set key_id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _RevokeSigningKeyRequest({});
            if (data.key_id != null) {
                message.key_id = data.key_id;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.key_id != null) {
                data.key_id = this.key_id;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.key_id.length) writer.writeString(1, this.key_id);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _RevokeSigningKeyRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.key_id = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _RevokeSigningKeyRequest.deserialize(bytes);
        }
    }
    __RevokeSigningKeyRequest_one_of_decls = new WeakMap();
    control_client._RevokeSigningKeyRequest = _RevokeSigningKeyRequest;
    class _RevokeSigningKeyResponse extends pb_1.Message {
        constructor(data){
            super();
            __RevokeSigningKeyResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __RevokeSigningKeyResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _RevokeSigningKeyResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _RevokeSigningKeyResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _RevokeSigningKeyResponse.deserialize(bytes);
        }
    }
    __RevokeSigningKeyResponse_one_of_decls = new WeakMap();
    control_client._RevokeSigningKeyResponse = _RevokeSigningKeyResponse;
    class _SigningKey extends pb_1.Message {
        constructor(data){
            super();
            __SigningKey_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SigningKey_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("key_id" in data && data.key_id != undefined) {
                    this.key_id = data.key_id;
                }
                if ("expires_at" in data && data.expires_at != undefined) {
                    this.expires_at = data.expires_at;
                }
            }
        }
        get key_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set key_id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get expires_at() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set expires_at(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _SigningKey({});
            if (data.key_id != null) {
                message.key_id = data.key_id;
            }
            if (data.expires_at != null) {
                message.expires_at = data.expires_at;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.key_id != null) {
                data.key_id = this.key_id;
            }
            if (this.expires_at != null) {
                data.expires_at = this.expires_at;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.key_id.length) writer.writeString(1, this.key_id);
            if (this.expires_at != 0) writer.writeUint64(2, this.expires_at);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SigningKey();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.key_id = reader.readString();
                        break;
                    case 2:
                        message.expires_at = reader.readUint64();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _SigningKey.deserialize(bytes);
        }
    }
    __SigningKey_one_of_decls = new WeakMap();
    control_client._SigningKey = _SigningKey;
    class _ListSigningKeysRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListSigningKeysRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListSigningKeysRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("next_token" in data && data.next_token != undefined) {
                    this.next_token = data.next_token;
                }
            }
        }
        get next_token() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set next_token(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ListSigningKeysRequest({});
            if (data.next_token != null) {
                message.next_token = data.next_token;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.next_token != null) {
                data.next_token = this.next_token;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.next_token.length) writer.writeString(1, this.next_token);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListSigningKeysRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.next_token = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListSigningKeysRequest.deserialize(bytes);
        }
    }
    __ListSigningKeysRequest_one_of_decls = new WeakMap();
    control_client._ListSigningKeysRequest = _ListSigningKeysRequest;
    class _ListSigningKeysResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListSigningKeysResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                1
            ], __classPrivateFieldGet(this, __ListSigningKeysResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("signing_key" in data && data.signing_key != undefined) {
                    this.signing_key = data.signing_key;
                }
                if ("next_token" in data && data.next_token != undefined) {
                    this.next_token = data.next_token;
                }
            }
        }
        get signing_key() {
            return pb_1.Message.getRepeatedWrapperField(this, _SigningKey, 1);
        }
        set signing_key(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get next_token() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set next_token(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _ListSigningKeysResponse({});
            if (data.signing_key != null) {
                message.signing_key = data.signing_key.map((item)=>_SigningKey.fromObject(item));
            }
            if (data.next_token != null) {
                message.next_token = data.next_token;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.signing_key != null) {
                data.signing_key = this.signing_key.map((item)=>item.toObject());
            }
            if (this.next_token != null) {
                data.next_token = this.next_token;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.signing_key.length) writer.writeRepeatedMessage(1, this.signing_key, (item)=>item.serialize(writer));
            if (this.next_token.length) writer.writeString(2, this.next_token);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListSigningKeysResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.signing_key, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _SigningKey.deserialize(reader), _SigningKey));
                        break;
                    case 2:
                        message.next_token = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListSigningKeysResponse.deserialize(bytes);
        }
    }
    __ListSigningKeysResponse_one_of_decls = new WeakMap();
    control_client._ListSigningKeysResponse = _ListSigningKeysResponse;
    class _FlushCacheRequest extends pb_1.Message {
        constructor(data){
            super();
            __FlushCacheRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __FlushCacheRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _FlushCacheRequest({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _FlushCacheRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _FlushCacheRequest.deserialize(bytes);
        }
    }
    __FlushCacheRequest_one_of_decls = new WeakMap();
    control_client._FlushCacheRequest = _FlushCacheRequest;
    class _FlushCacheResponse extends pb_1.Message {
        constructor(data){
            super();
            __FlushCacheResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __FlushCacheResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _FlushCacheResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _FlushCacheResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _FlushCacheResponse.deserialize(bytes);
        }
    }
    __FlushCacheResponse_one_of_decls = new WeakMap();
    control_client._FlushCacheResponse = _FlushCacheResponse;
    class UnimplementedScsControlService {
    }
    UnimplementedScsControlService.definition = {
        CreateCache: {
            path: "/control_client.ScsControl/CreateCache",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_CreateCacheRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_CreateCacheResponse.deserialize(new Uint8Array(bytes))
        },
        DeleteCache: {
            path: "/control_client.ScsControl/DeleteCache",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_DeleteCacheRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_DeleteCacheResponse.deserialize(new Uint8Array(bytes))
        },
        ListCaches: {
            path: "/control_client.ScsControl/ListCaches",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListCachesRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListCachesResponse.deserialize(new Uint8Array(bytes))
        },
        FlushCache: {
            path: "/control_client.ScsControl/FlushCache",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_FlushCacheRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_FlushCacheResponse.deserialize(new Uint8Array(bytes))
        },
        CreateSigningKey: {
            path: "/control_client.ScsControl/CreateSigningKey",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_CreateSigningKeyRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_CreateSigningKeyResponse.deserialize(new Uint8Array(bytes))
        },
        RevokeSigningKey: {
            path: "/control_client.ScsControl/RevokeSigningKey",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_RevokeSigningKeyRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_RevokeSigningKeyResponse.deserialize(new Uint8Array(bytes))
        },
        ListSigningKeys: {
            path: "/control_client.ScsControl/ListSigningKeys",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListSigningKeysRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListSigningKeysResponse.deserialize(new Uint8Array(bytes))
        },
        CreateIndex: {
            path: "/control_client.ScsControl/CreateIndex",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_CreateIndexRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_CreateIndexResponse.deserialize(new Uint8Array(bytes))
        },
        DeleteIndex: {
            path: "/control_client.ScsControl/DeleteIndex",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_DeleteIndexRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_DeleteIndexResponse.deserialize(new Uint8Array(bytes))
        },
        ListIndexes: {
            path: "/control_client.ScsControl/ListIndexes",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListIndexesRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListIndexesResponse.deserialize(new Uint8Array(bytes))
        },
        CreateStore: {
            path: "/control_client.ScsControl/CreateStore",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_CreateStoreRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_CreateStoreResponse.deserialize(new Uint8Array(bytes))
        },
        DeleteStore: {
            path: "/control_client.ScsControl/DeleteStore",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_DeleteStoreRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_DeleteStoreResponse.deserialize(new Uint8Array(bytes))
        },
        ListStores: {
            path: "/control_client.ScsControl/ListStores",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListStoresRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListStoresResponse.deserialize(new Uint8Array(bytes))
        }
    };
    control_client.UnimplementedScsControlService = UnimplementedScsControlService;
    class ScsControlClient extends grpc_1.makeGenericClientConstructor(UnimplementedScsControlService.definition, "ScsControl", {}) {
        constructor(address, credentials, options){
            super(address, credentials, options);
            this.CreateCache = (message, metadata, options, callback)=>{
                return super.CreateCache(message, metadata, options, callback);
            };
            this.DeleteCache = (message, metadata, options, callback)=>{
                return super.DeleteCache(message, metadata, options, callback);
            };
            this.ListCaches = (message, metadata, options, callback)=>{
                return super.ListCaches(message, metadata, options, callback);
            };
            this.FlushCache = (message, metadata, options, callback)=>{
                return super.FlushCache(message, metadata, options, callback);
            };
            this.CreateSigningKey = (message, metadata, options, callback)=>{
                return super.CreateSigningKey(message, metadata, options, callback);
            };
            this.RevokeSigningKey = (message, metadata, options, callback)=>{
                return super.RevokeSigningKey(message, metadata, options, callback);
            };
            this.ListSigningKeys = (message, metadata, options, callback)=>{
                return super.ListSigningKeys(message, metadata, options, callback);
            };
            this.CreateIndex = (message, metadata, options, callback)=>{
                return super.CreateIndex(message, metadata, options, callback);
            };
            this.DeleteIndex = (message, metadata, options, callback)=>{
                return super.DeleteIndex(message, metadata, options, callback);
            };
            this.ListIndexes = (message, metadata, options, callback)=>{
                return super.ListIndexes(message, metadata, options, callback);
            };
            this.CreateStore = (message, metadata, options, callback)=>{
                return super.CreateStore(message, metadata, options, callback);
            };
            this.DeleteStore = (message, metadata, options, callback)=>{
                return super.DeleteStore(message, metadata, options, callback);
            };
            this.ListStores = (message, metadata, options, callback)=>{
                return super.ListStores(message, metadata, options, callback);
            };
        }
    }
    control_client.ScsControlClient = ScsControlClient;
})(control_client = exports.control_client || (exports.control_client = {}));

}.call(this) }),
"[project]/node_modules/@gomomento/generated-types/dist/cachepubsub.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.cache_client = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: cachepubsub.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */ const dependency_1 = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/common.js [app-route] (ecmascript)"));
const pb_1 = __importStar(__turbopack_require__("[project]/node_modules/google-protobuf/google-protobuf.js [app-route] (ecmascript)"));
const grpc_1 = __importStar(__turbopack_require__("[project]/node_modules/@grpc/grpc-js/build/src/index.js [app-route] (ecmascript)"));
var cache_client;
(function(cache_client) {
    var pubsub;
    (function(pubsub) {
        var __PublishRequest_one_of_decls, __SubscriptionRequest_one_of_decls, __SubscriptionItem_one_of_decls, __TopicItem_one_of_decls, __TopicValue_one_of_decls, __Discontinuity_one_of_decls, __Heartbeat_one_of_decls;
        class _PublishRequest extends pb_1.Message {
            constructor(data){
                super();
                __PublishRequest_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __PublishRequest_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("cache_name" in data && data.cache_name != undefined) {
                        this.cache_name = data.cache_name;
                    }
                    if ("topic" in data && data.topic != undefined) {
                        this.topic = data.topic;
                    }
                    if ("value" in data && data.value != undefined) {
                        this.value = data.value;
                    }
                }
            }
            get cache_name() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set cache_name(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get topic() {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            }
            set topic(value) {
                pb_1.Message.setField(this, 2, value);
            }
            get value() {
                return pb_1.Message.getWrapperField(this, _TopicValue, 3);
            }
            set value(value) {
                pb_1.Message.setWrapperField(this, 3, value);
            }
            get has_value() {
                return pb_1.Message.getField(this, 3) != null;
            }
            static fromObject(data) {
                const message = new _PublishRequest({});
                if (data.cache_name != null) {
                    message.cache_name = data.cache_name;
                }
                if (data.topic != null) {
                    message.topic = data.topic;
                }
                if (data.value != null) {
                    message.value = _TopicValue.fromObject(data.value);
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.cache_name != null) {
                    data.cache_name = this.cache_name;
                }
                if (this.topic != null) {
                    data.topic = this.topic;
                }
                if (this.value != null) {
                    data.value = this.value.toObject();
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.cache_name.length) writer.writeString(1, this.cache_name);
                if (this.topic.length) writer.writeString(2, this.topic);
                if (this.has_value) writer.writeMessage(3, this.value, ()=>this.value.serialize(writer));
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _PublishRequest();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.cache_name = reader.readString();
                            break;
                        case 2:
                            message.topic = reader.readString();
                            break;
                        case 3:
                            reader.readMessage(message.value, ()=>message.value = _TopicValue.deserialize(reader));
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _PublishRequest.deserialize(bytes);
            }
        }
        __PublishRequest_one_of_decls = new WeakMap();
        pubsub._PublishRequest = _PublishRequest;
        class _SubscriptionRequest extends pb_1.Message {
            constructor(data){
                super();
                __SubscriptionRequest_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SubscriptionRequest_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("cache_name" in data && data.cache_name != undefined) {
                        this.cache_name = data.cache_name;
                    }
                    if ("topic" in data && data.topic != undefined) {
                        this.topic = data.topic;
                    }
                    if ("resume_at_topic_sequence_number" in data && data.resume_at_topic_sequence_number != undefined) {
                        this.resume_at_topic_sequence_number = data.resume_at_topic_sequence_number;
                    }
                }
            }
            get cache_name() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set cache_name(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get topic() {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            }
            set topic(value) {
                pb_1.Message.setField(this, 2, value);
            }
            get resume_at_topic_sequence_number() {
                return pb_1.Message.getFieldWithDefault(this, 3, 0);
            }
            set resume_at_topic_sequence_number(value) {
                pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
                const message = new _SubscriptionRequest({});
                if (data.cache_name != null) {
                    message.cache_name = data.cache_name;
                }
                if (data.topic != null) {
                    message.topic = data.topic;
                }
                if (data.resume_at_topic_sequence_number != null) {
                    message.resume_at_topic_sequence_number = data.resume_at_topic_sequence_number;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.cache_name != null) {
                    data.cache_name = this.cache_name;
                }
                if (this.topic != null) {
                    data.topic = this.topic;
                }
                if (this.resume_at_topic_sequence_number != null) {
                    data.resume_at_topic_sequence_number = this.resume_at_topic_sequence_number;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.cache_name.length) writer.writeString(1, this.cache_name);
                if (this.topic.length) writer.writeString(2, this.topic);
                if (this.resume_at_topic_sequence_number != 0) writer.writeUint64(3, this.resume_at_topic_sequence_number);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SubscriptionRequest();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.cache_name = reader.readString();
                            break;
                        case 2:
                            message.topic = reader.readString();
                            break;
                        case 3:
                            message.resume_at_topic_sequence_number = reader.readUint64();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _SubscriptionRequest.deserialize(bytes);
            }
        }
        __SubscriptionRequest_one_of_decls = new WeakMap();
        pubsub._SubscriptionRequest = _SubscriptionRequest;
        class _SubscriptionItem extends pb_1.Message {
            constructor(data){
                super();
                __SubscriptionItem_one_of_decls.set(this, [
                    [
                        1,
                        2,
                        3
                    ]
                ]);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __SubscriptionItem_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("item" in data && data.item != undefined) {
                        this.item = data.item;
                    }
                    if ("discontinuity" in data && data.discontinuity != undefined) {
                        this.discontinuity = data.discontinuity;
                    }
                    if ("heartbeat" in data && data.heartbeat != undefined) {
                        this.heartbeat = data.heartbeat;
                    }
                }
            }
            get item() {
                return pb_1.Message.getWrapperField(this, _TopicItem, 1);
            }
            set item(value) {
                pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __SubscriptionItem_one_of_decls, "f")[0], value);
            }
            get has_item() {
                return pb_1.Message.getField(this, 1) != null;
            }
            get discontinuity() {
                return pb_1.Message.getWrapperField(this, _Discontinuity, 2);
            }
            set discontinuity(value) {
                pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __SubscriptionItem_one_of_decls, "f")[0], value);
            }
            get has_discontinuity() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get heartbeat() {
                return pb_1.Message.getWrapperField(this, _Heartbeat, 3);
            }
            set heartbeat(value) {
                pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, __SubscriptionItem_one_of_decls, "f")[0], value);
            }
            get has_heartbeat() {
                return pb_1.Message.getField(this, 3) != null;
            }
            get kind() {
                const cases = {
                    0: "none",
                    1: "item",
                    2: "discontinuity",
                    3: "heartbeat"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    1,
                    2,
                    3
                ])];
            }
            static fromObject(data) {
                const message = new _SubscriptionItem({});
                if (data.item != null) {
                    message.item = _TopicItem.fromObject(data.item);
                }
                if (data.discontinuity != null) {
                    message.discontinuity = _Discontinuity.fromObject(data.discontinuity);
                }
                if (data.heartbeat != null) {
                    message.heartbeat = _Heartbeat.fromObject(data.heartbeat);
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.item != null) {
                    data.item = this.item.toObject();
                }
                if (this.discontinuity != null) {
                    data.discontinuity = this.discontinuity.toObject();
                }
                if (this.heartbeat != null) {
                    data.heartbeat = this.heartbeat.toObject();
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.has_item) writer.writeMessage(1, this.item, ()=>this.item.serialize(writer));
                if (this.has_discontinuity) writer.writeMessage(2, this.discontinuity, ()=>this.discontinuity.serialize(writer));
                if (this.has_heartbeat) writer.writeMessage(3, this.heartbeat, ()=>this.heartbeat.serialize(writer));
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _SubscriptionItem();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            reader.readMessage(message.item, ()=>message.item = _TopicItem.deserialize(reader));
                            break;
                        case 2:
                            reader.readMessage(message.discontinuity, ()=>message.discontinuity = _Discontinuity.deserialize(reader));
                            break;
                        case 3:
                            reader.readMessage(message.heartbeat, ()=>message.heartbeat = _Heartbeat.deserialize(reader));
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _SubscriptionItem.deserialize(bytes);
            }
        }
        __SubscriptionItem_one_of_decls = new WeakMap();
        pubsub._SubscriptionItem = _SubscriptionItem;
        class _TopicItem extends pb_1.Message {
            constructor(data){
                super();
                __TopicItem_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __TopicItem_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("topic_sequence_number" in data && data.topic_sequence_number != undefined) {
                        this.topic_sequence_number = data.topic_sequence_number;
                    }
                    if ("value" in data && data.value != undefined) {
                        this.value = data.value;
                    }
                    if ("publisher_id" in data && data.publisher_id != undefined) {
                        this.publisher_id = data.publisher_id;
                    }
                }
            }
            get topic_sequence_number() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set topic_sequence_number(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get value() {
                return pb_1.Message.getWrapperField(this, _TopicValue, 2);
            }
            set value(value) {
                pb_1.Message.setWrapperField(this, 2, value);
            }
            get has_value() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get publisher_id() {
                return pb_1.Message.getFieldWithDefault(this, 3, "");
            }
            set publisher_id(value) {
                pb_1.Message.setField(this, 3, value);
            }
            static fromObject(data) {
                const message = new _TopicItem({});
                if (data.topic_sequence_number != null) {
                    message.topic_sequence_number = data.topic_sequence_number;
                }
                if (data.value != null) {
                    message.value = _TopicValue.fromObject(data.value);
                }
                if (data.publisher_id != null) {
                    message.publisher_id = data.publisher_id;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.topic_sequence_number != null) {
                    data.topic_sequence_number = this.topic_sequence_number;
                }
                if (this.value != null) {
                    data.value = this.value.toObject();
                }
                if (this.publisher_id != null) {
                    data.publisher_id = this.publisher_id;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.topic_sequence_number != 0) writer.writeUint64(1, this.topic_sequence_number);
                if (this.has_value) writer.writeMessage(2, this.value, ()=>this.value.serialize(writer));
                if (this.publisher_id.length) writer.writeString(3, this.publisher_id);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _TopicItem();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.topic_sequence_number = reader.readUint64();
                            break;
                        case 2:
                            reader.readMessage(message.value, ()=>message.value = _TopicValue.deserialize(reader));
                            break;
                        case 3:
                            message.publisher_id = reader.readString();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _TopicItem.deserialize(bytes);
            }
        }
        __TopicItem_one_of_decls = new WeakMap();
        pubsub._TopicItem = _TopicItem;
        class _TopicValue extends pb_1.Message {
            constructor(data){
                super();
                __TopicValue_one_of_decls.set(this, [
                    [
                        1,
                        2
                    ]
                ]);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __TopicValue_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("text" in data && data.text != undefined) {
                        this.text = data.text;
                    }
                    if ("binary" in data && data.binary != undefined) {
                        this.binary = data.binary;
                    }
                }
            }
            get text() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set text(value) {
                pb_1.Message.setOneofField(this, 1, __classPrivateFieldGet(this, __TopicValue_one_of_decls, "f")[0], value);
            }
            get has_text() {
                return pb_1.Message.getField(this, 1) != null;
            }
            get binary() {
                return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
            }
            set binary(value) {
                pb_1.Message.setOneofField(this, 2, __classPrivateFieldGet(this, __TopicValue_one_of_decls, "f")[0], value);
            }
            get has_binary() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get kind() {
                const cases = {
                    0: "none",
                    1: "text",
                    2: "binary"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    1,
                    2
                ])];
            }
            static fromObject(data) {
                const message = new _TopicValue({});
                if (data.text != null) {
                    message.text = data.text;
                }
                if (data.binary != null) {
                    message.binary = data.binary;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.text != null) {
                    data.text = this.text;
                }
                if (this.binary != null) {
                    data.binary = this.binary;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.has_text) writer.writeString(1, this.text);
                if (this.has_binary) writer.writeBytes(2, this.binary);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _TopicValue();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.text = reader.readString();
                            break;
                        case 2:
                            message.binary = reader.readBytes();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _TopicValue.deserialize(bytes);
            }
        }
        __TopicValue_one_of_decls = new WeakMap();
        pubsub._TopicValue = _TopicValue;
        class _Discontinuity extends pb_1.Message {
            constructor(data){
                super();
                __Discontinuity_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Discontinuity_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("last_topic_sequence" in data && data.last_topic_sequence != undefined) {
                        this.last_topic_sequence = data.last_topic_sequence;
                    }
                    if ("new_topic_sequence" in data && data.new_topic_sequence != undefined) {
                        this.new_topic_sequence = data.new_topic_sequence;
                    }
                }
            }
            get last_topic_sequence() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set last_topic_sequence(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get new_topic_sequence() {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            }
            set new_topic_sequence(value) {
                pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
                const message = new _Discontinuity({});
                if (data.last_topic_sequence != null) {
                    message.last_topic_sequence = data.last_topic_sequence;
                }
                if (data.new_topic_sequence != null) {
                    message.new_topic_sequence = data.new_topic_sequence;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.last_topic_sequence != null) {
                    data.last_topic_sequence = this.last_topic_sequence;
                }
                if (this.new_topic_sequence != null) {
                    data.new_topic_sequence = this.new_topic_sequence;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.last_topic_sequence != 0) writer.writeUint64(1, this.last_topic_sequence);
                if (this.new_topic_sequence != 0) writer.writeUint64(2, this.new_topic_sequence);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Discontinuity();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.last_topic_sequence = reader.readUint64();
                            break;
                        case 2:
                            message.new_topic_sequence = reader.readUint64();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Discontinuity.deserialize(bytes);
            }
        }
        __Discontinuity_one_of_decls = new WeakMap();
        pubsub._Discontinuity = _Discontinuity;
        class _Heartbeat extends pb_1.Message {
            constructor(data){
                super();
                __Heartbeat_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Heartbeat_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new _Heartbeat({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Heartbeat();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return _Heartbeat.deserialize(bytes);
            }
        }
        __Heartbeat_one_of_decls = new WeakMap();
        pubsub._Heartbeat = _Heartbeat;
        class UnimplementedPubsubService {
        }
        UnimplementedPubsubService.definition = {
            Publish: {
                path: "/cache_client.pubsub.Pubsub/Publish",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message)=>Buffer.from(message.serialize()),
                requestDeserialize: (bytes)=>_PublishRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message)=>Buffer.from(message.serialize()),
                responseDeserialize: (bytes)=>dependency_1.common._Empty.deserialize(new Uint8Array(bytes))
            },
            Subscribe: {
                path: "/cache_client.pubsub.Pubsub/Subscribe",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message)=>Buffer.from(message.serialize()),
                requestDeserialize: (bytes)=>_SubscriptionRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message)=>Buffer.from(message.serialize()),
                responseDeserialize: (bytes)=>_SubscriptionItem.deserialize(new Uint8Array(bytes))
            }
        };
        pubsub.UnimplementedPubsubService = UnimplementedPubsubService;
        class PubsubClient extends grpc_1.makeGenericClientConstructor(UnimplementedPubsubService.definition, "Pubsub", {}) {
            constructor(address, credentials, options){
                super(address, credentials, options);
                this.Publish = (message, metadata, options, callback)=>{
                    return super.Publish(message, metadata, options, callback);
                };
                this.Subscribe = (message, metadata, options)=>{
                    return super.Subscribe(message, metadata, options);
                };
            }
        }
        pubsub.PubsubClient = PubsubClient;
    })(pubsub = cache_client.pubsub || (cache_client.pubsub = {}));
})(cache_client = exports.cache_client || (exports.cache_client = {}));

}.call(this) }),
"[project]/node_modules/@gomomento/generated-types/dist/cacheping.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.cache_client = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: cacheping.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */ const pb_1 = __importStar(__turbopack_require__("[project]/node_modules/google-protobuf/google-protobuf.js [app-route] (ecmascript)"));
const grpc_1 = __importStar(__turbopack_require__("[project]/node_modules/@grpc/grpc-js/build/src/index.js [app-route] (ecmascript)"));
var cache_client;
(function(cache_client) {
    var __PingRequest_one_of_decls, __PingResponse_one_of_decls;
    class _PingRequest extends pb_1.Message {
        constructor(data){
            super();
            __PingRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __PingRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _PingRequest({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _PingRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _PingRequest.deserialize(bytes);
        }
    }
    __PingRequest_one_of_decls = new WeakMap();
    cache_client._PingRequest = _PingRequest;
    class _PingResponse extends pb_1.Message {
        constructor(data){
            super();
            __PingResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __PingResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _PingResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _PingResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _PingResponse.deserialize(bytes);
        }
    }
    __PingResponse_one_of_decls = new WeakMap();
    cache_client._PingResponse = _PingResponse;
    class UnimplementedPingService {
    }
    UnimplementedPingService.definition = {
        Ping: {
            path: "/cache_client.Ping/Ping",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_PingRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_PingResponse.deserialize(new Uint8Array(bytes))
        }
    };
    cache_client.UnimplementedPingService = UnimplementedPingService;
    class PingClient extends grpc_1.makeGenericClientConstructor(UnimplementedPingService.definition, "Ping", {}) {
        constructor(address, credentials, options){
            super(address, credentials, options);
            this.Ping = (message, metadata, options, callback)=>{
                return super.Ping(message, metadata, options, callback);
            };
        }
    }
    cache_client.PingClient = PingClient;
})(cache_client = exports.cache_client || (exports.cache_client = {}));

}.call(this) }),
"[project]/node_modules/@gomomento/generated-types/dist/permissionmessages.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.permission_messages = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: permissionmessages.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */ const pb_1 = __importStar(__turbopack_require__("[project]/node_modules/google-protobuf/google-protobuf.js [app-route] (ecmascript)"));
var permission_messages;
(function(permission_messages) {
    var _Permissions_one_of_decls, _ExplicitPermissions_one_of_decls, _PermissionsType_one_of_decls;
    let CacheRole;
    (function(CacheRole) {
        CacheRole[CacheRole["CachePermitNone"] = 0] = "CachePermitNone";
        CacheRole[CacheRole["CacheReadWrite"] = 1] = "CacheReadWrite";
        CacheRole[CacheRole["CacheReadOnly"] = 2] = "CacheReadOnly";
        CacheRole[CacheRole["CacheWriteOnly"] = 3] = "CacheWriteOnly";
    })(CacheRole = permission_messages.CacheRole || (permission_messages.CacheRole = {}));
    let TopicRole;
    (function(TopicRole) {
        TopicRole[TopicRole["TopicPermitNone"] = 0] = "TopicPermitNone";
        TopicRole[TopicRole["TopicReadWrite"] = 1] = "TopicReadWrite";
        TopicRole[TopicRole["TopicReadOnly"] = 2] = "TopicReadOnly";
        TopicRole[TopicRole["TopicWriteOnly"] = 3] = "TopicWriteOnly";
    })(TopicRole = permission_messages.TopicRole || (permission_messages.TopicRole = {}));
    let SuperUserPermissions;
    (function(SuperUserPermissions) {
        SuperUserPermissions[SuperUserPermissions["SuperUser"] = 0] = "SuperUser";
    })(SuperUserPermissions = permission_messages.SuperUserPermissions || (permission_messages.SuperUserPermissions = {}));
    class Permissions extends pb_1.Message {
        constructor(data){
            super();
            _Permissions_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Permissions_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("super_user" in data && data.super_user != undefined) {
                    this.super_user = data.super_user;
                }
                if ("explicit" in data && data.explicit != undefined) {
                    this.explicit = data.explicit;
                }
            }
        }
        get super_user() {
            return pb_1.Message.getFieldWithDefault(this, 1, SuperUserPermissions.SuperUser);
        }
        set super_user(value) {
            pb_1.Message.setOneofField(this, 1, __classPrivateFieldGet(this, _Permissions_one_of_decls, "f")[0], value);
        }
        get has_super_user() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get explicit() {
            return pb_1.Message.getWrapperField(this, ExplicitPermissions, 2);
        }
        set explicit(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, _Permissions_one_of_decls, "f")[0], value);
        }
        get has_explicit() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get kind() {
            const cases = {
                0: "none",
                1: "super_user",
                2: "explicit"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new Permissions({});
            if (data.super_user != null) {
                message.super_user = data.super_user;
            }
            if (data.explicit != null) {
                message.explicit = ExplicitPermissions.fromObject(data.explicit);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.super_user != null) {
                data.super_user = this.super_user;
            }
            if (this.explicit != null) {
                data.explicit = this.explicit.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_super_user) writer.writeEnum(1, this.super_user);
            if (this.has_explicit) writer.writeMessage(2, this.explicit, ()=>this.explicit.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Permissions();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.super_user = reader.readEnum();
                        break;
                    case 2:
                        reader.readMessage(message.explicit, ()=>message.explicit = ExplicitPermissions.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return Permissions.deserialize(bytes);
        }
    }
    _Permissions_one_of_decls = new WeakMap();
    permission_messages.Permissions = Permissions;
    class ExplicitPermissions extends pb_1.Message {
        constructor(data){
            super();
            _ExplicitPermissions_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                1
            ], __classPrivateFieldGet(this, _ExplicitPermissions_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("permissions" in data && data.permissions != undefined) {
                    this.permissions = data.permissions;
                }
            }
        }
        get permissions() {
            return pb_1.Message.getRepeatedWrapperField(this, PermissionsType, 1);
        }
        set permissions(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data) {
            const message = new ExplicitPermissions({});
            if (data.permissions != null) {
                message.permissions = data.permissions.map((item)=>PermissionsType.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.permissions != null) {
                data.permissions = this.permissions.map((item)=>item.toObject());
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.permissions.length) writer.writeRepeatedMessage(1, this.permissions, (item)=>item.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ExplicitPermissions();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.permissions, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, PermissionsType.deserialize(reader), PermissionsType));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return ExplicitPermissions.deserialize(bytes);
        }
    }
    _ExplicitPermissions_one_of_decls = new WeakMap();
    permission_messages.ExplicitPermissions = ExplicitPermissions;
    class PermissionsType extends pb_1.Message {
        constructor(data){
            super();
            _PermissionsType_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _PermissionsType_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_permissions" in data && data.cache_permissions != undefined) {
                    this.cache_permissions = data.cache_permissions;
                }
                if ("topic_permissions" in data && data.topic_permissions != undefined) {
                    this.topic_permissions = data.topic_permissions;
                }
            }
        }
        get cache_permissions() {
            return pb_1.Message.getWrapperField(this, PermissionsType.CachePermissions, 1);
        }
        set cache_permissions(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, _PermissionsType_one_of_decls, "f")[0], value);
        }
        get has_cache_permissions() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get topic_permissions() {
            return pb_1.Message.getWrapperField(this, PermissionsType.TopicPermissions, 2);
        }
        set topic_permissions(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, _PermissionsType_one_of_decls, "f")[0], value);
        }
        get has_topic_permissions() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get kind() {
            const cases = {
                0: "none",
                1: "cache_permissions",
                2: "topic_permissions"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new PermissionsType({});
            if (data.cache_permissions != null) {
                message.cache_permissions = PermissionsType.CachePermissions.fromObject(data.cache_permissions);
            }
            if (data.topic_permissions != null) {
                message.topic_permissions = PermissionsType.TopicPermissions.fromObject(data.topic_permissions);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_permissions != null) {
                data.cache_permissions = this.cache_permissions.toObject();
            }
            if (this.topic_permissions != null) {
                data.topic_permissions = this.topic_permissions.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_cache_permissions) writer.writeMessage(1, this.cache_permissions, ()=>this.cache_permissions.serialize(writer));
            if (this.has_topic_permissions) writer.writeMessage(2, this.topic_permissions, ()=>this.topic_permissions.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PermissionsType();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.cache_permissions, ()=>message.cache_permissions = PermissionsType.CachePermissions.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.topic_permissions, ()=>message.topic_permissions = PermissionsType.TopicPermissions.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return PermissionsType.deserialize(bytes);
        }
    }
    _PermissionsType_one_of_decls = new WeakMap();
    permission_messages.PermissionsType = PermissionsType;
    (function(PermissionsType) {
        var _All_one_of_decls, _CacheSelector_one_of_decls, _CacheItemSelector_one_of_decls, _CachePermissions_one_of_decls, _TopicSelector_one_of_decls, _TopicPermissions_one_of_decls;
        class All extends pb_1.Message {
            constructor(data){
                super();
                _All_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _All_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new All({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new All();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return All.deserialize(bytes);
            }
        }
        _All_one_of_decls = new WeakMap();
        PermissionsType.All = All;
        class CacheSelector extends pb_1.Message {
            constructor(data){
                super();
                _CacheSelector_one_of_decls.set(this, [
                    [
                        1
                    ]
                ]);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _CacheSelector_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("cache_name" in data && data.cache_name != undefined) {
                        this.cache_name = data.cache_name;
                    }
                }
            }
            get cache_name() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set cache_name(value) {
                pb_1.Message.setOneofField(this, 1, __classPrivateFieldGet(this, _CacheSelector_one_of_decls, "f")[0], value);
            }
            get has_cache_name() {
                return pb_1.Message.getField(this, 1) != null;
            }
            get kind() {
                const cases = {
                    0: "none",
                    1: "cache_name"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    1
                ])];
            }
            static fromObject(data) {
                const message = new CacheSelector({});
                if (data.cache_name != null) {
                    message.cache_name = data.cache_name;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.cache_name != null) {
                    data.cache_name = this.cache_name;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.has_cache_name) writer.writeString(1, this.cache_name);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CacheSelector();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.cache_name = reader.readString();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return CacheSelector.deserialize(bytes);
            }
        }
        _CacheSelector_one_of_decls = new WeakMap();
        PermissionsType.CacheSelector = CacheSelector;
        class CacheItemSelector extends pb_1.Message {
            constructor(data){
                super();
                _CacheItemSelector_one_of_decls.set(this, [
                    [
                        1,
                        2
                    ]
                ]);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _CacheItemSelector_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("key" in data && data.key != undefined) {
                        this.key = data.key;
                    }
                    if ("key_prefix" in data && data.key_prefix != undefined) {
                        this.key_prefix = data.key_prefix;
                    }
                }
            }
            get key() {
                return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
            }
            set key(value) {
                pb_1.Message.setOneofField(this, 1, __classPrivateFieldGet(this, _CacheItemSelector_one_of_decls, "f")[0], value);
            }
            get has_key() {
                return pb_1.Message.getField(this, 1) != null;
            }
            get key_prefix() {
                return pb_1.Message.getFieldWithDefault(this, 2, new Uint8Array(0));
            }
            set key_prefix(value) {
                pb_1.Message.setOneofField(this, 2, __classPrivateFieldGet(this, _CacheItemSelector_one_of_decls, "f")[0], value);
            }
            get has_key_prefix() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get kind() {
                const cases = {
                    0: "none",
                    1: "key",
                    2: "key_prefix"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    1,
                    2
                ])];
            }
            static fromObject(data) {
                const message = new CacheItemSelector({});
                if (data.key != null) {
                    message.key = data.key;
                }
                if (data.key_prefix != null) {
                    message.key_prefix = data.key_prefix;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.key != null) {
                    data.key = this.key;
                }
                if (this.key_prefix != null) {
                    data.key_prefix = this.key_prefix;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.has_key) writer.writeBytes(1, this.key);
                if (this.has_key_prefix) writer.writeBytes(2, this.key_prefix);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CacheItemSelector();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.key = reader.readBytes();
                            break;
                        case 2:
                            message.key_prefix = reader.readBytes();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return CacheItemSelector.deserialize(bytes);
            }
        }
        _CacheItemSelector_one_of_decls = new WeakMap();
        PermissionsType.CacheItemSelector = CacheItemSelector;
        class CachePermissions extends pb_1.Message {
            constructor(data){
                super();
                _CachePermissions_one_of_decls.set(this, [
                    [
                        2,
                        3
                    ],
                    [
                        4,
                        5
                    ]
                ]);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _CachePermissions_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("role" in data && data.role != undefined) {
                        this.role = data.role;
                    }
                    if ("all_caches" in data && data.all_caches != undefined) {
                        this.all_caches = data.all_caches;
                    }
                    if ("cache_selector" in data && data.cache_selector != undefined) {
                        this.cache_selector = data.cache_selector;
                    }
                    if ("all_items" in data && data.all_items != undefined) {
                        this.all_items = data.all_items;
                    }
                    if ("item_selector" in data && data.item_selector != undefined) {
                        this.item_selector = data.item_selector;
                    }
                }
            }
            get role() {
                return pb_1.Message.getFieldWithDefault(this, 1, CacheRole.CachePermitNone);
            }
            set role(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get all_caches() {
                return pb_1.Message.getWrapperField(this, PermissionsType.All, 2);
            }
            set all_caches(value) {
                pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, _CachePermissions_one_of_decls, "f")[0], value);
            }
            get has_all_caches() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get cache_selector() {
                return pb_1.Message.getWrapperField(this, PermissionsType.CacheSelector, 3);
            }
            set cache_selector(value) {
                pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, _CachePermissions_one_of_decls, "f")[0], value);
            }
            get has_cache_selector() {
                return pb_1.Message.getField(this, 3) != null;
            }
            get all_items() {
                return pb_1.Message.getWrapperField(this, PermissionsType.All, 4);
            }
            set all_items(value) {
                pb_1.Message.setOneofWrapperField(this, 4, __classPrivateFieldGet(this, _CachePermissions_one_of_decls, "f")[1], value);
            }
            get has_all_items() {
                return pb_1.Message.getField(this, 4) != null;
            }
            get item_selector() {
                return pb_1.Message.getWrapperField(this, PermissionsType.CacheItemSelector, 5);
            }
            set item_selector(value) {
                pb_1.Message.setOneofWrapperField(this, 5, __classPrivateFieldGet(this, _CachePermissions_one_of_decls, "f")[1], value);
            }
            get has_item_selector() {
                return pb_1.Message.getField(this, 5) != null;
            }
            get cache() {
                const cases = {
                    0: "none",
                    2: "all_caches",
                    3: "cache_selector"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    2,
                    3
                ])];
            }
            get cache_item() {
                const cases = {
                    0: "none",
                    4: "all_items",
                    5: "item_selector"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    4,
                    5
                ])];
            }
            static fromObject(data) {
                const message = new CachePermissions({});
                if (data.role != null) {
                    message.role = data.role;
                }
                if (data.all_caches != null) {
                    message.all_caches = PermissionsType.All.fromObject(data.all_caches);
                }
                if (data.cache_selector != null) {
                    message.cache_selector = PermissionsType.CacheSelector.fromObject(data.cache_selector);
                }
                if (data.all_items != null) {
                    message.all_items = PermissionsType.All.fromObject(data.all_items);
                }
                if (data.item_selector != null) {
                    message.item_selector = PermissionsType.CacheItemSelector.fromObject(data.item_selector);
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.role != null) {
                    data.role = this.role;
                }
                if (this.all_caches != null) {
                    data.all_caches = this.all_caches.toObject();
                }
                if (this.cache_selector != null) {
                    data.cache_selector = this.cache_selector.toObject();
                }
                if (this.all_items != null) {
                    data.all_items = this.all_items.toObject();
                }
                if (this.item_selector != null) {
                    data.item_selector = this.item_selector.toObject();
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.role != CacheRole.CachePermitNone) writer.writeEnum(1, this.role);
                if (this.has_all_caches) writer.writeMessage(2, this.all_caches, ()=>this.all_caches.serialize(writer));
                if (this.has_cache_selector) writer.writeMessage(3, this.cache_selector, ()=>this.cache_selector.serialize(writer));
                if (this.has_all_items) writer.writeMessage(4, this.all_items, ()=>this.all_items.serialize(writer));
                if (this.has_item_selector) writer.writeMessage(5, this.item_selector, ()=>this.item_selector.serialize(writer));
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CachePermissions();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.role = reader.readEnum();
                            break;
                        case 2:
                            reader.readMessage(message.all_caches, ()=>message.all_caches = PermissionsType.All.deserialize(reader));
                            break;
                        case 3:
                            reader.readMessage(message.cache_selector, ()=>message.cache_selector = PermissionsType.CacheSelector.deserialize(reader));
                            break;
                        case 4:
                            reader.readMessage(message.all_items, ()=>message.all_items = PermissionsType.All.deserialize(reader));
                            break;
                        case 5:
                            reader.readMessage(message.item_selector, ()=>message.item_selector = PermissionsType.CacheItemSelector.deserialize(reader));
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return CachePermissions.deserialize(bytes);
            }
        }
        _CachePermissions_one_of_decls = new WeakMap();
        PermissionsType.CachePermissions = CachePermissions;
        class TopicSelector extends pb_1.Message {
            constructor(data){
                super();
                _TopicSelector_one_of_decls.set(this, [
                    [
                        1,
                        2
                    ]
                ]);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _TopicSelector_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("topic_name" in data && data.topic_name != undefined) {
                        this.topic_name = data.topic_name;
                    }
                    if ("topic_name_prefix" in data && data.topic_name_prefix != undefined) {
                        this.topic_name_prefix = data.topic_name_prefix;
                    }
                }
            }
            get topic_name() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set topic_name(value) {
                pb_1.Message.setOneofField(this, 1, __classPrivateFieldGet(this, _TopicSelector_one_of_decls, "f")[0], value);
            }
            get has_topic_name() {
                return pb_1.Message.getField(this, 1) != null;
            }
            get topic_name_prefix() {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            }
            set topic_name_prefix(value) {
                pb_1.Message.setOneofField(this, 2, __classPrivateFieldGet(this, _TopicSelector_one_of_decls, "f")[0], value);
            }
            get has_topic_name_prefix() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get kind() {
                const cases = {
                    0: "none",
                    1: "topic_name",
                    2: "topic_name_prefix"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    1,
                    2
                ])];
            }
            static fromObject(data) {
                const message = new TopicSelector({});
                if (data.topic_name != null) {
                    message.topic_name = data.topic_name;
                }
                if (data.topic_name_prefix != null) {
                    message.topic_name_prefix = data.topic_name_prefix;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.topic_name != null) {
                    data.topic_name = this.topic_name;
                }
                if (this.topic_name_prefix != null) {
                    data.topic_name_prefix = this.topic_name_prefix;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.has_topic_name) writer.writeString(1, this.topic_name);
                if (this.has_topic_name_prefix) writer.writeString(2, this.topic_name_prefix);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TopicSelector();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.topic_name = reader.readString();
                            break;
                        case 2:
                            message.topic_name_prefix = reader.readString();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return TopicSelector.deserialize(bytes);
            }
        }
        _TopicSelector_one_of_decls = new WeakMap();
        PermissionsType.TopicSelector = TopicSelector;
        class TopicPermissions extends pb_1.Message {
            constructor(data){
                super();
                _TopicPermissions_one_of_decls.set(this, [
                    [
                        2,
                        3
                    ],
                    [
                        4,
                        5
                    ]
                ]);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _TopicPermissions_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("role" in data && data.role != undefined) {
                        this.role = data.role;
                    }
                    if ("all_caches" in data && data.all_caches != undefined) {
                        this.all_caches = data.all_caches;
                    }
                    if ("cache_selector" in data && data.cache_selector != undefined) {
                        this.cache_selector = data.cache_selector;
                    }
                    if ("all_topics" in data && data.all_topics != undefined) {
                        this.all_topics = data.all_topics;
                    }
                    if ("topic_selector" in data && data.topic_selector != undefined) {
                        this.topic_selector = data.topic_selector;
                    }
                }
            }
            get role() {
                return pb_1.Message.getFieldWithDefault(this, 1, TopicRole.TopicPermitNone);
            }
            set role(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get all_caches() {
                return pb_1.Message.getWrapperField(this, PermissionsType.All, 2);
            }
            set all_caches(value) {
                pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, _TopicPermissions_one_of_decls, "f")[0], value);
            }
            get has_all_caches() {
                return pb_1.Message.getField(this, 2) != null;
            }
            get cache_selector() {
                return pb_1.Message.getWrapperField(this, PermissionsType.CacheSelector, 3);
            }
            set cache_selector(value) {
                pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, _TopicPermissions_one_of_decls, "f")[0], value);
            }
            get has_cache_selector() {
                return pb_1.Message.getField(this, 3) != null;
            }
            get all_topics() {
                return pb_1.Message.getWrapperField(this, PermissionsType.All, 4);
            }
            set all_topics(value) {
                pb_1.Message.setOneofWrapperField(this, 4, __classPrivateFieldGet(this, _TopicPermissions_one_of_decls, "f")[1], value);
            }
            get has_all_topics() {
                return pb_1.Message.getField(this, 4) != null;
            }
            get topic_selector() {
                return pb_1.Message.getWrapperField(this, PermissionsType.TopicSelector, 5);
            }
            set topic_selector(value) {
                pb_1.Message.setOneofWrapperField(this, 5, __classPrivateFieldGet(this, _TopicPermissions_one_of_decls, "f")[1], value);
            }
            get has_topic_selector() {
                return pb_1.Message.getField(this, 5) != null;
            }
            get cache() {
                const cases = {
                    0: "none",
                    2: "all_caches",
                    3: "cache_selector"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    2,
                    3
                ])];
            }
            get topic() {
                const cases = {
                    0: "none",
                    4: "all_topics",
                    5: "topic_selector"
                };
                return cases[pb_1.Message.computeOneofCase(this, [
                    4,
                    5
                ])];
            }
            static fromObject(data) {
                const message = new TopicPermissions({});
                if (data.role != null) {
                    message.role = data.role;
                }
                if (data.all_caches != null) {
                    message.all_caches = PermissionsType.All.fromObject(data.all_caches);
                }
                if (data.cache_selector != null) {
                    message.cache_selector = PermissionsType.CacheSelector.fromObject(data.cache_selector);
                }
                if (data.all_topics != null) {
                    message.all_topics = PermissionsType.All.fromObject(data.all_topics);
                }
                if (data.topic_selector != null) {
                    message.topic_selector = PermissionsType.TopicSelector.fromObject(data.topic_selector);
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.role != null) {
                    data.role = this.role;
                }
                if (this.all_caches != null) {
                    data.all_caches = this.all_caches.toObject();
                }
                if (this.cache_selector != null) {
                    data.cache_selector = this.cache_selector.toObject();
                }
                if (this.all_topics != null) {
                    data.all_topics = this.all_topics.toObject();
                }
                if (this.topic_selector != null) {
                    data.topic_selector = this.topic_selector.toObject();
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.role != TopicRole.TopicPermitNone) writer.writeEnum(1, this.role);
                if (this.has_all_caches) writer.writeMessage(2, this.all_caches, ()=>this.all_caches.serialize(writer));
                if (this.has_cache_selector) writer.writeMessage(3, this.cache_selector, ()=>this.cache_selector.serialize(writer));
                if (this.has_all_topics) writer.writeMessage(4, this.all_topics, ()=>this.all_topics.serialize(writer));
                if (this.has_topic_selector) writer.writeMessage(5, this.topic_selector, ()=>this.topic_selector.serialize(writer));
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TopicPermissions();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.role = reader.readEnum();
                            break;
                        case 2:
                            reader.readMessage(message.all_caches, ()=>message.all_caches = PermissionsType.All.deserialize(reader));
                            break;
                        case 3:
                            reader.readMessage(message.cache_selector, ()=>message.cache_selector = PermissionsType.CacheSelector.deserialize(reader));
                            break;
                        case 4:
                            reader.readMessage(message.all_topics, ()=>message.all_topics = PermissionsType.All.deserialize(reader));
                            break;
                        case 5:
                            reader.readMessage(message.topic_selector, ()=>message.topic_selector = PermissionsType.TopicSelector.deserialize(reader));
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return TopicPermissions.deserialize(bytes);
            }
        }
        _TopicPermissions_one_of_decls = new WeakMap();
        PermissionsType.TopicPermissions = TopicPermissions;
    })(PermissionsType = permission_messages.PermissionsType || (permission_messages.PermissionsType = {}));
})(permission_messages = exports.permission_messages || (exports.permission_messages = {}));

}.call(this) }),
"[project]/node_modules/@gomomento/generated-types/dist/auth.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.auth = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: auth.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */ const dependency_1 = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/permissionmessages.js [app-route] (ecmascript)"));
const pb_1 = __importStar(__turbopack_require__("[project]/node_modules/google-protobuf/google-protobuf.js [app-route] (ecmascript)"));
const grpc_1 = __importStar(__turbopack_require__("[project]/node_modules/@grpc/grpc-js/build/src/index.js [app-route] (ecmascript)"));
var auth;
(function(auth) {
    var __LoginRequest_one_of_decls, __LoginResponse_one_of_decls, __GenerateApiTokenRequest_one_of_decls, __GenerateApiTokenResponse_one_of_decls, __RefreshApiTokenRequest_one_of_decls, __RefreshApiTokenResponse_one_of_decls;
    class _LoginRequest extends pb_1.Message {
        constructor(data){
            super();
            __LoginRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __LoginRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _LoginRequest({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _LoginRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _LoginRequest.deserialize(bytes);
        }
    }
    __LoginRequest_one_of_decls = new WeakMap();
    auth._LoginRequest = _LoginRequest;
    class _LoginResponse extends pb_1.Message {
        constructor(data){
            super();
            __LoginResponse_one_of_decls.set(this, [
                [
                    1,
                    2,
                    3,
                    4
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __LoginResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("direct_browser" in data && data.direct_browser != undefined) {
                    this.direct_browser = data.direct_browser;
                }
                if ("logged_in" in data && data.logged_in != undefined) {
                    this.logged_in = data.logged_in;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
            }
        }
        get direct_browser() {
            return pb_1.Message.getWrapperField(this, _LoginResponse.DirectBrowser, 1);
        }
        set direct_browser(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __LoginResponse_one_of_decls, "f")[0], value);
        }
        get has_direct_browser() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get logged_in() {
            return pb_1.Message.getWrapperField(this, _LoginResponse.LoggedIn, 2);
        }
        set logged_in(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __LoginResponse_one_of_decls, "f")[0], value);
        }
        get has_logged_in() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get message() {
            return pb_1.Message.getWrapperField(this, _LoginResponse.Message, 3);
        }
        set message(value) {
            pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, __LoginResponse_one_of_decls, "f")[0], value);
        }
        get has_message() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get error() {
            return pb_1.Message.getWrapperField(this, _LoginResponse.Error, 4);
        }
        set error(value) {
            pb_1.Message.setOneofWrapperField(this, 4, __classPrivateFieldGet(this, __LoginResponse_one_of_decls, "f")[0], value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get state() {
            const cases = {
                0: "none",
                1: "direct_browser",
                2: "logged_in",
                3: "message",
                4: "error"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2,
                3,
                4
            ])];
        }
        static fromObject(data) {
            const message = new _LoginResponse({});
            if (data.direct_browser != null) {
                message.direct_browser = _LoginResponse.DirectBrowser.fromObject(data.direct_browser);
            }
            if (data.logged_in != null) {
                message.logged_in = _LoginResponse.LoggedIn.fromObject(data.logged_in);
            }
            if (data.message != null) {
                message.message = _LoginResponse.Message.fromObject(data.message);
            }
            if (data.error != null) {
                message.error = _LoginResponse.Error.fromObject(data.error);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.direct_browser != null) {
                data.direct_browser = this.direct_browser.toObject();
            }
            if (this.logged_in != null) {
                data.logged_in = this.logged_in.toObject();
            }
            if (this.message != null) {
                data.message = this.message.toObject();
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_direct_browser) writer.writeMessage(1, this.direct_browser, ()=>this.direct_browser.serialize(writer));
            if (this.has_logged_in) writer.writeMessage(2, this.logged_in, ()=>this.logged_in.serialize(writer));
            if (this.has_message) writer.writeMessage(3, this.message, ()=>this.message.serialize(writer));
            if (this.has_error) writer.writeMessage(4, this.error, ()=>this.error.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _LoginResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.direct_browser, ()=>message.direct_browser = _LoginResponse.DirectBrowser.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.logged_in, ()=>message.logged_in = _LoginResponse.LoggedIn.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.message, ()=>message.message = _LoginResponse.Message.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.error, ()=>message.error = _LoginResponse.Error.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _LoginResponse.deserialize(bytes);
        }
    }
    __LoginResponse_one_of_decls = new WeakMap();
    auth._LoginResponse = _LoginResponse;
    (function(_LoginResponse) {
        var _LoggedIn_one_of_decls, _Error_one_of_decls, _DirectBrowser_one_of_decls, _Message_one_of_decls;
        class LoggedIn extends pb_1.Message {
            constructor(data){
                super();
                _LoggedIn_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _LoggedIn_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("session_token" in data && data.session_token != undefined) {
                        this.session_token = data.session_token;
                    }
                    if ("valid_for_seconds" in data && data.valid_for_seconds != undefined) {
                        this.valid_for_seconds = data.valid_for_seconds;
                    }
                }
            }
            get session_token() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set session_token(value) {
                pb_1.Message.setField(this, 1, value);
            }
            get valid_for_seconds() {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            }
            set valid_for_seconds(value) {
                pb_1.Message.setField(this, 2, value);
            }
            static fromObject(data) {
                const message = new LoggedIn({});
                if (data.session_token != null) {
                    message.session_token = data.session_token;
                }
                if (data.valid_for_seconds != null) {
                    message.valid_for_seconds = data.valid_for_seconds;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.session_token != null) {
                    data.session_token = this.session_token;
                }
                if (this.valid_for_seconds != null) {
                    data.valid_for_seconds = this.valid_for_seconds;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.session_token.length) writer.writeString(1, this.session_token);
                if (this.valid_for_seconds != 0) writer.writeUint32(2, this.valid_for_seconds);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new LoggedIn();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.session_token = reader.readString();
                            break;
                        case 2:
                            message.valid_for_seconds = reader.readUint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return LoggedIn.deserialize(bytes);
            }
        }
        _LoggedIn_one_of_decls = new WeakMap();
        _LoginResponse.LoggedIn = LoggedIn;
        class Error extends pb_1.Message {
            constructor(data){
                super();
                _Error_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Error_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("description" in data && data.description != undefined) {
                        this.description = data.description;
                    }
                }
            }
            get description() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set description(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new Error({});
                if (data.description != null) {
                    message.description = data.description;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.description != null) {
                    data.description = this.description;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.description.length) writer.writeString(1, this.description);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Error();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.description = reader.readString();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return Error.deserialize(bytes);
            }
        }
        _Error_one_of_decls = new WeakMap();
        _LoginResponse.Error = Error;
        class DirectBrowser extends pb_1.Message {
            constructor(data){
                super();
                _DirectBrowser_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _DirectBrowser_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("url" in data && data.url != undefined) {
                        this.url = data.url;
                    }
                }
            }
            get url() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set url(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new DirectBrowser({});
                if (data.url != null) {
                    message.url = data.url;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.url != null) {
                    data.url = this.url;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.url.length) writer.writeString(1, this.url);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DirectBrowser();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.url = reader.readString();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return DirectBrowser.deserialize(bytes);
            }
        }
        _DirectBrowser_one_of_decls = new WeakMap();
        _LoginResponse.DirectBrowser = DirectBrowser;
        class Message extends pb_1.Message {
            constructor(data){
                super();
                _Message_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Message_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("text" in data && data.text != undefined) {
                        this.text = data.text;
                    }
                }
            }
            get text() {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            }
            set text(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new Message({});
                if (data.text != null) {
                    message.text = data.text;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.text != null) {
                    data.text = this.text;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.text.length) writer.writeString(1, this.text);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Message();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.text = reader.readString();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return Message.deserialize(bytes);
            }
        }
        _Message_one_of_decls = new WeakMap();
        _LoginResponse.Message = Message;
    })(_LoginResponse = auth._LoginResponse || (auth._LoginResponse = {}));
    class _GenerateApiTokenRequest extends pb_1.Message {
        constructor(data){
            super();
            __GenerateApiTokenRequest_one_of_decls.set(this, [
                [
                    1,
                    2
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GenerateApiTokenRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("never" in data && data.never != undefined) {
                    this.never = data.never;
                }
                if ("expires" in data && data.expires != undefined) {
                    this.expires = data.expires;
                }
                if ("auth_token" in data && data.auth_token != undefined) {
                    this.auth_token = data.auth_token;
                }
                if ("permissions" in data && data.permissions != undefined) {
                    this.permissions = data.permissions;
                }
                if ("token_id" in data && data.token_id != undefined) {
                    this.token_id = data.token_id;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
            }
        }
        get never() {
            return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.Never, 1);
        }
        set never(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __GenerateApiTokenRequest_one_of_decls, "f")[0], value);
        }
        get has_never() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get expires() {
            return pb_1.Message.getWrapperField(this, _GenerateApiTokenRequest.Expires, 2);
        }
        set expires(value) {
            pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, __GenerateApiTokenRequest_one_of_decls, "f")[0], value);
        }
        get has_expires() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get auth_token() {
            return pb_1.Message.getFieldWithDefault(this, 3, "");
        }
        set auth_token(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get permissions() {
            return pb_1.Message.getWrapperField(this, dependency_1.permission_messages.Permissions, 4);
        }
        set permissions(value) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_permissions() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get token_id() {
            return pb_1.Message.getFieldWithDefault(this, 5, "");
        }
        set token_id(value) {
            pb_1.Message.setField(this, 5, value);
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 6, "");
        }
        set description(value) {
            pb_1.Message.setField(this, 6, value);
        }
        get expiry() {
            const cases = {
                0: "none",
                1: "never",
                2: "expires"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2
            ])];
        }
        static fromObject(data) {
            const message = new _GenerateApiTokenRequest({});
            if (data.never != null) {
                message.never = _GenerateApiTokenRequest.Never.fromObject(data.never);
            }
            if (data.expires != null) {
                message.expires = _GenerateApiTokenRequest.Expires.fromObject(data.expires);
            }
            if (data.auth_token != null) {
                message.auth_token = data.auth_token;
            }
            if (data.permissions != null) {
                message.permissions = dependency_1.permission_messages.Permissions.fromObject(data.permissions);
            }
            if (data.token_id != null) {
                message.token_id = data.token_id;
            }
            if (data.description != null) {
                message.description = data.description;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.never != null) {
                data.never = this.never.toObject();
            }
            if (this.expires != null) {
                data.expires = this.expires.toObject();
            }
            if (this.auth_token != null) {
                data.auth_token = this.auth_token;
            }
            if (this.permissions != null) {
                data.permissions = this.permissions.toObject();
            }
            if (this.token_id != null) {
                data.token_id = this.token_id;
            }
            if (this.description != null) {
                data.description = this.description;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_never) writer.writeMessage(1, this.never, ()=>this.never.serialize(writer));
            if (this.has_expires) writer.writeMessage(2, this.expires, ()=>this.expires.serialize(writer));
            if (this.auth_token.length) writer.writeString(3, this.auth_token);
            if (this.has_permissions) writer.writeMessage(4, this.permissions, ()=>this.permissions.serialize(writer));
            if (this.token_id.length) writer.writeString(5, this.token_id);
            if (this.description.length) writer.writeString(6, this.description);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GenerateApiTokenRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.never, ()=>message.never = _GenerateApiTokenRequest.Never.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.expires, ()=>message.expires = _GenerateApiTokenRequest.Expires.deserialize(reader));
                        break;
                    case 3:
                        message.auth_token = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.permissions, ()=>message.permissions = dependency_1.permission_messages.Permissions.deserialize(reader));
                        break;
                    case 5:
                        message.token_id = reader.readString();
                        break;
                    case 6:
                        message.description = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GenerateApiTokenRequest.deserialize(bytes);
        }
    }
    __GenerateApiTokenRequest_one_of_decls = new WeakMap();
    auth._GenerateApiTokenRequest = _GenerateApiTokenRequest;
    (function(_GenerateApiTokenRequest) {
        var _Never_one_of_decls, _Expires_one_of_decls;
        class Never extends pb_1.Message {
            constructor(data){
                super();
                _Never_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Never_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {}
            }
            static fromObject(data) {
                const message = new Never({});
                return message;
            }
            toObject() {
                const data = {};
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Never();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return Never.deserialize(bytes);
            }
        }
        _Never_one_of_decls = new WeakMap();
        _GenerateApiTokenRequest.Never = Never;
        class Expires extends pb_1.Message {
            constructor(data){
                super();
                _Expires_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Expires_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("valid_for_seconds" in data && data.valid_for_seconds != undefined) {
                        this.valid_for_seconds = data.valid_for_seconds;
                    }
                }
            }
            get valid_for_seconds() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set valid_for_seconds(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new Expires({});
                if (data.valid_for_seconds != null) {
                    message.valid_for_seconds = data.valid_for_seconds;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.valid_for_seconds != null) {
                    data.valid_for_seconds = this.valid_for_seconds;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.valid_for_seconds != 0) writer.writeUint32(1, this.valid_for_seconds);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Expires();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.valid_for_seconds = reader.readUint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return Expires.deserialize(bytes);
            }
        }
        _Expires_one_of_decls = new WeakMap();
        _GenerateApiTokenRequest.Expires = Expires;
    })(_GenerateApiTokenRequest = auth._GenerateApiTokenRequest || (auth._GenerateApiTokenRequest = {}));
    class _GenerateApiTokenResponse extends pb_1.Message {
        constructor(data){
            super();
            __GenerateApiTokenResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GenerateApiTokenResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("api_key" in data && data.api_key != undefined) {
                    this.api_key = data.api_key;
                }
                if ("refresh_token" in data && data.refresh_token != undefined) {
                    this.refresh_token = data.refresh_token;
                }
                if ("endpoint" in data && data.endpoint != undefined) {
                    this.endpoint = data.endpoint;
                }
                if ("valid_until" in data && data.valid_until != undefined) {
                    this.valid_until = data.valid_until;
                }
            }
        }
        get api_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set api_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get refresh_token() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set refresh_token(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get endpoint() {
            return pb_1.Message.getFieldWithDefault(this, 3, "");
        }
        set endpoint(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get valid_until() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0);
        }
        set valid_until(value) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data) {
            const message = new _GenerateApiTokenResponse({});
            if (data.api_key != null) {
                message.api_key = data.api_key;
            }
            if (data.refresh_token != null) {
                message.refresh_token = data.refresh_token;
            }
            if (data.endpoint != null) {
                message.endpoint = data.endpoint;
            }
            if (data.valid_until != null) {
                message.valid_until = data.valid_until;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.api_key != null) {
                data.api_key = this.api_key;
            }
            if (this.refresh_token != null) {
                data.refresh_token = this.refresh_token;
            }
            if (this.endpoint != null) {
                data.endpoint = this.endpoint;
            }
            if (this.valid_until != null) {
                data.valid_until = this.valid_until;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.api_key.length) writer.writeString(1, this.api_key);
            if (this.refresh_token.length) writer.writeString(2, this.refresh_token);
            if (this.endpoint.length) writer.writeString(3, this.endpoint);
            if (this.valid_until != 0) writer.writeUint64(4, this.valid_until);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GenerateApiTokenResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.api_key = reader.readString();
                        break;
                    case 2:
                        message.refresh_token = reader.readString();
                        break;
                    case 3:
                        message.endpoint = reader.readString();
                        break;
                    case 4:
                        message.valid_until = reader.readUint64();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GenerateApiTokenResponse.deserialize(bytes);
        }
    }
    __GenerateApiTokenResponse_one_of_decls = new WeakMap();
    auth._GenerateApiTokenResponse = _GenerateApiTokenResponse;
    class _RefreshApiTokenRequest extends pb_1.Message {
        constructor(data){
            super();
            __RefreshApiTokenRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __RefreshApiTokenRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("api_key" in data && data.api_key != undefined) {
                    this.api_key = data.api_key;
                }
                if ("refresh_token" in data && data.refresh_token != undefined) {
                    this.refresh_token = data.refresh_token;
                }
            }
        }
        get api_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set api_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get refresh_token() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set refresh_token(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _RefreshApiTokenRequest({});
            if (data.api_key != null) {
                message.api_key = data.api_key;
            }
            if (data.refresh_token != null) {
                message.refresh_token = data.refresh_token;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.api_key != null) {
                data.api_key = this.api_key;
            }
            if (this.refresh_token != null) {
                data.refresh_token = this.refresh_token;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.api_key.length) writer.writeString(1, this.api_key);
            if (this.refresh_token.length) writer.writeString(2, this.refresh_token);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _RefreshApiTokenRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.api_key = reader.readString();
                        break;
                    case 2:
                        message.refresh_token = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _RefreshApiTokenRequest.deserialize(bytes);
        }
    }
    __RefreshApiTokenRequest_one_of_decls = new WeakMap();
    auth._RefreshApiTokenRequest = _RefreshApiTokenRequest;
    class _RefreshApiTokenResponse extends pb_1.Message {
        constructor(data){
            super();
            __RefreshApiTokenResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __RefreshApiTokenResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("api_key" in data && data.api_key != undefined) {
                    this.api_key = data.api_key;
                }
                if ("refresh_token" in data && data.refresh_token != undefined) {
                    this.refresh_token = data.refresh_token;
                }
                if ("endpoint" in data && data.endpoint != undefined) {
                    this.endpoint = data.endpoint;
                }
                if ("valid_until" in data && data.valid_until != undefined) {
                    this.valid_until = data.valid_until;
                }
            }
        }
        get api_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set api_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get refresh_token() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set refresh_token(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get endpoint() {
            return pb_1.Message.getFieldWithDefault(this, 3, "");
        }
        set endpoint(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get valid_until() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0);
        }
        set valid_until(value) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data) {
            const message = new _RefreshApiTokenResponse({});
            if (data.api_key != null) {
                message.api_key = data.api_key;
            }
            if (data.refresh_token != null) {
                message.refresh_token = data.refresh_token;
            }
            if (data.endpoint != null) {
                message.endpoint = data.endpoint;
            }
            if (data.valid_until != null) {
                message.valid_until = data.valid_until;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.api_key != null) {
                data.api_key = this.api_key;
            }
            if (this.refresh_token != null) {
                data.refresh_token = this.refresh_token;
            }
            if (this.endpoint != null) {
                data.endpoint = this.endpoint;
            }
            if (this.valid_until != null) {
                data.valid_until = this.valid_until;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.api_key.length) writer.writeString(1, this.api_key);
            if (this.refresh_token.length) writer.writeString(2, this.refresh_token);
            if (this.endpoint.length) writer.writeString(3, this.endpoint);
            if (this.valid_until != 0) writer.writeUint64(4, this.valid_until);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _RefreshApiTokenResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.api_key = reader.readString();
                        break;
                    case 2:
                        message.refresh_token = reader.readString();
                        break;
                    case 3:
                        message.endpoint = reader.readString();
                        break;
                    case 4:
                        message.valid_until = reader.readUint64();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _RefreshApiTokenResponse.deserialize(bytes);
        }
    }
    __RefreshApiTokenResponse_one_of_decls = new WeakMap();
    auth._RefreshApiTokenResponse = _RefreshApiTokenResponse;
    class UnimplementedAuthService {
    }
    UnimplementedAuthService.definition = {
        Login: {
            path: "/auth.Auth/Login",
            requestStream: false,
            responseStream: true,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_LoginRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_LoginResponse.deserialize(new Uint8Array(bytes))
        },
        GenerateApiToken: {
            path: "/auth.Auth/GenerateApiToken",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_GenerateApiTokenRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_GenerateApiTokenResponse.deserialize(new Uint8Array(bytes))
        },
        RefreshApiToken: {
            path: "/auth.Auth/RefreshApiToken",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_RefreshApiTokenRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_RefreshApiTokenResponse.deserialize(new Uint8Array(bytes))
        }
    };
    auth.UnimplementedAuthService = UnimplementedAuthService;
    class AuthClient extends grpc_1.makeGenericClientConstructor(UnimplementedAuthService.definition, "Auth", {}) {
        constructor(address, credentials, options){
            super(address, credentials, options);
            this.Login = (message, metadata, options)=>{
                return super.Login(message, metadata, options);
            };
            this.GenerateApiToken = (message, metadata, options, callback)=>{
                return super.GenerateApiToken(message, metadata, options, callback);
            };
            this.RefreshApiToken = (message, metadata, options, callback)=>{
                return super.RefreshApiToken(message, metadata, options, callback);
            };
        }
    }
    auth.AuthClient = AuthClient;
})(auth = exports.auth || (exports.auth = {}));

}.call(this) }),
"[project]/node_modules/@gomomento/generated-types/dist/token.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.token = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: token.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */ const dependency_1 = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/permissionmessages.js [app-route] (ecmascript)"));
const pb_1 = __importStar(__turbopack_require__("[project]/node_modules/google-protobuf/google-protobuf.js [app-route] (ecmascript)"));
const grpc_1 = __importStar(__turbopack_require__("[project]/node_modules/@grpc/grpc-js/build/src/index.js [app-route] (ecmascript)"));
var token;
(function(token) {
    var __GenerateDisposableTokenRequest_one_of_decls, __GenerateDisposableTokenResponse_one_of_decls;
    class _GenerateDisposableTokenRequest extends pb_1.Message {
        constructor(data){
            super();
            __GenerateDisposableTokenRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GenerateDisposableTokenRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("expires" in data && data.expires != undefined) {
                    this.expires = data.expires;
                }
                if ("auth_token" in data && data.auth_token != undefined) {
                    this.auth_token = data.auth_token;
                }
                if ("permissions" in data && data.permissions != undefined) {
                    this.permissions = data.permissions;
                }
                if ("token_id" in data && data.token_id != undefined) {
                    this.token_id = data.token_id;
                }
            }
        }
        get expires() {
            return pb_1.Message.getWrapperField(this, _GenerateDisposableTokenRequest.Expires, 1);
        }
        set expires(value) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_expires() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get auth_token() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set auth_token(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get permissions() {
            return pb_1.Message.getWrapperField(this, dependency_1.permission_messages.Permissions, 3);
        }
        set permissions(value) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_permissions() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get token_id() {
            return pb_1.Message.getFieldWithDefault(this, 4, "");
        }
        set token_id(value) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data) {
            const message = new _GenerateDisposableTokenRequest({});
            if (data.expires != null) {
                message.expires = _GenerateDisposableTokenRequest.Expires.fromObject(data.expires);
            }
            if (data.auth_token != null) {
                message.auth_token = data.auth_token;
            }
            if (data.permissions != null) {
                message.permissions = dependency_1.permission_messages.Permissions.fromObject(data.permissions);
            }
            if (data.token_id != null) {
                message.token_id = data.token_id;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.expires != null) {
                data.expires = this.expires.toObject();
            }
            if (this.auth_token != null) {
                data.auth_token = this.auth_token;
            }
            if (this.permissions != null) {
                data.permissions = this.permissions.toObject();
            }
            if (this.token_id != null) {
                data.token_id = this.token_id;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_expires) writer.writeMessage(1, this.expires, ()=>this.expires.serialize(writer));
            if (this.auth_token.length) writer.writeString(2, this.auth_token);
            if (this.has_permissions) writer.writeMessage(3, this.permissions, ()=>this.permissions.serialize(writer));
            if (this.token_id.length) writer.writeString(4, this.token_id);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GenerateDisposableTokenRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.expires, ()=>message.expires = _GenerateDisposableTokenRequest.Expires.deserialize(reader));
                        break;
                    case 2:
                        message.auth_token = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.permissions, ()=>message.permissions = dependency_1.permission_messages.Permissions.deserialize(reader));
                        break;
                    case 4:
                        message.token_id = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GenerateDisposableTokenRequest.deserialize(bytes);
        }
    }
    __GenerateDisposableTokenRequest_one_of_decls = new WeakMap();
    token._GenerateDisposableTokenRequest = _GenerateDisposableTokenRequest;
    (function(_GenerateDisposableTokenRequest) {
        var _Expires_one_of_decls;
        class Expires extends pb_1.Message {
            constructor(data){
                super();
                _Expires_one_of_decls.set(this, []);
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Expires_one_of_decls, "f"));
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("valid_for_seconds" in data && data.valid_for_seconds != undefined) {
                        this.valid_for_seconds = data.valid_for_seconds;
                    }
                }
            }
            get valid_for_seconds() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            }
            set valid_for_seconds(value) {
                pb_1.Message.setField(this, 1, value);
            }
            static fromObject(data) {
                const message = new Expires({});
                if (data.valid_for_seconds != null) {
                    message.valid_for_seconds = data.valid_for_seconds;
                }
                return message;
            }
            toObject() {
                const data = {};
                if (this.valid_for_seconds != null) {
                    data.valid_for_seconds = this.valid_for_seconds;
                }
                return data;
            }
            serialize(w) {
                const writer = w || new pb_1.BinaryWriter();
                if (this.valid_for_seconds != 0) writer.writeUint32(1, this.valid_for_seconds);
                if (!w) return writer.getResultBuffer();
            }
            static deserialize(bytes) {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Expires();
                while(reader.nextField()){
                    if (reader.isEndGroup()) break;
                    switch(reader.getFieldNumber()){
                        case 1:
                            message.valid_for_seconds = reader.readUint32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary() {
                return this.serialize();
            }
            static deserializeBinary(bytes) {
                return Expires.deserialize(bytes);
            }
        }
        _Expires_one_of_decls = new WeakMap();
        _GenerateDisposableTokenRequest.Expires = Expires;
    })(_GenerateDisposableTokenRequest = token._GenerateDisposableTokenRequest || (token._GenerateDisposableTokenRequest = {}));
    class _GenerateDisposableTokenResponse extends pb_1.Message {
        constructor(data){
            super();
            __GenerateDisposableTokenResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GenerateDisposableTokenResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("api_key" in data && data.api_key != undefined) {
                    this.api_key = data.api_key;
                }
                if ("endpoint" in data && data.endpoint != undefined) {
                    this.endpoint = data.endpoint;
                }
                if ("valid_until" in data && data.valid_until != undefined) {
                    this.valid_until = data.valid_until;
                }
            }
        }
        get api_key() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set api_key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get endpoint() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set endpoint(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get valid_until() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set valid_until(value) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data) {
            const message = new _GenerateDisposableTokenResponse({});
            if (data.api_key != null) {
                message.api_key = data.api_key;
            }
            if (data.endpoint != null) {
                message.endpoint = data.endpoint;
            }
            if (data.valid_until != null) {
                message.valid_until = data.valid_until;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.api_key != null) {
                data.api_key = this.api_key;
            }
            if (this.endpoint != null) {
                data.endpoint = this.endpoint;
            }
            if (this.valid_until != null) {
                data.valid_until = this.valid_until;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.api_key.length) writer.writeString(1, this.api_key);
            if (this.endpoint.length) writer.writeString(2, this.endpoint);
            if (this.valid_until != 0) writer.writeUint64(3, this.valid_until);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GenerateDisposableTokenResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.api_key = reader.readString();
                        break;
                    case 2:
                        message.endpoint = reader.readString();
                        break;
                    case 3:
                        message.valid_until = reader.readUint64();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GenerateDisposableTokenResponse.deserialize(bytes);
        }
    }
    __GenerateDisposableTokenResponse_one_of_decls = new WeakMap();
    token._GenerateDisposableTokenResponse = _GenerateDisposableTokenResponse;
    class UnimplementedTokenService {
    }
    UnimplementedTokenService.definition = {
        GenerateDisposableToken: {
            path: "/token.Token/GenerateDisposableToken",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_GenerateDisposableTokenRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_GenerateDisposableTokenResponse.deserialize(new Uint8Array(bytes))
        }
    };
    token.UnimplementedTokenService = UnimplementedTokenService;
    class TokenClient extends grpc_1.makeGenericClientConstructor(UnimplementedTokenService.definition, "Token", {}) {
        constructor(address, credentials, options){
            super(address, credentials, options);
            this.GenerateDisposableToken = (message, metadata, options, callback)=>{
                return super.GenerateDisposableToken(message, metadata, options, callback);
            };
        }
    }
    token.TokenClient = TokenClient;
})(token = exports.token || (exports.token = {}));

}.call(this) }),
"[project]/node_modules/@gomomento/generated-types/dist/leaderboard.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.leaderboard = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: leaderboard.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */ const dependency_1 = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/common.js [app-route] (ecmascript)"));
const pb_1 = __importStar(__turbopack_require__("[project]/node_modules/google-protobuf/google-protobuf.js [app-route] (ecmascript)"));
const grpc_1 = __importStar(__turbopack_require__("[project]/node_modules/@grpc/grpc-js/build/src/index.js [app-route] (ecmascript)"));
var leaderboard;
(function(leaderboard) {
    var __Element_one_of_decls, __RankedElement_one_of_decls, __RankRange_one_of_decls, __ScoreRange_one_of_decls, __DeleteLeaderboardRequest_one_of_decls, __GetLeaderboardLengthRequest_one_of_decls, __GetLeaderboardLengthResponse_one_of_decls, __UpsertElementsRequest_one_of_decls, __GetByRankRequest_one_of_decls, __GetByRankResponse_one_of_decls, __GetRankRequest_one_of_decls, __GetRankResponse_one_of_decls, __RemoveElementsRequest_one_of_decls, __GetByScoreRequest_one_of_decls, __GetByScoreResponse_one_of_decls;
    let _Order;
    (function(_Order) {
        _Order[_Order["ASCENDING"] = 0] = "ASCENDING";
        _Order[_Order["DESCENDING"] = 1] = "DESCENDING";
    })(_Order = leaderboard._Order || (leaderboard._Order = {}));
    class _Element extends pb_1.Message {
        constructor(data){
            super();
            __Element_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Element_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("score" in data && data.score != undefined) {
                    this.score = data.score;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get score() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set score(value) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data) {
            const message = new _Element({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.score != null) {
                message.score = data.score;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.score != null) {
                data.score = this.score;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != 0) writer.writeUint32(1, this.id);
            if (this.score != 0) writer.writeDouble(3, this.score);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Element();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.id = reader.readUint32();
                        break;
                    case 3:
                        message.score = reader.readDouble();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _Element.deserialize(bytes);
        }
    }
    __Element_one_of_decls = new WeakMap();
    leaderboard._Element = _Element;
    class _RankedElement extends pb_1.Message {
        constructor(data){
            super();
            __RankedElement_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __RankedElement_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("rank" in data && data.rank != undefined) {
                    this.rank = data.rank;
                }
                if ("score" in data && data.score != undefined) {
                    this.score = data.score;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get rank() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set rank(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get score() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0);
        }
        set score(value) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data) {
            const message = new _RankedElement({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.rank != null) {
                message.rank = data.rank;
            }
            if (data.score != null) {
                message.score = data.score;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.rank != null) {
                data.rank = this.rank;
            }
            if (this.score != null) {
                data.score = this.score;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != 0) writer.writeUint32(1, this.id);
            if (this.rank != 0) writer.writeUint32(3, this.rank);
            if (this.score != 0) writer.writeDouble(4, this.score);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _RankedElement();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.id = reader.readUint32();
                        break;
                    case 3:
                        message.rank = reader.readUint32();
                        break;
                    case 4:
                        message.score = reader.readDouble();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _RankedElement.deserialize(bytes);
        }
    }
    __RankedElement_one_of_decls = new WeakMap();
    leaderboard._RankedElement = _RankedElement;
    class _RankRange extends pb_1.Message {
        constructor(data){
            super();
            __RankRange_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __RankRange_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("start_inclusive" in data && data.start_inclusive != undefined) {
                    this.start_inclusive = data.start_inclusive;
                }
                if ("end_exclusive" in data && data.end_exclusive != undefined) {
                    this.end_exclusive = data.end_exclusive;
                }
            }
        }
        get start_inclusive() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set start_inclusive(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get end_exclusive() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set end_exclusive(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _RankRange({});
            if (data.start_inclusive != null) {
                message.start_inclusive = data.start_inclusive;
            }
            if (data.end_exclusive != null) {
                message.end_exclusive = data.end_exclusive;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.start_inclusive != null) {
                data.start_inclusive = this.start_inclusive;
            }
            if (this.end_exclusive != null) {
                data.end_exclusive = this.end_exclusive;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.start_inclusive != 0) writer.writeUint32(1, this.start_inclusive);
            if (this.end_exclusive != 0) writer.writeUint32(2, this.end_exclusive);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _RankRange();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.start_inclusive = reader.readUint32();
                        break;
                    case 2:
                        message.end_exclusive = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _RankRange.deserialize(bytes);
        }
    }
    __RankRange_one_of_decls = new WeakMap();
    leaderboard._RankRange = _RankRange;
    class _ScoreRange extends pb_1.Message {
        constructor(data){
            super();
            __ScoreRange_one_of_decls.set(this, [
                [
                    1,
                    5
                ],
                [
                    3,
                    6
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ScoreRange_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("unbounded_min" in data && data.unbounded_min != undefined) {
                    this.unbounded_min = data.unbounded_min;
                }
                if ("min_inclusive" in data && data.min_inclusive != undefined) {
                    this.min_inclusive = data.min_inclusive;
                }
                if ("unbounded_max" in data && data.unbounded_max != undefined) {
                    this.unbounded_max = data.unbounded_max;
                }
                if ("max_exclusive" in data && data.max_exclusive != undefined) {
                    this.max_exclusive = data.max_exclusive;
                }
            }
        }
        get unbounded_min() {
            return pb_1.Message.getWrapperField(this, dependency_1.common._Unbounded, 1);
        }
        set unbounded_min(value) {
            pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, __ScoreRange_one_of_decls, "f")[0], value);
        }
        get has_unbounded_min() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get min_inclusive() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0);
        }
        set min_inclusive(value) {
            pb_1.Message.setOneofField(this, 5, __classPrivateFieldGet(this, __ScoreRange_one_of_decls, "f")[0], value);
        }
        get has_min_inclusive() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get unbounded_max() {
            return pb_1.Message.getWrapperField(this, dependency_1.common._Unbounded, 3);
        }
        set unbounded_max(value) {
            pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, __ScoreRange_one_of_decls, "f")[1], value);
        }
        get has_unbounded_max() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get max_exclusive() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0);
        }
        set max_exclusive(value) {
            pb_1.Message.setOneofField(this, 6, __classPrivateFieldGet(this, __ScoreRange_one_of_decls, "f")[1], value);
        }
        get has_max_exclusive() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get min() {
            const cases = {
                0: "none",
                1: "unbounded_min",
                5: "min_inclusive"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                5
            ])];
        }
        get max() {
            const cases = {
                0: "none",
                3: "unbounded_max",
                6: "max_exclusive"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                3,
                6
            ])];
        }
        static fromObject(data) {
            const message = new _ScoreRange({});
            if (data.unbounded_min != null) {
                message.unbounded_min = dependency_1.common._Unbounded.fromObject(data.unbounded_min);
            }
            if (data.min_inclusive != null) {
                message.min_inclusive = data.min_inclusive;
            }
            if (data.unbounded_max != null) {
                message.unbounded_max = dependency_1.common._Unbounded.fromObject(data.unbounded_max);
            }
            if (data.max_exclusive != null) {
                message.max_exclusive = data.max_exclusive;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.unbounded_min != null) {
                data.unbounded_min = this.unbounded_min.toObject();
            }
            if (this.min_inclusive != null) {
                data.min_inclusive = this.min_inclusive;
            }
            if (this.unbounded_max != null) {
                data.unbounded_max = this.unbounded_max.toObject();
            }
            if (this.max_exclusive != null) {
                data.max_exclusive = this.max_exclusive;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_unbounded_min) writer.writeMessage(1, this.unbounded_min, ()=>this.unbounded_min.serialize(writer));
            if (this.has_min_inclusive) writer.writeDouble(5, this.min_inclusive);
            if (this.has_unbounded_max) writer.writeMessage(3, this.unbounded_max, ()=>this.unbounded_max.serialize(writer));
            if (this.has_max_exclusive) writer.writeDouble(6, this.max_exclusive);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ScoreRange();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.unbounded_min, ()=>message.unbounded_min = dependency_1.common._Unbounded.deserialize(reader));
                        break;
                    case 5:
                        message.min_inclusive = reader.readDouble();
                        break;
                    case 3:
                        reader.readMessage(message.unbounded_max, ()=>message.unbounded_max = dependency_1.common._Unbounded.deserialize(reader));
                        break;
                    case 6:
                        message.max_exclusive = reader.readDouble();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ScoreRange.deserialize(bytes);
        }
    }
    __ScoreRange_one_of_decls = new WeakMap();
    leaderboard._ScoreRange = _ScoreRange;
    class _DeleteLeaderboardRequest extends pb_1.Message {
        constructor(data){
            super();
            __DeleteLeaderboardRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DeleteLeaderboardRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
                if ("leaderboard" in data && data.leaderboard != undefined) {
                    this.leaderboard = data.leaderboard;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get leaderboard() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set leaderboard(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _DeleteLeaderboardRequest({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            if (data.leaderboard != null) {
                message.leaderboard = data.leaderboard;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            if (this.leaderboard != null) {
                data.leaderboard = this.leaderboard;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (this.leaderboard.length) writer.writeString(2, this.leaderboard);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DeleteLeaderboardRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    case 2:
                        message.leaderboard = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DeleteLeaderboardRequest.deserialize(bytes);
        }
    }
    __DeleteLeaderboardRequest_one_of_decls = new WeakMap();
    leaderboard._DeleteLeaderboardRequest = _DeleteLeaderboardRequest;
    class _GetLeaderboardLengthRequest extends pb_1.Message {
        constructor(data){
            super();
            __GetLeaderboardLengthRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GetLeaderboardLengthRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
                if ("leaderboard" in data && data.leaderboard != undefined) {
                    this.leaderboard = data.leaderboard;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get leaderboard() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set leaderboard(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _GetLeaderboardLengthRequest({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            if (data.leaderboard != null) {
                message.leaderboard = data.leaderboard;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            if (this.leaderboard != null) {
                data.leaderboard = this.leaderboard;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (this.leaderboard.length) writer.writeString(2, this.leaderboard);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GetLeaderboardLengthRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    case 2:
                        message.leaderboard = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GetLeaderboardLengthRequest.deserialize(bytes);
        }
    }
    __GetLeaderboardLengthRequest_one_of_decls = new WeakMap();
    leaderboard._GetLeaderboardLengthRequest = _GetLeaderboardLengthRequest;
    class _GetLeaderboardLengthResponse extends pb_1.Message {
        constructor(data){
            super();
            __GetLeaderboardLengthResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GetLeaderboardLengthResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("count" in data && data.count != undefined) {
                    this.count = data.count;
                }
            }
        }
        get count() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0);
        }
        set count(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _GetLeaderboardLengthResponse({});
            if (data.count != null) {
                message.count = data.count;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.count != null) {
                data.count = this.count;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.count != 0) writer.writeUint32(1, this.count);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GetLeaderboardLengthResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.count = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GetLeaderboardLengthResponse.deserialize(bytes);
        }
    }
    __GetLeaderboardLengthResponse_one_of_decls = new WeakMap();
    leaderboard._GetLeaderboardLengthResponse = _GetLeaderboardLengthResponse;
    class _UpsertElementsRequest extends pb_1.Message {
        constructor(data){
            super();
            __UpsertElementsRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                3
            ], __classPrivateFieldGet(this, __UpsertElementsRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
                if ("leaderboard" in data && data.leaderboard != undefined) {
                    this.leaderboard = data.leaderboard;
                }
                if ("elements" in data && data.elements != undefined) {
                    this.elements = data.elements;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get leaderboard() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set leaderboard(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get elements() {
            return pb_1.Message.getRepeatedWrapperField(this, _Element, 3);
        }
        set elements(value) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        static fromObject(data) {
            const message = new _UpsertElementsRequest({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            if (data.leaderboard != null) {
                message.leaderboard = data.leaderboard;
            }
            if (data.elements != null) {
                message.elements = data.elements.map((item)=>_Element.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            if (this.leaderboard != null) {
                data.leaderboard = this.leaderboard;
            }
            if (this.elements != null) {
                data.elements = this.elements.map((item)=>item.toObject());
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (this.leaderboard.length) writer.writeString(2, this.leaderboard);
            if (this.elements.length) writer.writeRepeatedMessage(3, this.elements, (item)=>item.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _UpsertElementsRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    case 2:
                        message.leaderboard = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.elements, ()=>pb_1.Message.addToRepeatedWrapperField(message, 3, _Element.deserialize(reader), _Element));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _UpsertElementsRequest.deserialize(bytes);
        }
    }
    __UpsertElementsRequest_one_of_decls = new WeakMap();
    leaderboard._UpsertElementsRequest = _UpsertElementsRequest;
    class _GetByRankRequest extends pb_1.Message {
        constructor(data){
            super();
            __GetByRankRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GetByRankRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
                if ("leaderboard" in data && data.leaderboard != undefined) {
                    this.leaderboard = data.leaderboard;
                }
                if ("rank_range" in data && data.rank_range != undefined) {
                    this.rank_range = data.rank_range;
                }
                if ("order" in data && data.order != undefined) {
                    this.order = data.order;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get leaderboard() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set leaderboard(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get rank_range() {
            return pb_1.Message.getWrapperField(this, _RankRange, 3);
        }
        set rank_range(value) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_rank_range() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get order() {
            return pb_1.Message.getFieldWithDefault(this, 4, _Order.ASCENDING);
        }
        set order(value) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data) {
            const message = new _GetByRankRequest({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            if (data.leaderboard != null) {
                message.leaderboard = data.leaderboard;
            }
            if (data.rank_range != null) {
                message.rank_range = _RankRange.fromObject(data.rank_range);
            }
            if (data.order != null) {
                message.order = data.order;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            if (this.leaderboard != null) {
                data.leaderboard = this.leaderboard;
            }
            if (this.rank_range != null) {
                data.rank_range = this.rank_range.toObject();
            }
            if (this.order != null) {
                data.order = this.order;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (this.leaderboard.length) writer.writeString(2, this.leaderboard);
            if (this.has_rank_range) writer.writeMessage(3, this.rank_range, ()=>this.rank_range.serialize(writer));
            if (this.order != _Order.ASCENDING) writer.writeEnum(4, this.order);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GetByRankRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    case 2:
                        message.leaderboard = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.rank_range, ()=>message.rank_range = _RankRange.deserialize(reader));
                        break;
                    case 4:
                        message.order = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GetByRankRequest.deserialize(bytes);
        }
    }
    __GetByRankRequest_one_of_decls = new WeakMap();
    leaderboard._GetByRankRequest = _GetByRankRequest;
    class _GetByRankResponse extends pb_1.Message {
        constructor(data){
            super();
            __GetByRankResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                1
            ], __classPrivateFieldGet(this, __GetByRankResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("elements" in data && data.elements != undefined) {
                    this.elements = data.elements;
                }
            }
        }
        get elements() {
            return pb_1.Message.getRepeatedWrapperField(this, _RankedElement, 1);
        }
        set elements(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _GetByRankResponse({});
            if (data.elements != null) {
                message.elements = data.elements.map((item)=>_RankedElement.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.elements != null) {
                data.elements = this.elements.map((item)=>item.toObject());
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.elements.length) writer.writeRepeatedMessage(1, this.elements, (item)=>item.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GetByRankResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.elements, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _RankedElement.deserialize(reader), _RankedElement));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GetByRankResponse.deserialize(bytes);
        }
    }
    __GetByRankResponse_one_of_decls = new WeakMap();
    leaderboard._GetByRankResponse = _GetByRankResponse;
    class _GetRankRequest extends pb_1.Message {
        constructor(data){
            super();
            __GetRankRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                3
            ], __classPrivateFieldGet(this, __GetRankRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
                if ("leaderboard" in data && data.leaderboard != undefined) {
                    this.leaderboard = data.leaderboard;
                }
                if ("ids" in data && data.ids != undefined) {
                    this.ids = data.ids;
                }
                if ("order" in data && data.order != undefined) {
                    this.order = data.order;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get leaderboard() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set leaderboard(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get ids() {
            return pb_1.Message.getFieldWithDefault(this, 3, []);
        }
        set ids(value) {
            pb_1.Message.setField(this, 3, value);
        }
        get order() {
            return pb_1.Message.getFieldWithDefault(this, 4, _Order.ASCENDING);
        }
        set order(value) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data) {
            const message = new _GetRankRequest({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            if (data.leaderboard != null) {
                message.leaderboard = data.leaderboard;
            }
            if (data.ids != null) {
                message.ids = data.ids;
            }
            if (data.order != null) {
                message.order = data.order;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            if (this.leaderboard != null) {
                data.leaderboard = this.leaderboard;
            }
            if (this.ids != null) {
                data.ids = this.ids;
            }
            if (this.order != null) {
                data.order = this.order;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (this.leaderboard.length) writer.writeString(2, this.leaderboard);
            if (this.ids.length) writer.writePackedUint32(3, this.ids);
            if (this.order != _Order.ASCENDING) writer.writeEnum(4, this.order);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GetRankRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    case 2:
                        message.leaderboard = reader.readString();
                        break;
                    case 3:
                        message.ids = reader.readPackedUint32();
                        break;
                    case 4:
                        message.order = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GetRankRequest.deserialize(bytes);
        }
    }
    __GetRankRequest_one_of_decls = new WeakMap();
    leaderboard._GetRankRequest = _GetRankRequest;
    class _GetRankResponse extends pb_1.Message {
        constructor(data){
            super();
            __GetRankResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                1
            ], __classPrivateFieldGet(this, __GetRankResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("elements" in data && data.elements != undefined) {
                    this.elements = data.elements;
                }
            }
        }
        get elements() {
            return pb_1.Message.getRepeatedWrapperField(this, _RankedElement, 1);
        }
        set elements(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _GetRankResponse({});
            if (data.elements != null) {
                message.elements = data.elements.map((item)=>_RankedElement.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.elements != null) {
                data.elements = this.elements.map((item)=>item.toObject());
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.elements.length) writer.writeRepeatedMessage(1, this.elements, (item)=>item.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GetRankResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.elements, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _RankedElement.deserialize(reader), _RankedElement));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GetRankResponse.deserialize(bytes);
        }
    }
    __GetRankResponse_one_of_decls = new WeakMap();
    leaderboard._GetRankResponse = _GetRankResponse;
    class _RemoveElementsRequest extends pb_1.Message {
        constructor(data){
            super();
            __RemoveElementsRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                3
            ], __classPrivateFieldGet(this, __RemoveElementsRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
                if ("leaderboard" in data && data.leaderboard != undefined) {
                    this.leaderboard = data.leaderboard;
                }
                if ("ids" in data && data.ids != undefined) {
                    this.ids = data.ids;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get leaderboard() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set leaderboard(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get ids() {
            return pb_1.Message.getFieldWithDefault(this, 3, []);
        }
        set ids(value) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data) {
            const message = new _RemoveElementsRequest({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            if (data.leaderboard != null) {
                message.leaderboard = data.leaderboard;
            }
            if (data.ids != null) {
                message.ids = data.ids;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            if (this.leaderboard != null) {
                data.leaderboard = this.leaderboard;
            }
            if (this.ids != null) {
                data.ids = this.ids;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (this.leaderboard.length) writer.writeString(2, this.leaderboard);
            if (this.ids.length) writer.writePackedUint32(3, this.ids);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _RemoveElementsRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    case 2:
                        message.leaderboard = reader.readString();
                        break;
                    case 3:
                        message.ids = reader.readPackedUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _RemoveElementsRequest.deserialize(bytes);
        }
    }
    __RemoveElementsRequest_one_of_decls = new WeakMap();
    leaderboard._RemoveElementsRequest = _RemoveElementsRequest;
    class _GetByScoreRequest extends pb_1.Message {
        constructor(data){
            super();
            __GetByScoreRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GetByScoreRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
                if ("leaderboard" in data && data.leaderboard != undefined) {
                    this.leaderboard = data.leaderboard;
                }
                if ("score_range" in data && data.score_range != undefined) {
                    this.score_range = data.score_range;
                }
                if ("offset" in data && data.offset != undefined) {
                    this.offset = data.offset;
                }
                if ("limit_elements" in data && data.limit_elements != undefined) {
                    this.limit_elements = data.limit_elements;
                }
                if ("order" in data && data.order != undefined) {
                    this.order = data.order;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get leaderboard() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set leaderboard(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get score_range() {
            return pb_1.Message.getWrapperField(this, _ScoreRange, 3);
        }
        set score_range(value) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_score_range() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get offset() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0);
        }
        set offset(value) {
            pb_1.Message.setField(this, 4, value);
        }
        get limit_elements() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0);
        }
        set limit_elements(value) {
            pb_1.Message.setField(this, 5, value);
        }
        get order() {
            return pb_1.Message.getFieldWithDefault(this, 6, _Order.ASCENDING);
        }
        set order(value) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data) {
            const message = new _GetByScoreRequest({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            if (data.leaderboard != null) {
                message.leaderboard = data.leaderboard;
            }
            if (data.score_range != null) {
                message.score_range = _ScoreRange.fromObject(data.score_range);
            }
            if (data.offset != null) {
                message.offset = data.offset;
            }
            if (data.limit_elements != null) {
                message.limit_elements = data.limit_elements;
            }
            if (data.order != null) {
                message.order = data.order;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            if (this.leaderboard != null) {
                data.leaderboard = this.leaderboard;
            }
            if (this.score_range != null) {
                data.score_range = this.score_range.toObject();
            }
            if (this.offset != null) {
                data.offset = this.offset;
            }
            if (this.limit_elements != null) {
                data.limit_elements = this.limit_elements;
            }
            if (this.order != null) {
                data.order = this.order;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (this.leaderboard.length) writer.writeString(2, this.leaderboard);
            if (this.has_score_range) writer.writeMessage(3, this.score_range, ()=>this.score_range.serialize(writer));
            if (this.offset != 0) writer.writeUint32(4, this.offset);
            if (this.limit_elements != 0) writer.writeUint32(5, this.limit_elements);
            if (this.order != _Order.ASCENDING) writer.writeEnum(6, this.order);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GetByScoreRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    case 2:
                        message.leaderboard = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.score_range, ()=>message.score_range = _ScoreRange.deserialize(reader));
                        break;
                    case 4:
                        message.offset = reader.readUint32();
                        break;
                    case 5:
                        message.limit_elements = reader.readUint32();
                        break;
                    case 6:
                        message.order = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GetByScoreRequest.deserialize(bytes);
        }
    }
    __GetByScoreRequest_one_of_decls = new WeakMap();
    leaderboard._GetByScoreRequest = _GetByScoreRequest;
    class _GetByScoreResponse extends pb_1.Message {
        constructor(data){
            super();
            __GetByScoreResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                1
            ], __classPrivateFieldGet(this, __GetByScoreResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("elements" in data && data.elements != undefined) {
                    this.elements = data.elements;
                }
            }
        }
        get elements() {
            return pb_1.Message.getRepeatedWrapperField(this, _RankedElement, 1);
        }
        set elements(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _GetByScoreResponse({});
            if (data.elements != null) {
                message.elements = data.elements.map((item)=>_RankedElement.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.elements != null) {
                data.elements = this.elements.map((item)=>item.toObject());
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.elements.length) writer.writeRepeatedMessage(1, this.elements, (item)=>item.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GetByScoreResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.elements, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _RankedElement.deserialize(reader), _RankedElement));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GetByScoreResponse.deserialize(bytes);
        }
    }
    __GetByScoreResponse_one_of_decls = new WeakMap();
    leaderboard._GetByScoreResponse = _GetByScoreResponse;
    class UnimplementedLeaderboardService {
    }
    UnimplementedLeaderboardService.definition = {
        DeleteLeaderboard: {
            path: "/leaderboard.Leaderboard/DeleteLeaderboard",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_DeleteLeaderboardRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>dependency_1.common._Empty.deserialize(new Uint8Array(bytes))
        },
        UpsertElements: {
            path: "/leaderboard.Leaderboard/UpsertElements",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_UpsertElementsRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>dependency_1.common._Empty.deserialize(new Uint8Array(bytes))
        },
        RemoveElements: {
            path: "/leaderboard.Leaderboard/RemoveElements",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_RemoveElementsRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>dependency_1.common._Empty.deserialize(new Uint8Array(bytes))
        },
        GetLeaderboardLength: {
            path: "/leaderboard.Leaderboard/GetLeaderboardLength",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_GetLeaderboardLengthRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_GetLeaderboardLengthResponse.deserialize(new Uint8Array(bytes))
        },
        GetByRank: {
            path: "/leaderboard.Leaderboard/GetByRank",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_GetByRankRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_GetByRankResponse.deserialize(new Uint8Array(bytes))
        },
        GetRank: {
            path: "/leaderboard.Leaderboard/GetRank",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_GetRankRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_GetRankResponse.deserialize(new Uint8Array(bytes))
        },
        GetByScore: {
            path: "/leaderboard.Leaderboard/GetByScore",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_GetByScoreRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_GetByScoreResponse.deserialize(new Uint8Array(bytes))
        }
    };
    leaderboard.UnimplementedLeaderboardService = UnimplementedLeaderboardService;
    class LeaderboardClient extends grpc_1.makeGenericClientConstructor(UnimplementedLeaderboardService.definition, "Leaderboard", {}) {
        constructor(address, credentials, options){
            super(address, credentials, options);
            this.DeleteLeaderboard = (message, metadata, options, callback)=>{
                return super.DeleteLeaderboard(message, metadata, options, callback);
            };
            this.UpsertElements = (message, metadata, options, callback)=>{
                return super.UpsertElements(message, metadata, options, callback);
            };
            this.RemoveElements = (message, metadata, options, callback)=>{
                return super.RemoveElements(message, metadata, options, callback);
            };
            this.GetLeaderboardLength = (message, metadata, options, callback)=>{
                return super.GetLeaderboardLength(message, metadata, options, callback);
            };
            this.GetByRank = (message, metadata, options, callback)=>{
                return super.GetByRank(message, metadata, options, callback);
            };
            this.GetRank = (message, metadata, options, callback)=>{
                return super.GetRank(message, metadata, options, callback);
            };
            this.GetByScore = (message, metadata, options, callback)=>{
                return super.GetByScore(message, metadata, options, callback);
            };
        }
    }
    leaderboard.LeaderboardClient = LeaderboardClient;
})(leaderboard = exports.leaderboard || (exports.leaderboard = {}));

}.call(this) }),
"[project]/node_modules/@gomomento/generated-types/dist/webhook.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.webhook = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: webhook.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */ const pb_1 = __importStar(__turbopack_require__("[project]/node_modules/google-protobuf/google-protobuf.js [app-route] (ecmascript)"));
const grpc_1 = __importStar(__turbopack_require__("[project]/node_modules/@grpc/grpc-js/build/src/index.js [app-route] (ecmascript)"));
var webhook;
(function(webhook) {
    var __WebhookId_one_of_decls, __Webhook_one_of_decls, __PutWebhookRequest_one_of_decls, __PutWebhookResponse_one_of_decls, __DeleteWebhookRequest_one_of_decls, __DeleteWebhookResponse_one_of_decls, __ListWebhookRequest_one_of_decls, __ListWebhooksResponse_one_of_decls, __GetWebhookSecretRequest_one_of_decls, __GetWebhookSecretResponse_one_of_decls, __WebhookDestination_one_of_decls, __RotateWebhookSecretRequest_one_of_decls, __RotateWebhookSecretResponse_one_of_decls;
    class _WebhookId extends pb_1.Message {
        constructor(data){
            super();
            __WebhookId_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __WebhookId_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
                if ("webhook_name" in data && data.webhook_name != undefined) {
                    this.webhook_name = data.webhook_name;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get webhook_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set webhook_name(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _WebhookId({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            if (data.webhook_name != null) {
                message.webhook_name = data.webhook_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            if (this.webhook_name != null) {
                data.webhook_name = this.webhook_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (this.webhook_name.length) writer.writeString(2, this.webhook_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _WebhookId();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    case 2:
                        message.webhook_name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _WebhookId.deserialize(bytes);
        }
    }
    __WebhookId_one_of_decls = new WeakMap();
    webhook._WebhookId = _WebhookId;
    class _Webhook extends pb_1.Message {
        constructor(data){
            super();
            __Webhook_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __Webhook_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("webhook_id" in data && data.webhook_id != undefined) {
                    this.webhook_id = data.webhook_id;
                }
                if ("topic_name" in data && data.topic_name != undefined) {
                    this.topic_name = data.topic_name;
                }
                if ("destination" in data && data.destination != undefined) {
                    this.destination = data.destination;
                }
            }
        }
        get webhook_id() {
            return pb_1.Message.getWrapperField(this, _WebhookId, 1);
        }
        set webhook_id(value) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_webhook_id() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get topic_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set topic_name(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get destination() {
            return pb_1.Message.getWrapperField(this, _WebhookDestination, 3);
        }
        set destination(value) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_destination() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data) {
            const message = new _Webhook({});
            if (data.webhook_id != null) {
                message.webhook_id = _WebhookId.fromObject(data.webhook_id);
            }
            if (data.topic_name != null) {
                message.topic_name = data.topic_name;
            }
            if (data.destination != null) {
                message.destination = _WebhookDestination.fromObject(data.destination);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.webhook_id != null) {
                data.webhook_id = this.webhook_id.toObject();
            }
            if (this.topic_name != null) {
                data.topic_name = this.topic_name;
            }
            if (this.destination != null) {
                data.destination = this.destination.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_webhook_id) writer.writeMessage(1, this.webhook_id, ()=>this.webhook_id.serialize(writer));
            if (this.topic_name.length) writer.writeString(2, this.topic_name);
            if (this.has_destination) writer.writeMessage(3, this.destination, ()=>this.destination.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _Webhook();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.webhook_id, ()=>message.webhook_id = _WebhookId.deserialize(reader));
                        break;
                    case 2:
                        message.topic_name = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.destination, ()=>message.destination = _WebhookDestination.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _Webhook.deserialize(bytes);
        }
    }
    __Webhook_one_of_decls = new WeakMap();
    webhook._Webhook = _Webhook;
    class _PutWebhookRequest extends pb_1.Message {
        constructor(data){
            super();
            __PutWebhookRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __PutWebhookRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("webhook" in data && data.webhook != undefined) {
                    this.webhook = data.webhook;
                }
            }
        }
        get webhook() {
            return pb_1.Message.getWrapperField(this, _Webhook, 1);
        }
        set webhook(value) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_webhook() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data) {
            const message = new _PutWebhookRequest({});
            if (data.webhook != null) {
                message.webhook = _Webhook.fromObject(data.webhook);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.webhook != null) {
                data.webhook = this.webhook.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_webhook) writer.writeMessage(1, this.webhook, ()=>this.webhook.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _PutWebhookRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.webhook, ()=>message.webhook = _Webhook.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _PutWebhookRequest.deserialize(bytes);
        }
    }
    __PutWebhookRequest_one_of_decls = new WeakMap();
    webhook._PutWebhookRequest = _PutWebhookRequest;
    class _PutWebhookResponse extends pb_1.Message {
        constructor(data){
            super();
            __PutWebhookResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __PutWebhookResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("secret_string" in data && data.secret_string != undefined) {
                    this.secret_string = data.secret_string;
                }
            }
        }
        get secret_string() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set secret_string(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _PutWebhookResponse({});
            if (data.secret_string != null) {
                message.secret_string = data.secret_string;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.secret_string != null) {
                data.secret_string = this.secret_string;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.secret_string.length) writer.writeString(1, this.secret_string);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _PutWebhookResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.secret_string = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _PutWebhookResponse.deserialize(bytes);
        }
    }
    __PutWebhookResponse_one_of_decls = new WeakMap();
    webhook._PutWebhookResponse = _PutWebhookResponse;
    class _DeleteWebhookRequest extends pb_1.Message {
        constructor(data){
            super();
            __DeleteWebhookRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DeleteWebhookRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("webhook_id" in data && data.webhook_id != undefined) {
                    this.webhook_id = data.webhook_id;
                }
            }
        }
        get webhook_id() {
            return pb_1.Message.getWrapperField(this, _WebhookId, 1);
        }
        set webhook_id(value) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_webhook_id() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data) {
            const message = new _DeleteWebhookRequest({});
            if (data.webhook_id != null) {
                message.webhook_id = _WebhookId.fromObject(data.webhook_id);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.webhook_id != null) {
                data.webhook_id = this.webhook_id.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_webhook_id) writer.writeMessage(1, this.webhook_id, ()=>this.webhook_id.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DeleteWebhookRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.webhook_id, ()=>message.webhook_id = _WebhookId.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DeleteWebhookRequest.deserialize(bytes);
        }
    }
    __DeleteWebhookRequest_one_of_decls = new WeakMap();
    webhook._DeleteWebhookRequest = _DeleteWebhookRequest;
    class _DeleteWebhookResponse extends pb_1.Message {
        constructor(data){
            super();
            __DeleteWebhookResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __DeleteWebhookResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _DeleteWebhookResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _DeleteWebhookResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _DeleteWebhookResponse.deserialize(bytes);
        }
    }
    __DeleteWebhookResponse_one_of_decls = new WeakMap();
    webhook._DeleteWebhookResponse = _DeleteWebhookResponse;
    class _ListWebhookRequest extends pb_1.Message {
        constructor(data){
            super();
            __ListWebhookRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __ListWebhookRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ListWebhookRequest({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListWebhookRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListWebhookRequest.deserialize(bytes);
        }
    }
    __ListWebhookRequest_one_of_decls = new WeakMap();
    webhook._ListWebhookRequest = _ListWebhookRequest;
    class _ListWebhooksResponse extends pb_1.Message {
        constructor(data){
            super();
            __ListWebhooksResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [
                1
            ], __classPrivateFieldGet(this, __ListWebhooksResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("webhook" in data && data.webhook != undefined) {
                    this.webhook = data.webhook;
                }
            }
        }
        get webhook() {
            return pb_1.Message.getRepeatedWrapperField(this, _Webhook, 1);
        }
        set webhook(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _ListWebhooksResponse({});
            if (data.webhook != null) {
                message.webhook = data.webhook.map((item)=>_Webhook.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.webhook != null) {
                data.webhook = this.webhook.map((item)=>item.toObject());
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.webhook.length) writer.writeRepeatedMessage(1, this.webhook, (item)=>item.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _ListWebhooksResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.webhook, ()=>pb_1.Message.addToRepeatedWrapperField(message, 1, _Webhook.deserialize(reader), _Webhook));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _ListWebhooksResponse.deserialize(bytes);
        }
    }
    __ListWebhooksResponse_one_of_decls = new WeakMap();
    webhook._ListWebhooksResponse = _ListWebhooksResponse;
    class _GetWebhookSecretRequest extends pb_1.Message {
        constructor(data){
            super();
            __GetWebhookSecretRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GetWebhookSecretRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
                if ("webhook_name" in data && data.webhook_name != undefined) {
                    this.webhook_name = data.webhook_name;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get webhook_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set webhook_name(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new _GetWebhookSecretRequest({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            if (data.webhook_name != null) {
                message.webhook_name = data.webhook_name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            if (this.webhook_name != null) {
                data.webhook_name = this.webhook_name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (this.webhook_name.length) writer.writeString(2, this.webhook_name);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GetWebhookSecretRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    case 2:
                        message.webhook_name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GetWebhookSecretRequest.deserialize(bytes);
        }
    }
    __GetWebhookSecretRequest_one_of_decls = new WeakMap();
    webhook._GetWebhookSecretRequest = _GetWebhookSecretRequest;
    class _GetWebhookSecretResponse extends pb_1.Message {
        constructor(data){
            super();
            __GetWebhookSecretResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __GetWebhookSecretResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("cache_name" in data && data.cache_name != undefined) {
                    this.cache_name = data.cache_name;
                }
                if ("webhook_name" in data && data.webhook_name != undefined) {
                    this.webhook_name = data.webhook_name;
                }
                if ("secret_string" in data && data.secret_string != undefined) {
                    this.secret_string = data.secret_string;
                }
            }
        }
        get cache_name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set cache_name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get webhook_name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set webhook_name(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get secret_string() {
            return pb_1.Message.getFieldWithDefault(this, 3, "");
        }
        set secret_string(value) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data) {
            const message = new _GetWebhookSecretResponse({});
            if (data.cache_name != null) {
                message.cache_name = data.cache_name;
            }
            if (data.webhook_name != null) {
                message.webhook_name = data.webhook_name;
            }
            if (data.secret_string != null) {
                message.secret_string = data.secret_string;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.cache_name != null) {
                data.cache_name = this.cache_name;
            }
            if (this.webhook_name != null) {
                data.webhook_name = this.webhook_name;
            }
            if (this.secret_string != null) {
                data.secret_string = this.secret_string;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.cache_name.length) writer.writeString(1, this.cache_name);
            if (this.webhook_name.length) writer.writeString(2, this.webhook_name);
            if (this.secret_string.length) writer.writeString(3, this.secret_string);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _GetWebhookSecretResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.cache_name = reader.readString();
                        break;
                    case 2:
                        message.webhook_name = reader.readString();
                        break;
                    case 3:
                        message.secret_string = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _GetWebhookSecretResponse.deserialize(bytes);
        }
    }
    __GetWebhookSecretResponse_one_of_decls = new WeakMap();
    webhook._GetWebhookSecretResponse = _GetWebhookSecretResponse;
    class _WebhookDestination extends pb_1.Message {
        constructor(data){
            super();
            __WebhookDestination_one_of_decls.set(this, [
                [
                    1
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __WebhookDestination_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("post_url" in data && data.post_url != undefined) {
                    this.post_url = data.post_url;
                }
            }
        }
        get post_url() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set post_url(value) {
            pb_1.Message.setOneofField(this, 1, __classPrivateFieldGet(this, __WebhookDestination_one_of_decls, "f")[0], value);
        }
        get has_post_url() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get kind() {
            const cases = {
                0: "none",
                1: "post_url"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1
            ])];
        }
        static fromObject(data) {
            const message = new _WebhookDestination({});
            if (data.post_url != null) {
                message.post_url = data.post_url;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.post_url != null) {
                data.post_url = this.post_url;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_post_url) writer.writeString(1, this.post_url);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _WebhookDestination();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.post_url = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _WebhookDestination.deserialize(bytes);
        }
    }
    __WebhookDestination_one_of_decls = new WeakMap();
    webhook._WebhookDestination = _WebhookDestination;
    class _RotateWebhookSecretRequest extends pb_1.Message {
        constructor(data){
            super();
            __RotateWebhookSecretRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __RotateWebhookSecretRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("webhook_id" in data && data.webhook_id != undefined) {
                    this.webhook_id = data.webhook_id;
                }
            }
        }
        get webhook_id() {
            return pb_1.Message.getWrapperField(this, _WebhookId, 1);
        }
        set webhook_id(value) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_webhook_id() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data) {
            const message = new _RotateWebhookSecretRequest({});
            if (data.webhook_id != null) {
                message.webhook_id = _WebhookId.fromObject(data.webhook_id);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.webhook_id != null) {
                data.webhook_id = this.webhook_id.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_webhook_id) writer.writeMessage(1, this.webhook_id, ()=>this.webhook_id.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _RotateWebhookSecretRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.webhook_id, ()=>message.webhook_id = _WebhookId.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _RotateWebhookSecretRequest.deserialize(bytes);
        }
    }
    __RotateWebhookSecretRequest_one_of_decls = new WeakMap();
    webhook._RotateWebhookSecretRequest = _RotateWebhookSecretRequest;
    class _RotateWebhookSecretResponse extends pb_1.Message {
        constructor(data){
            super();
            __RotateWebhookSecretResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __RotateWebhookSecretResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("secret_string" in data && data.secret_string != undefined) {
                    this.secret_string = data.secret_string;
                }
            }
        }
        get secret_string() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set secret_string(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _RotateWebhookSecretResponse({});
            if (data.secret_string != null) {
                message.secret_string = data.secret_string;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.secret_string != null) {
                data.secret_string = this.secret_string;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.secret_string.length) writer.writeString(1, this.secret_string);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _RotateWebhookSecretResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.secret_string = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _RotateWebhookSecretResponse.deserialize(bytes);
        }
    }
    __RotateWebhookSecretResponse_one_of_decls = new WeakMap();
    webhook._RotateWebhookSecretResponse = _RotateWebhookSecretResponse;
    class UnimplementedWebhookService {
    }
    UnimplementedWebhookService.definition = {
        PutWebhook: {
            path: "/webhook.Webhook/PutWebhook",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_PutWebhookRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_PutWebhookResponse.deserialize(new Uint8Array(bytes))
        },
        DeleteWebhook: {
            path: "/webhook.Webhook/DeleteWebhook",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_DeleteWebhookRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_DeleteWebhookResponse.deserialize(new Uint8Array(bytes))
        },
        ListWebhooks: {
            path: "/webhook.Webhook/ListWebhooks",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_ListWebhookRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_ListWebhooksResponse.deserialize(new Uint8Array(bytes))
        },
        GetWebhookSecret: {
            path: "/webhook.Webhook/GetWebhookSecret",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_GetWebhookSecretRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_GetWebhookSecretResponse.deserialize(new Uint8Array(bytes))
        },
        RotateWebhookSecret: {
            path: "/webhook.Webhook/RotateWebhookSecret",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_RotateWebhookSecretRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_RotateWebhookSecretResponse.deserialize(new Uint8Array(bytes))
        }
    };
    webhook.UnimplementedWebhookService = UnimplementedWebhookService;
    class WebhookClient extends grpc_1.makeGenericClientConstructor(UnimplementedWebhookService.definition, "Webhook", {}) {
        constructor(address, credentials, options){
            super(address, credentials, options);
            this.PutWebhook = (message, metadata, options, callback)=>{
                return super.PutWebhook(message, metadata, options, callback);
            };
            this.DeleteWebhook = (message, metadata, options, callback)=>{
                return super.DeleteWebhook(message, metadata, options, callback);
            };
            this.ListWebhooks = (message, metadata, options, callback)=>{
                return super.ListWebhooks(message, metadata, options, callback);
            };
            this.GetWebhookSecret = (message, metadata, options, callback)=>{
                return super.GetWebhookSecret(message, metadata, options, callback);
            };
            this.RotateWebhookSecret = (message, metadata, options, callback)=>{
                return super.RotateWebhookSecret(message, metadata, options, callback);
            };
        }
    }
    webhook.WebhookClient = WebhookClient;
})(webhook = exports.webhook || (exports.webhook = {}));

}.call(this) }),
"[project]/node_modules/@gomomento/generated-types/dist/store.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.store = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: store.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */ const pb_1 = __importStar(__turbopack_require__("[project]/node_modules/google-protobuf/google-protobuf.js [app-route] (ecmascript)"));
const grpc_1 = __importStar(__turbopack_require__("[project]/node_modules/@grpc/grpc-js/build/src/index.js [app-route] (ecmascript)"));
var store;
(function(store) {
    var __StoreValue_one_of_decls, __StoreGetRequest_one_of_decls, __StoreGetResponse_one_of_decls, __StorePutRequest_one_of_decls, __StorePutResponse_one_of_decls, __StoreDeleteRequest_one_of_decls, __StoreDeleteResponse_one_of_decls;
    class _StoreValue extends pb_1.Message {
        constructor(data){
            super();
            __StoreValue_one_of_decls.set(this, [
                [
                    1,
                    2,
                    3,
                    4
                ]
            ]);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __StoreValue_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("bytes_value" in data && data.bytes_value != undefined) {
                    this.bytes_value = data.bytes_value;
                }
                if ("string_value" in data && data.string_value != undefined) {
                    this.string_value = data.string_value;
                }
                if ("integer_value" in data && data.integer_value != undefined) {
                    this.integer_value = data.integer_value;
                }
                if ("double_value" in data && data.double_value != undefined) {
                    this.double_value = data.double_value;
                }
            }
        }
        get bytes_value() {
            return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array(0));
        }
        set bytes_value(value) {
            pb_1.Message.setOneofField(this, 1, __classPrivateFieldGet(this, __StoreValue_one_of_decls, "f")[0], value);
        }
        get has_bytes_value() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get string_value() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set string_value(value) {
            pb_1.Message.setOneofField(this, 2, __classPrivateFieldGet(this, __StoreValue_one_of_decls, "f")[0], value);
        }
        get has_string_value() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get integer_value() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0);
        }
        set integer_value(value) {
            pb_1.Message.setOneofField(this, 3, __classPrivateFieldGet(this, __StoreValue_one_of_decls, "f")[0], value);
        }
        get has_integer_value() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get double_value() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0);
        }
        set double_value(value) {
            pb_1.Message.setOneofField(this, 4, __classPrivateFieldGet(this, __StoreValue_one_of_decls, "f")[0], value);
        }
        get has_double_value() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get value() {
            const cases = {
                0: "none",
                1: "bytes_value",
                2: "string_value",
                3: "integer_value",
                4: "double_value"
            };
            return cases[pb_1.Message.computeOneofCase(this, [
                1,
                2,
                3,
                4
            ])];
        }
        static fromObject(data) {
            const message = new _StoreValue({});
            if (data.bytes_value != null) {
                message.bytes_value = data.bytes_value;
            }
            if (data.string_value != null) {
                message.string_value = data.string_value;
            }
            if (data.integer_value != null) {
                message.integer_value = data.integer_value;
            }
            if (data.double_value != null) {
                message.double_value = data.double_value;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.bytes_value != null) {
                data.bytes_value = this.bytes_value;
            }
            if (this.string_value != null) {
                data.string_value = this.string_value;
            }
            if (this.integer_value != null) {
                data.integer_value = this.integer_value;
            }
            if (this.double_value != null) {
                data.double_value = this.double_value;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_bytes_value) writer.writeBytes(1, this.bytes_value);
            if (this.has_string_value) writer.writeString(2, this.string_value);
            if (this.has_integer_value) writer.writeInt64(3, this.integer_value);
            if (this.has_double_value) writer.writeDouble(4, this.double_value);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _StoreValue();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.bytes_value = reader.readBytes();
                        break;
                    case 2:
                        message.string_value = reader.readString();
                        break;
                    case 3:
                        message.integer_value = reader.readInt64();
                        break;
                    case 4:
                        message.double_value = reader.readDouble();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _StoreValue.deserialize(bytes);
        }
    }
    __StoreValue_one_of_decls = new WeakMap();
    store._StoreValue = _StoreValue;
    class _StoreGetRequest extends pb_1.Message {
        constructor(data){
            super();
            __StoreGetRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __StoreGetRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("key" in data && data.key != undefined) {
                    this.key = data.key;
                }
            }
        }
        get key() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _StoreGetRequest({});
            if (data.key != null) {
                message.key = data.key;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.key != null) {
                data.key = this.key;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.key.length) writer.writeString(1, this.key);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _StoreGetRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.key = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _StoreGetRequest.deserialize(bytes);
        }
    }
    __StoreGetRequest_one_of_decls = new WeakMap();
    store._StoreGetRequest = _StoreGetRequest;
    class _StoreGetResponse extends pb_1.Message {
        constructor(data){
            super();
            __StoreGetResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __StoreGetResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
            }
        }
        get value() {
            return pb_1.Message.getWrapperField(this, _StoreValue, 1);
        }
        set value(value) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_value() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data) {
            const message = new _StoreGetResponse({});
            if (data.value != null) {
                message.value = _StoreValue.fromObject(data.value);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.value != null) {
                data.value = this.value.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_value) writer.writeMessage(1, this.value, ()=>this.value.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _StoreGetResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        reader.readMessage(message.value, ()=>message.value = _StoreValue.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _StoreGetResponse.deserialize(bytes);
        }
    }
    __StoreGetResponse_one_of_decls = new WeakMap();
    store._StoreGetResponse = _StoreGetResponse;
    class _StorePutRequest extends pb_1.Message {
        constructor(data){
            super();
            __StorePutRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __StorePutRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("key" in data && data.key != undefined) {
                    this.key = data.key;
                }
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
            }
        }
        get key() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get value() {
            return pb_1.Message.getWrapperField(this, _StoreValue, 2);
        }
        set value(value) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_value() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data) {
            const message = new _StorePutRequest({});
            if (data.key != null) {
                message.key = data.key;
            }
            if (data.value != null) {
                message.value = _StoreValue.fromObject(data.value);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.key != null) {
                data.key = this.key;
            }
            if (this.value != null) {
                data.value = this.value.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.key.length) writer.writeString(1, this.key);
            if (this.has_value) writer.writeMessage(2, this.value, ()=>this.value.serialize(writer));
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _StorePutRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.key = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.value, ()=>message.value = _StoreValue.deserialize(reader));
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _StorePutRequest.deserialize(bytes);
        }
    }
    __StorePutRequest_one_of_decls = new WeakMap();
    store._StorePutRequest = _StorePutRequest;
    class _StorePutResponse extends pb_1.Message {
        constructor(data){
            super();
            __StorePutResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __StorePutResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _StorePutResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _StorePutResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _StorePutResponse.deserialize(bytes);
        }
    }
    __StorePutResponse_one_of_decls = new WeakMap();
    store._StorePutResponse = _StorePutResponse;
    class _StoreDeleteRequest extends pb_1.Message {
        constructor(data){
            super();
            __StoreDeleteRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __StoreDeleteRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("key" in data && data.key != undefined) {
                    this.key = data.key;
                }
            }
        }
        get key() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set key(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new _StoreDeleteRequest({});
            if (data.key != null) {
                message.key = data.key;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.key != null) {
                data.key = this.key;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.key.length) writer.writeString(1, this.key);
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _StoreDeleteRequest();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    case 1:
                        message.key = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _StoreDeleteRequest.deserialize(bytes);
        }
    }
    __StoreDeleteRequest_one_of_decls = new WeakMap();
    store._StoreDeleteRequest = _StoreDeleteRequest;
    class _StoreDeleteResponse extends pb_1.Message {
        constructor(data){
            super();
            __StoreDeleteResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, __StoreDeleteResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {}
        }
        static fromObject(data) {
            const message = new _StoreDeleteResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w) return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new _StoreDeleteResponse();
            while(reader.nextField()){
                if (reader.isEndGroup()) break;
                switch(reader.getFieldNumber()){
                    default:
                        reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return _StoreDeleteResponse.deserialize(bytes);
        }
    }
    __StoreDeleteResponse_one_of_decls = new WeakMap();
    store._StoreDeleteResponse = _StoreDeleteResponse;
    class UnimplementedStoreService {
    }
    UnimplementedStoreService.definition = {
        Get: {
            path: "/store.Store/Get",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_StoreGetRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_StoreGetResponse.deserialize(new Uint8Array(bytes))
        },
        Put: {
            path: "/store.Store/Put",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_StorePutRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_StorePutResponse.deserialize(new Uint8Array(bytes))
        },
        Delete: {
            path: "/store.Store/Delete",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message)=>Buffer.from(message.serialize()),
            requestDeserialize: (bytes)=>_StoreDeleteRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message)=>Buffer.from(message.serialize()),
            responseDeserialize: (bytes)=>_StoreDeleteResponse.deserialize(new Uint8Array(bytes))
        }
    };
    store.UnimplementedStoreService = UnimplementedStoreService;
    class StoreClient extends grpc_1.makeGenericClientConstructor(UnimplementedStoreService.definition, "Store", {}) {
        constructor(address, credentials, options){
            super(address, credentials, options);
            this.Get = (message, metadata, options, callback)=>{
                return super.Get(message, metadata, options, callback);
            };
            this.Put = (message, metadata, options, callback)=>{
                return super.Put(message, metadata, options, callback);
            };
            this.Delete = (message, metadata, options, callback)=>{
                return super.Delete(message, metadata, options, callback);
            };
        }
    }
    store.StoreClient = StoreClient;
})(store = exports.store || (exports.store = {}));

}.call(this) }),
"[project]/node_modules/@gomomento/generated-types/dist/index.js [app-route] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.store = exports.webhook = exports.leaderboard = exports.token = exports.auth = exports.ping = exports.pubsub = exports.control = exports.cache = void 0;
exports.cache = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/cacheclient.js [app-route] (ecmascript)"));
exports.control = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/controlclient.js [app-route] (ecmascript)"));
exports.pubsub = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/cachepubsub.js [app-route] (ecmascript)"));
exports.ping = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/cacheping.js [app-route] (ecmascript)"));
exports.auth = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/auth.js [app-route] (ecmascript)"));
exports.token = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/token.js [app-route] (ecmascript)"));
exports.leaderboard = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/leaderboard.js [app-route] (ecmascript)"));
exports.webhook = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/webhook.js [app-route] (ecmascript)"));
exports.store = __importStar(__turbopack_require__("[project]/node_modules/@gomomento/generated-types/dist/store.js [app-route] (ecmascript)"));

}.call(this) }),

};

//# sourceMappingURL=node_modules_%40gomomento_generated-types_dist_3bcc42._.js.map