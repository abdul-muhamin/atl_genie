{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/errors/errors.ts"],"sourcesContent":["export enum MomentoErrorCode {\n  // Invalid argument passed to Momento client\n  INVALID_ARGUMENT_ERROR = 'INVALID_ARGUMENT_ERROR',\n  // Service returned an unknown response\n  UNKNOWN_SERVICE_ERROR = 'UNKNOWN_SERVICE_ERROR',\n  // Cache with specified name already exists\n  CACHE_ALREADY_EXISTS_ERROR = 'ALREADY_EXISTS_ERROR',\n  /** @deprecated use CACHE_ALREADY_EXISTS_ERROR instead */\n  ALREADY_EXISTS_ERROR = 'ALREADY_EXISTS_ERROR',\n  // Store with specified name already exists\n  STORE_ALREADY_EXISTS_ERROR = 'ALREADY_EXISTS_ERROR',\n  // Cache with specified name doesn't exist\n  CACHE_NOT_FOUND_ERROR = 'NOT_FOUND_ERROR',\n  /** @deprecated use CACHE_NOT_FOUND_ERROR instead */\n  NOT_FOUND_ERROR = 'NOT_FOUND_ERROR',\n  // Store with specified name doesn't exist\n  STORE_NOT_FOUND_ERROR = 'STORE_NOT_FOUND_ERROR',\n  // Item with specified key doesn't exist\n  STORE_ITEM_NOT_FOUND_ERROR = 'STORE_ITEM_NOT_FOUND_ERROR',\n  // An unexpected error occurred while trying to fulfill the request\n  INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR',\n  // Insufficient permissions to perform operation\n  PERMISSION_ERROR = 'PERMISSION_ERROR',\n  // Invalid authentication credentials to connect to cache service\n  AUTHENTICATION_ERROR = 'AUTHENTICATION_ERROR',\n  // Request was cancelled by the server\n  CANCELLED_ERROR = 'CANCELLED_ERROR',\n  // Error connecting to Momento servers\n  CONNECTION_ERROR = 'CONNECTION_ERROR',\n  // Request rate, bandwidth, or object size exceeded the limits for the account\n  LIMIT_EXCEEDED_ERROR = 'LIMIT_EXCEEDED_ERROR',\n  // Request was invalid\n  BAD_REQUEST_ERROR = 'BAD_REQUEST_ERROR',\n  // Client's configured timeout was exceeded\n  TIMEOUT_ERROR = 'TIMEOUT_ERROR',\n  // Server was unable to handle the request\n  SERVER_UNAVAILABLE = 'SERVER_UNAVAILABLE',\n  // A client resource (most likely memory) was exhausted\n  CLIENT_RESOURCE_EXHAUSTED = 'CLIENT_RESOURCE_EXHAUSTED',\n  // System is not in a state required for the operation's execution\n  FAILED_PRECONDITION_ERROR = 'FAILED_PRECONDITION_ERROR',\n  // Unknown error has occurred\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\n}\n\nexport class MomentoGrpcErrorDetails {\n  public readonly code: number;\n  public readonly details: string;\n  public readonly metadata?: object;\n  constructor(code: number, details: string, metadata?: object) {\n    this.code = code;\n    this.details = details;\n    this.metadata = metadata;\n  }\n}\n\nexport class MomentoErrorTransportDetails {\n  public readonly grpc: MomentoGrpcErrorDetails;\n  constructor(grpc: MomentoGrpcErrorDetails) {\n    this.grpc = grpc;\n  }\n}\n/**\n * Base class for all errors thrown by the sdk\n */\nexport abstract class SdkError extends Error {\n  protected readonly _errorCode: MomentoErrorCode;\n  protected readonly _messageWrapper: string;\n  private readonly _transportDetails: MomentoErrorTransportDetails;\n  constructor(\n    message: string,\n    code = 0,\n    metadata: object | undefined = undefined,\n    stack: string | undefined = undefined\n  ) {\n    super(message);\n    const grpcDetails = new MomentoGrpcErrorDetails(code, message, metadata);\n    this._transportDetails = new MomentoErrorTransportDetails(grpcDetails);\n    this.stack = stack ?? undefined;\n  }\n\n  public wrappedErrorMessage(): string {\n    return `${this._messageWrapper}: ${this.message}`;\n  }\n\n  public errorCode() {\n    return this._errorCode;\n  }\n\n  public transportDetails() {\n    return this._transportDetails;\n  }\n}\n\n/**\n * Error that occurs when trying to create a cache with the same name as an existing cache. To resolve this error,\n * either delete the existing cache and make a new one, or change the name of the cache you are trying to create to\n * one that doesn't already exist\n */\nexport class CacheAlreadyExistsError extends SdkError {\n  override _errorCode = MomentoErrorCode.CACHE_ALREADY_EXISTS_ERROR;\n  override _messageWrapper =\n    'A cache with the specified name already exists.  To resolve this error, either delete the existing cache and make a new one, or use a different name';\n}\n\n/**\n * Error that occurs when trying to create a store with the same name as an existing cache. To resolve this error,\n * either delete the existing store and make a new one, or change the name of the store you are trying to create to\n * one that doesn't already exist\n */\nexport class StoreAlreadyExistsError extends SdkError {\n  override _errorCode = MomentoErrorCode.STORE_ALREADY_EXISTS_ERROR;\n  override _messageWrapper =\n    'A store with the specified name already exists.  To resolve this error, either delete the existing store and make a new one, or use a different name';\n}\n\n/**\n * Error when authentication with Cache Service fails\n */\nexport class AuthenticationError extends SdkError {\n  override _errorCode = MomentoErrorCode.AUTHENTICATION_ERROR;\n  override _messageWrapper =\n    'Invalid authentication credentials to connect to cache service';\n}\n\n/**\n * Error raised in response to an invalid request\n */\nexport class BadRequestError extends SdkError {\n  override _errorCode = MomentoErrorCode.BAD_REQUEST_ERROR;\n  override _messageWrapper =\n    'The request was invalid; please contact us at support@momentohq.com';\n}\n\n/**\n * Error when an operation with Cache Service was cancelled\n */\nexport class CancelledError extends SdkError {\n  override _errorCode = MomentoErrorCode.CANCELLED_ERROR;\n  override _messageWrapper =\n    'The request was cancelled by the server; please contact us at support@momentohq.com';\n}\n\n/**\n * Error when there's a failure to connect to Momento servers.\n */\nexport class ConnectionError extends SdkError {\n  override _errorCode = MomentoErrorCode.CONNECTION_ERROR;\n}\n\n/**\n * Error raised when system in not in a state required for the operation's success\n */\nexport class FailedPreconditionError extends SdkError {\n  override _errorCode = MomentoErrorCode.FAILED_PRECONDITION_ERROR;\n  override _messageWrapper =\n    \"System is not in a state required for the operation's execution\";\n}\n\n/**\n * Cache Service encountered an unexpected exception while trying to fulfill the request\n */\nexport class InternalServerError extends SdkError {\n  override _errorCode = MomentoErrorCode.INTERNAL_SERVER_ERROR;\n  override _messageWrapper =\n    'An unexpected error occurred while trying to fulfill the request; please contact us at support@momentohq.com';\n}\n\n/**\n * Represents errors thrown when invalid parameters are passed to the Momento Cache\n */\nexport class InvalidArgumentError extends SdkError {\n  override _errorCode = MomentoErrorCode.INVALID_ARGUMENT_ERROR;\n  override _messageWrapper = 'Invalid argument passed to Momento client';\n}\n\n/**\n * Error when calls are throttled due to request limit rate\n */\nexport class LimitExceededError extends SdkError {\n  override _errorCode = MomentoErrorCode.LIMIT_EXCEEDED_ERROR;\n  override _messageWrapper =\n    'Request rate, bandwidth, or object size exceeded the limits for this account.  To resolve this error, reduce your usage as appropriate or contact us at support@momentohq.com to request a limit increase';\n}\n\n/**\n * Error that occurs when trying to get a cache that doesn't exist. To resolve, make sure that the cache you are trying\n * to get exists. If it doesn't create it first and then try again\n */\nexport class CacheNotFoundError extends SdkError {\n  override _errorCode = MomentoErrorCode.CACHE_NOT_FOUND_ERROR;\n  override _messageWrapper =\n    'A cache with the specified name does not exist.  To resolve this error, make sure you have created the cache before attempting to use it';\n}\n\n/**\n * Error that occurs when trying to get a store that doesn't exist. To resolve, make sure that the store you are trying\n * to get exists. If it doesn't create it first and then try again.\n */\nexport class StoreNotFoundError extends SdkError {\n  override _errorCode = MomentoErrorCode.STORE_NOT_FOUND_ERROR;\n  override _messageWrapper =\n    'A store with the specified name does not exist.  To resolve this error, make sure you have created the store before attempting to use it';\n}\n\n/**\n * Error that occurs when trying to get an item from store that doesn't exist. To resolve, make sure that the item you are trying\n * to get exists. If it doesn't create it first and then try again.\n */\nexport class StoreItemNotFoundError extends SdkError {\n  override _errorCode = MomentoErrorCode.STORE_ITEM_NOT_FOUND_ERROR;\n  override _messageWrapper = 'An item with the specified key does not exist';\n}\n\n/**\n * Insufficient permissions to perform an operation on Cache Service\n */\nexport class PermissionError extends SdkError {\n  override _errorCode = MomentoErrorCode.PERMISSION_ERROR;\n  override _messageWrapper =\n    'Insufficient permissions to perform an operation on a cache';\n}\n\n/**\n * Server was unable to handle the request.\n */\nexport class ServerUnavailableError extends SdkError {\n  override _errorCode = MomentoErrorCode.SERVER_UNAVAILABLE;\n  override _messageWrapper =\n    'The server was unable to handle the request; consider retrying.  If the error persists, please contact us at support@momentohq.com';\n}\n\n/**\n * Error when an operation did not complete in time\n */\nexport class TimeoutError extends SdkError {\n  override _errorCode = MomentoErrorCode.TIMEOUT_ERROR;\n  override _messageWrapper =\n    \"The client's configured timeout was exceeded; you may need to use a Configuration with more lenient timeouts\";\n}\n\n/**\n * Error raised when the underlying cause in unknown\n */\nexport class UnknownError extends SdkError {\n  override _errorCode = MomentoErrorCode.UNKNOWN_ERROR;\n  override _messageWrapper = 'Unknown error has occurred';\n}\n\n/**\n * Error raised when the service returns an unknown response\n */\nexport class UnknownServiceError extends SdkError {\n  override _errorCode = MomentoErrorCode.UNKNOWN_SERVICE_ERROR;\n  override _messageWrapper =\n    'Service returned an unknown response; please contact us at support@momentohq.com';\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/errors/index.ts"],"sourcesContent":["export * from './errors';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,qIAAA"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/auth/tokens/permission-scope.ts"],"sourcesContent":["export enum CacheRole {\n  ReadWrite = 'readwrite',\n  ReadOnly = 'readonly',\n  WriteOnly = 'writeonly',\n}\n\nexport const AllCaches = Symbol();\nexport const AllTopics = Symbol();\nexport const AllCacheItems = Symbol();\n\nexport interface CacheName {\n  name: string;\n}\nexport function isCacheName(\n  cache: CacheName | typeof AllCaches\n): cache is CacheName {\n  if (cache === AllCaches) {\n    return false;\n  }\n  return 'name' in cache;\n}\nexport type CacheSelector = typeof AllCaches | CacheName | string;\n\nexport interface CachePermission {\n  role: CacheRole;\n  /**\n   * Scope the token permissions to select caches\n   */\n  cache: CacheSelector;\n}\n\nexport function isCachePermission(p: Permission): boolean {\n  return 'role' in p && 'cache' in p && !('topic' in p);\n}\n\nexport function asCachePermission(p: Permission): CachePermission {\n  if (!isCachePermission(p)) {\n    throw new Error(\n      `permission is not a CachePermission object: ${JSON.stringify(p)}`\n    );\n  }\n  return p as CachePermission;\n}\n\nexport enum TopicRole {\n  PublishSubscribe = 'publishsubscribe',\n  SubscribeOnly = 'subscribeonly',\n  PublishOnly = 'publishonly',\n}\n\nexport interface TopicName {\n  name: string;\n}\nexport function isTopicName(\n  topic: TopicName | typeof AllTopics\n): topic is TopicName {\n  if (topic === AllTopics) {\n    return false;\n  }\n  return 'name' in topic;\n}\nexport type TopicSelector = typeof AllTopics | TopicName | string;\n\nexport interface TopicPermission {\n  role: TopicRole;\n  /**\n   * Scope the token permissions to select caches\n   */\n  cache: CacheSelector;\n  /**\n   * Scope the token permissions to select topics\n   */\n  topic: TopicSelector;\n}\n\nexport function isTopicPermission(p: Permission): boolean {\n  return 'role' in p && 'cache' in p && 'topic' in p;\n}\n\nexport function asTopicPermission(p: Permission): TopicPermission {\n  if (!isTopicPermission(p)) {\n    throw new Error(\n      `permission is not a TopicPermission object: ${JSON.stringify(p)}`\n    );\n  }\n  return p as TopicPermission;\n}\n\nexport type Permission = CachePermission | TopicPermission;\n\nexport interface Permissions {\n  permissions: Array<Permission>;\n}\n\nexport const AllDataReadWrite: Permissions = {\n  permissions: [\n    {role: CacheRole.ReadWrite, cache: AllCaches},\n    {role: TopicRole.PublishSubscribe, cache: AllCaches, topic: AllTopics},\n  ],\n};\n\nfunction isPermissionObject(p: Permission): boolean {\n  return isCachePermission(p) || isTopicPermission(p);\n}\n\nexport function isPermissionsObject(scope: PermissionScope): boolean {\n  if (!('permissions' in scope)) {\n    return false;\n  }\n  const permissions = scope.permissions;\n  return permissions.every(p => isPermissionObject(p));\n}\n\nexport function asPermissionsObject(scope: PermissionScope): Permissions {\n  if (!isPermissionsObject(scope)) {\n    throw new Error(\n      `Token scope is not a Permissions object: ${JSON.stringify(scope)}`\n    );\n  }\n  return scope as Permissions;\n}\n\nexport abstract class PredefinedScope {}\n\nexport type PermissionScope =\n  | typeof AllDataReadWrite\n  | Permissions\n  | PredefinedScope;\n\n/**\n * @deprecated please use PermissionScope instead\n */\nexport type TokenScope = PermissionScope;\n"],"names":[],"mappings":";;;;;AAAA,IAAY;AAAZ,CAAA,SAAY,SAAS;IACnB,SAAA,CAAA,YAAA,GAAA;IACA,SAAA,CAAA,WAAA,GAAA;IACA,SAAA,CAAA,YAAA,GAAA;AACF,CAAC,EAJW,YAAA,QAAA,SAAS,IAAA,CAAT,QAAA,SAAS,GAAA,CAAA,CAAA;AAMR,QAAA,SAAS,GAAG;AACZ,QAAA,SAAS,GAAG;AACZ,QAAA,aAAa,GAAG;AAK7B,SAAgB,YACd,KAAmC;IAEnC,IAAI,UAAU,QAAA,SAAS,EAAE;QACvB,OAAO;;IAET,OAAO,UAAU;AACnB;AAPA,QAAA,WAAA,GAAA;AAkBA,SAAgB,kBAAkB,CAAa;IAC7C,OAAO,UAAU,KAAK,WAAW,KAAK,CAAC,CAAC,WAAW,CAAC;AACtD;AAFA,QAAA,iBAAA,GAAA;AAIA,SAAgB,kBAAkB,CAAa;IAC7C,IAAI,CAAC,kBAAkB,IAAI;QACzB,MAAM,IAAI,MACR,CAAA,4CAAA,EAA+C,KAAK,SAAS,CAAC,GAAE,CAAE;;IAGtE,OAAO;AACT;AAPA,QAAA,iBAAA,GAAA;AASA,IAAY;AAAZ,CAAA,SAAY,SAAS;IACnB,SAAA,CAAA,mBAAA,GAAA;IACA,SAAA,CAAA,gBAAA,GAAA;IACA,SAAA,CAAA,cAAA,GAAA;AACF,CAAC,EAJW,YAAA,QAAA,SAAS,IAAA,CAAT,QAAA,SAAS,GAAA,CAAA,CAAA;AASrB,SAAgB,YACd,KAAmC;IAEnC,IAAI,UAAU,QAAA,SAAS,EAAE;QACvB,OAAO;;IAET,OAAO,UAAU;AACnB;AAPA,QAAA,WAAA,GAAA;AAsBA,SAAgB,kBAAkB,CAAa;IAC7C,OAAO,UAAU,KAAK,WAAW,KAAK,WAAW;AACnD;AAFA,QAAA,iBAAA,GAAA;AAIA,SAAgB,kBAAkB,CAAa;IAC7C,IAAI,CAAC,kBAAkB,IAAI;QACzB,MAAM,IAAI,MACR,CAAA,4CAAA,EAA+C,KAAK,SAAS,CAAC,GAAE,CAAE;;IAGtE,OAAO;AACT;AAPA,QAAA,iBAAA,GAAA;AAea,QAAA,gBAAgB,GAAgB;IAC3C,aAAa;QACX;YAAC,MAAM,UAAU,SAAS;YAAE,OAAO,QAAA,SAAS;QAAA;QAC5C;YAAC,MAAM,UAAU,gBAAgB;YAAE,OAAO,QAAA,SAAS;YAAE,OAAO,QAAA,SAAS;QAAA;KACtE;;AAGH,SAAS,mBAAmB,CAAa;IACvC,OAAO,kBAAkB,MAAM,kBAAkB;AACnD;AAEA,SAAgB,oBAAoB,KAAsB;IACxD,IAAI,CAAC,CAAC,iBAAiB,KAAK,GAAG;QAC7B,OAAO;;IAET,MAAM,cAAc,MAAM,WAAW;IACrC,OAAO,YAAY,KAAK,CAAC,CAAA,IAAK,mBAAmB;AACnD;AANA,QAAA,mBAAA,GAAA;AAQA,SAAgB,oBAAoB,KAAsB;IACxD,IAAI,CAAC,oBAAoB,QAAQ;QAC/B,MAAM,IAAI,MACR,CAAA,yCAAA,EAA4C,KAAK,SAAS,CAAC,OAAM,CAAE;;IAGvE,OAAO;AACT;AAPA,QAAA,mBAAA,GAAA;AASA,MAAsB;;AAAtB,QAAA,eAAA,GAAA"}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/auth/credential-provider.ts"],"sourcesContent":["import {\n  AllEndpoints,\n  decodeAuthToken,\n  fromEntries,\n  populateAllEndpointsFromBaseEndpoint,\n} from '../internal/utils';\n\nexport interface BaseEndpointOverride {\n  baseEndpoint: string;\n  endpointPrefix?: string;\n  secureConnection?: boolean;\n}\n\nexport type EndpointOverrides = BaseEndpointOverride | AllEndpoints;\n\nfunction isBaseEndpointOverride(\n  endpointOverrides: EndpointOverrides\n): endpointOverrides is BaseEndpointOverride {\n  return (endpointOverrides as BaseEndpointOverride).baseEndpoint !== undefined;\n}\n\nfunction isAllEndpoints(\n  endpointOverrides: EndpointOverrides\n): endpointOverrides is AllEndpoints {\n  const allEndpoints = endpointOverrides as AllEndpoints;\n  return (\n    allEndpoints.cacheEndpoint !== undefined &&\n    allEndpoints.controlEndpoint !== undefined &&\n    allEndpoints.tokenEndpoint !== undefined\n  );\n}\n\n/**\n * Encapsulates arguments for instantiating an EnvMomentoTokenProvider\n */\ninterface CredentialProviderProps {\n  endpointOverrides?: EndpointOverrides;\n}\n\n/**\n * Provides information that the CacheClient needs in order to establish a connection to and authenticate with\n * the Momento service.\n * @export\n * @interface CredentialProvider\n */\nexport abstract class CredentialProvider {\n  /**\n   * @returns {string} Auth token provided by user, required to authenticate with the service\n   */\n  abstract getAuthToken(): string;\n\n  /**\n   * @returns {string} The host which the Momento client will connect to for Momento control plane operations\n   */\n  abstract getControlEndpoint(): string;\n\n  /**\n   * @returns {boolean} true if connecting to the control plane endpoint connection with TLS; false if not using TLS\n   */\n  abstract isControlEndpointSecure(): boolean;\n\n  /**\n   * @returns {string} The host which the Momento client will connect to for Momento data plane operations\n   */\n  abstract getCacheEndpoint(): string;\n\n  /**\n   * @returns {boolean} true if connecting to the data plane endpoint connection with TLS; false if not using TLS\n   */\n  abstract isCacheEndpointSecure(): boolean;\n\n  /**\n   * @returns {string} The host which the Momento client will connect to for Momento storage operations\n   */\n  abstract getStorageEndpoint(): string;\n\n  /**\n   * @returns {boolean} true if connecting to the storage endpoint connection with TLS; false if not using TLS\n   */\n  abstract isStorageEndpointSecure(): boolean;\n\n  /**\n   * @returns {string} The host which the Momento client will connect to for Momento token operations\n   */\n  abstract getTokenEndpoint(): string;\n\n  /**\n   * @returns {boolean} true if connecting to the token endpoint connection with TLS; false if not using TLS\n   */\n  abstract isTokenEndpointSecure(): boolean;\n\n  /**\n   * Modifies the instance of the credential provider to override endpoints to\n   * allow insecure connections to the momento-local service for testing purposes\n   */\n  abstract withMomentoLocal(): CredentialProvider;\n\n  /**\n   * @returns {boolean} true if the endpoints were manually overridden at construction time; false otherwise\n   */\n  abstract areEndpointsOverridden(): boolean;\n\n  static fromEnvironmentVariable(\n    props: EnvMomentoTokenProviderProps | string\n  ): CredentialProvider {\n    return new EnvMomentoTokenProvider(props);\n  }\n\n  static fromEnvVar(\n    props: EnvMomentoTokenProviderProps | string\n  ): CredentialProvider {\n    return new EnvMomentoTokenProvider(props);\n  }\n\n  static fromString(\n    props: StringMomentoTokenProviderProps | string\n  ): CredentialProvider {\n    return new StringMomentoTokenProvider(props);\n  }\n}\n\nabstract class CredentialProviderBase implements CredentialProvider {\n  abstract getAuthToken(): string;\n\n  abstract getCacheEndpoint(): string;\n\n  abstract isCacheEndpointSecure(): boolean;\n\n  abstract getControlEndpoint(): string;\n\n  abstract isControlEndpointSecure(): boolean;\n\n  abstract getStorageEndpoint(): string;\n\n  abstract isStorageEndpointSecure(): boolean;\n\n  abstract getTokenEndpoint(): string;\n\n  abstract isTokenEndpointSecure(): boolean;\n\n  abstract areEndpointsOverridden(): boolean;\n\n  abstract withMomentoLocal(): CredentialProvider;\n\n  valueOf(): object {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const entries = Object.entries(this).filter(([k]) => k !== 'authToken');\n    const clone = fromEntries(entries);\n    return clone.valueOf();\n  }\n}\n\nexport interface StringMomentoApiKeyProviderProps\n  extends CredentialProviderProps {\n  /**\n   * apiKey the momento API key\n   */\n  apiKey: string;\n}\n\nexport interface StringMomentoAuthTokenProviderProps\n  extends CredentialProviderProps {\n  /**\n   * authToken the momento auth token\n   */\n  authToken: string;\n}\n\nexport type StringMomentoTokenProviderProps =\n  | StringMomentoApiKeyProviderProps\n  | StringMomentoAuthTokenProviderProps;\n\n/**\n * Reads and parses a momento auth token stored in a String\n * @export\n * @class StringMomentoTokenProvider\n */\nexport class StringMomentoTokenProvider extends CredentialProviderBase {\n  private readonly apiKey: string;\n  private readonly allEndpoints: AllEndpoints;\n  private readonly endpointsOverridden: boolean;\n\n  /**\n   * @param {StringMomentoTokenProviderProps} props configuration options for the token provider\n   */\n  constructor(props: StringMomentoTokenProviderProps | string) {\n    if (typeof props === 'string') {\n      props = {apiKey: props};\n    }\n    super();\n    let key: string;\n    if ('authToken' in props) {\n      key = props.authToken;\n    } else if ('apiKey' in props) {\n      key = props.apiKey;\n    } else {\n      throw new Error('Missing required property: authToken or apiKey');\n    }\n    const decodedToken = decodeAuthToken(key);\n    this.apiKey = decodedToken.authToken;\n    if (props.endpointOverrides === undefined) {\n      this.endpointsOverridden = false;\n      if (decodedToken.controlEndpoint === undefined) {\n        throw new Error(\n          'Malformed token; unable to determine control endpoint.  Depending on the type of token you are using, you may need to specify the controlEndpoint explicitly.'\n        );\n      }\n      if (decodedToken.cacheEndpoint === undefined) {\n        throw new Error(\n          'Malformed token; unable to determine cache endpoint.  Depending on the type of token you are using, you may need to specify the cacheEndpoint explicitly.'\n        );\n      }\n      if (decodedToken.tokenEndpoint === undefined) {\n        throw new Error(\n          'Malformed token; unable to determine token endpoint.  Depending on the type of token you are using, you may need to specify the tokenEndpoint explicitly.'\n        );\n      }\n      if (decodedToken.storageEndpoint === undefined) {\n        throw new Error(\n          'Malformed token; unable to determine storage endpoint.  Depending on the type of token you are using, you may need to specify the storageEndpoint explicitly.'\n        );\n      }\n      this.allEndpoints = {\n        controlEndpoint: {\n          endpoint: decodedToken.controlEndpoint,\n        },\n        cacheEndpoint: {\n          endpoint: decodedToken.cacheEndpoint,\n        },\n        tokenEndpoint: {\n          endpoint: decodedToken.tokenEndpoint,\n        },\n        storageEndpoint: {\n          endpoint: decodedToken.storageEndpoint,\n        },\n      };\n    } else if (isAllEndpoints(props.endpointOverrides)) {\n      this.endpointsOverridden = true;\n      this.allEndpoints = props.endpointOverrides;\n    } else if (isBaseEndpointOverride(props.endpointOverrides)) {\n      this.endpointsOverridden = true;\n      this.allEndpoints = populateAllEndpointsFromBaseEndpoint(\n        props.endpointOverrides\n      );\n    } else {\n      throw new Error(\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `Unsupported endpointOverrides: ${props.endpointOverrides}`\n      );\n    }\n  }\n\n  getAuthToken(): string {\n    return this.apiKey;\n  }\n\n  getCacheEndpoint(): string {\n    return this.allEndpoints.cacheEndpoint.endpoint;\n  }\n\n  isCacheEndpointSecure(): boolean {\n    if (this.allEndpoints.cacheEndpoint.secureConnection === undefined) {\n      return true;\n    }\n    return this.allEndpoints.cacheEndpoint.secureConnection;\n  }\n\n  getControlEndpoint(): string {\n    return this.allEndpoints.controlEndpoint.endpoint;\n  }\n\n  isControlEndpointSecure(): boolean {\n    if (this.allEndpoints.controlEndpoint.secureConnection === undefined) {\n      return true;\n    }\n    return this.allEndpoints.controlEndpoint.secureConnection;\n  }\n\n  getTokenEndpoint(): string {\n    return this.allEndpoints.tokenEndpoint.endpoint;\n  }\n\n  isTokenEndpointSecure(): boolean {\n    if (this.allEndpoints.tokenEndpoint.secureConnection === undefined) {\n      return true;\n    }\n    return this.allEndpoints.tokenEndpoint.secureConnection;\n  }\n\n  getStorageEndpoint(): string {\n    return this.allEndpoints.storageEndpoint.endpoint;\n  }\n\n  isStorageEndpointSecure(): boolean {\n    if (this.allEndpoints.storageEndpoint.secureConnection === undefined) {\n      return true;\n    }\n    return this.allEndpoints.storageEndpoint.secureConnection;\n  }\n\n  areEndpointsOverridden(): boolean {\n    return this.endpointsOverridden;\n  }\n\n  withMomentoLocal(): CredentialProvider {\n    const momentoLocalOverride = {\n      endpoint: '127.0.0.1:8080',\n      secureConnection: false,\n    };\n    return new StringMomentoTokenProvider({\n      authToken: this.apiKey,\n      endpointOverrides: {\n        cacheEndpoint: momentoLocalOverride,\n        controlEndpoint: momentoLocalOverride,\n        tokenEndpoint: momentoLocalOverride,\n        storageEndpoint: momentoLocalOverride,\n      },\n    });\n  }\n}\n\nexport interface EnvMomentoTokenProviderProps extends CredentialProviderProps {\n  /**\n   * the name of the environment variable from which the auth token will be read\n   */\n  environmentVariableName: string;\n}\n\n/**\n * Reads and parses a momento auth token stored as an environment variable.\n * @export\n * @class EnvMomentoTokenProvider\n */\nexport class EnvMomentoTokenProvider extends StringMomentoTokenProvider {\n  environmentVariableName: string;\n  /**\n   * @param {EnvMomentoTokenProviderProps} props configuration options for the token provider\n   */\n  constructor(props: EnvMomentoTokenProviderProps | string) {\n    if (typeof props === 'string') {\n      props = {environmentVariableName: props};\n    }\n    const authToken = process.env[props.environmentVariableName];\n    if (!authToken) {\n      throw new Error(\n        `Missing required environment variable ${props.environmentVariableName}`\n      );\n    }\n    super({\n      authToken: authToken,\n      endpointOverrides: props.endpointOverrides,\n    });\n    this.environmentVariableName = props.environmentVariableName;\n  }\n}\n\nexport function getDefaultCredentialProvider(): CredentialProvider {\n  return CredentialProvider.fromEnvVar('MOMENTO_API_KEY');\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 587, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/auth/index.ts"],"sourcesContent":["export * from './credential-provider';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,gJAAA"}},
    {"offset": {"line": 615, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/auth/tokens/disposable-token-scope.ts"],"sourcesContent":["import {\n  AllCacheItems,\n  CachePermission,\n  Permission,\n  Permissions,\n  PredefinedScope,\n} from './permission-scope';\n\nexport interface CacheItemKey {\n  key: string;\n}\n\nexport interface CacheItemKeyPrefix {\n  keyPrefix: string;\n}\n\nexport function isCacheItemKey(\n  cacheItem: CacheItemSelector\n): cacheItem is CacheItemKey {\n  if (cacheItem === AllCacheItems) {\n    return false;\n  }\n  if (typeof cacheItem === 'string') {\n    return true;\n  }\n  return 'key' in cacheItem;\n}\n\nexport function isCacheItemKeyPrefix(\n  cacheItem: CacheItemSelector\n): cacheItem is CacheItemKeyPrefix {\n  if (cacheItem === AllCacheItems) {\n    return false;\n  }\n  if (typeof cacheItem === 'string') {\n    return false;\n  }\n  return 'keyPrefix' in cacheItem;\n}\n\nexport type CacheItemSelector =\n  | typeof AllCacheItems\n  | CacheItemKey\n  | CacheItemKeyPrefix\n  | string;\n\nexport interface DisposableTokenCachePermission extends CachePermission {\n  /**\n   * Scope the token permissions to select cache items\n   */\n  item: CacheItemSelector;\n}\n\nexport function isDisposableTokenCachePermission(p: Permission): boolean {\n  return 'role' in p && 'cache' in p && 'item' in p && !('topic' in p);\n}\n\nexport function asDisposableTokenCachePermission(\n  p: Permission\n): DisposableTokenCachePermission {\n  if (!isDisposableTokenCachePermission(p)) {\n    throw new Error(\n      `permission is not a DisposableTokenCachePermission object: ${JSON.stringify(\n        p\n      )}`\n    );\n  }\n  return p as DisposableTokenCachePermission;\n}\n\nexport interface DisposableTokenCachePermissions {\n  permissions: Array<DisposableTokenCachePermission>;\n}\n\nexport type DisposableTokenScope =\n  | Permissions\n  | PredefinedScope\n  | DisposableTokenCachePermissions;\n\nexport interface DisposableTokenProps {\n  tokenId?: string;\n}\n\nfunction isDisposableTokenPermissionObject(p: Permission): boolean {\n  return isDisposableTokenCachePermission(p);\n}\n\nexport function isDisposableTokenPermissionsObject(\n  scope: DisposableTokenScope\n): boolean {\n  if (!('permissions' in scope)) {\n    return false;\n  }\n  const permissions = scope.permissions;\n  return permissions.every(p => isDisposableTokenPermissionObject(p));\n}\n\nexport function asDisposableTokenPermissionsObject(\n  scope: DisposableTokenScope\n): DisposableTokenCachePermissions {\n  if (!isDisposableTokenPermissionsObject(scope)) {\n    throw new Error(\n      `Token scope is not a DisposableTokenCachePermissions object: ${JSON.stringify(\n        scope\n      )}`\n    );\n  }\n  return scope as DisposableTokenCachePermissions;\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAA;AAgBA,SAAgB,eACd,SAA4B;IAE5B,IAAI,cAAc,mBAAA,aAAa,EAAE;QAC/B,OAAO;;IAET,IAAI,OAAO,cAAc,UAAU;QACjC,OAAO;;IAET,OAAO,SAAS;AAClB;AAVA,QAAA,cAAA,GAAA;AAYA,SAAgB,qBACd,SAA4B;IAE5B,IAAI,cAAc,mBAAA,aAAa,EAAE;QAC/B,OAAO;;IAET,IAAI,OAAO,cAAc,UAAU;QACjC,OAAO;;IAET,OAAO,eAAe;AACxB;AAVA,QAAA,oBAAA,GAAA;AAyBA,SAAgB,iCAAiC,CAAa;IAC5D,OAAO,UAAU,KAAK,WAAW,KAAK,UAAU,KAAK,CAAC,CAAC,WAAW,CAAC;AACrE;AAFA,QAAA,gCAAA,GAAA;AAIA,SAAgB,iCACd,CAAa;IAEb,IAAI,CAAC,iCAAiC,IAAI;QACxC,MAAM,IAAI,MACR,CAAA,2DAAA,EAA8D,KAAK,SAAS,CAC1E,GACD,CAAE;;IAGP,OAAO;AACT;AAXA,QAAA,gCAAA,GAAA;AA0BA,SAAS,kCAAkC,CAAa;IACtD,OAAO,iCAAiC;AAC1C;AAEA,SAAgB,mCACd,KAA2B;IAE3B,IAAI,CAAC,CAAC,iBAAiB,KAAK,GAAG;QAC7B,OAAO;;IAET,MAAM,cAAc,MAAM,WAAW;IACrC,OAAO,YAAY,KAAK,CAAC,CAAA,IAAK,kCAAkC;AAClE;AARA,QAAA,kCAAA,GAAA;AAUA,SAAgB,mCACd,KAA2B;IAE3B,IAAI,CAAC,mCAAmC,QAAQ;QAC9C,MAAM,IAAI,MACR,CAAA,6DAAA,EAAgE,KAAK,SAAS,CAC5E,OACD,CAAE;;IAGP,OAAO;AACT;AAXA,QAAA,kCAAA,GAAA"}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 678, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/auth/tokens/permission-scopes.ts"],"sourcesContent":["import {\n  CacheRole,\n  CacheSelector,\n  PermissionScope,\n  TopicRole,\n  TopicSelector,\n} from './permission-scope';\n\nexport function cacheReadWrite(cacheSelector: CacheSelector): PermissionScope {\n  return {\n    permissions: [{role: CacheRole.ReadWrite, cache: cacheSelector}],\n  };\n}\n\nexport function cacheReadOnly(cacheSelector: CacheSelector): PermissionScope {\n  return {\n    permissions: [{role: CacheRole.ReadOnly, cache: cacheSelector}],\n  };\n}\n\nexport function cacheWriteOnly(cacheSelector: CacheSelector): PermissionScope {\n  return {\n    permissions: [{role: CacheRole.WriteOnly, cache: cacheSelector}],\n  };\n}\n\nexport function topicSubscribeOnly(\n  cacheSelector: CacheSelector,\n  topicSelector: TopicSelector\n): PermissionScope {\n  return {\n    permissions: [\n      {\n        role: TopicRole.SubscribeOnly,\n        cache: cacheSelector,\n        topic: topicSelector,\n      },\n    ],\n  };\n}\n\nexport function topicPublishSubscribe(\n  cacheSelector: CacheSelector,\n  topicSelector: TopicSelector\n): PermissionScope {\n  return {\n    permissions: [\n      {\n        role: TopicRole.PublishSubscribe,\n        cache: cacheSelector,\n        topic: topicSelector,\n      },\n    ],\n  };\n}\n\nexport function topicPublishOnly(\n  cacheSelector: CacheSelector,\n  topicSelector: TopicSelector\n): PermissionScope {\n  return {\n    permissions: [\n      {\n        role: TopicRole.PublishOnly,\n        cache: cacheSelector,\n        topic: topicSelector,\n      },\n    ],\n  };\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAA;AAQA,SAAgB,eAAe,aAA4B;IACzD,OAAO;QACL,aAAa;YAAC;gBAAC,MAAM,mBAAA,SAAS,CAAC,SAAS;gBAAE,OAAO;YAAa;SAAE;;AAEpE;AAJA,QAAA,cAAA,GAAA;AAMA,SAAgB,cAAc,aAA4B;IACxD,OAAO;QACL,aAAa;YAAC;gBAAC,MAAM,mBAAA,SAAS,CAAC,QAAQ;gBAAE,OAAO;YAAa;SAAE;;AAEnE;AAJA,QAAA,aAAA,GAAA;AAMA,SAAgB,eAAe,aAA4B;IACzD,OAAO;QACL,aAAa;YAAC;gBAAC,MAAM,mBAAA,SAAS,CAAC,SAAS;gBAAE,OAAO;YAAa;SAAE;;AAEpE;AAJA,QAAA,cAAA,GAAA;AAMA,SAAgB,mBACd,aAA4B,EAC5B,aAA4B;IAE5B,OAAO;QACL,aAAa;YACX;gBACE,MAAM,mBAAA,SAAS,CAAC,aAAa;gBAC7B,OAAO;gBACP,OAAO;;SAEV;;AAEL;AAbA,QAAA,kBAAA,GAAA;AAeA,SAAgB,sBACd,aAA4B,EAC5B,aAA4B;IAE5B,OAAO;QACL,aAAa;YACX;gBACE,MAAM,mBAAA,SAAS,CAAC,gBAAgB;gBAChC,OAAO;gBACP,OAAO;;SAEV;;AAEL;AAbA,QAAA,qBAAA,GAAA;AAeA,SAAgB,iBACd,aAA4B,EAC5B,aAA4B;IAE5B,OAAO;QACL,aAAa;YACX;gBACE,MAAM,mBAAA,SAAS,CAAC,WAAW;gBAC3B,OAAO;gBACP,OAAO;;SAEV;;AAEL;AAbA,QAAA,gBAAA,GAAA"}},
    {"offset": {"line": 753, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/auth/tokens/disposable-token-scopes.ts"],"sourcesContent":["import {CacheRole, CacheSelector} from './permission-scope';\nimport {DisposableTokenScope} from './disposable-token-scope';\n\nexport * from './permission-scopes';\n\nexport function cacheKeyReadWrite(\n  cacheSelector: CacheSelector,\n  key: string\n): DisposableTokenScope {\n  return {\n    permissions: [{role: CacheRole.ReadWrite, cache: cacheSelector, item: key}],\n  };\n}\n\nexport function cacheKeyPrefixReadWrite(\n  cacheSelector: CacheSelector,\n  keyPrefix: string\n): DisposableTokenScope {\n  return {\n    permissions: [\n      {\n        role: CacheRole.ReadWrite,\n        cache: cacheSelector,\n        item: {keyPrefix: keyPrefix},\n      },\n    ],\n  };\n}\n\nexport function cacheKeyReadOnly(\n  cacheSelector: CacheSelector,\n  key: string\n): DisposableTokenScope {\n  return {\n    permissions: [{role: CacheRole.ReadOnly, cache: cacheSelector, item: key}],\n  };\n}\n\nexport function cacheKeyPrefixReadOnly(\n  cacheSelector: CacheSelector,\n  keyPrefix: string\n): DisposableTokenScope {\n  return {\n    permissions: [\n      {\n        role: CacheRole.ReadOnly,\n        cache: cacheSelector,\n        item: {keyPrefix: keyPrefix},\n      },\n    ],\n  };\n}\n\nexport function cacheKeyWriteOnly(\n  cacheSelector: CacheSelector,\n  key: string\n): DisposableTokenScope {\n  return {\n    permissions: [{role: CacheRole.WriteOnly, cache: cacheSelector, item: key}],\n  };\n}\n\nexport function cacheKeyPrefixWriteOnly(\n  cacheSelector: CacheSelector,\n  keyPrefix: string\n): DisposableTokenScope {\n  return {\n    permissions: [\n      {\n        role: CacheRole.WriteOnly,\n        cache: cacheSelector,\n        item: {keyPrefix: keyPrefix},\n      },\n    ],\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA;AAGA,qJAAA;AAEA,SAAgB,kBACd,aAA4B,EAC5B,GAAW;IAEX,OAAO;QACL,aAAa;YAAC;gBAAC,MAAM,mBAAA,SAAS,CAAC,SAAS;gBAAE,OAAO;gBAAe,MAAM;YAAG;SAAE;;AAE/E;AAPA,QAAA,iBAAA,GAAA;AASA,SAAgB,wBACd,aAA4B,EAC5B,SAAiB;IAEjB,OAAO;QACL,aAAa;YACX;gBACE,MAAM,mBAAA,SAAS,CAAC,SAAS;gBACzB,OAAO;gBACP,MAAM;oBAAC,WAAW;gBAAS;;SAE9B;;AAEL;AAbA,QAAA,uBAAA,GAAA;AAeA,SAAgB,iBACd,aAA4B,EAC5B,GAAW;IAEX,OAAO;QACL,aAAa;YAAC;gBAAC,MAAM,mBAAA,SAAS,CAAC,QAAQ;gBAAE,OAAO;gBAAe,MAAM;YAAG;SAAE;;AAE9E;AAPA,QAAA,gBAAA,GAAA;AASA,SAAgB,uBACd,aAA4B,EAC5B,SAAiB;IAEjB,OAAO;QACL,aAAa;YACX;gBACE,MAAM,mBAAA,SAAS,CAAC,QAAQ;gBACxB,OAAO;gBACP,MAAM;oBAAC,WAAW;gBAAS;;SAE9B;;AAEL;AAbA,QAAA,sBAAA,GAAA;AAeA,SAAgB,kBACd,aAA4B,EAC5B,GAAW;IAEX,OAAO;QACL,aAAa;YAAC;gBAAC,MAAM,mBAAA,SAAS,CAAC,SAAS;gBAAE,OAAO;gBAAe,MAAM;YAAG;SAAE;;AAE/E;AAPA,QAAA,iBAAA,GAAA;AASA,SAAgB,wBACd,aAA4B,EAC5B,SAAiB;IAEjB,OAAO;QACL,aAAa;YACX;gBACE,MAAM,mBAAA,SAAS,CAAC,SAAS;gBACzB,OAAO;gBACP,MAAM;oBAAC,WAAW;gBAAS;;SAE9B;;AAEL;AAbA,QAAA,uBAAA,GAAA"}},
    {"offset": {"line": 861, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 865, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/utils/collection-ttl.ts"],"sourcesContent":["import {validateTtlSeconds} from '../internal/utils';\n\n/** Represents the desired behavior for managing the TTL on collection\n *  objects (dictionaries, lists, sets) in your cache.\n *\n *  For cache operations that modify a collection, there are a few things\n *  to consider.  The first time the collection is created, we need to\n *  set a TTL on it.  For subsequent operations that modify the collection\n *  you may choose to update the TTL in order to prolong the life of the\n *  cached collection object, or you may choose to leave the TTL unmodified\n *  in order to ensure that the collection expires at the original TTL.\n *\n *  The default behavior is to refresh the TTL (to prolong the life of the\n *  collection) each time it is written.  This behavior can be modified\n *  by calling CollectionTtl.withNoRefreshTtlOnUpdates().\n *\n *  A null TTL means to use the client's TTL.\n */\nexport class CollectionTtl {\n  private readonly _ttlSeconds: number | null;\n  private readonly _refreshTtl: boolean;\n\n  /**\n   * If refreshTtl is true, the client must update the collection's TTL\n   * when it modifies a collection.\n   * A null ttl means to use the client's TTL.\n   * @param {number | null} [ttlSeconds=null]\n   * @param {boolean} [refreshTtl=true]\n   */\n  constructor(ttlSeconds: number | null = null, refreshTtl = true) {\n    if (ttlSeconds !== null) {\n      validateTtlSeconds(ttlSeconds);\n    }\n    this._refreshTtl = refreshTtl;\n    this._ttlSeconds = ttlSeconds;\n  }\n\n  /** Time-to-live, in seconds.\n   * @returns {number | null}\n   */\n  public ttlSeconds(): number | null {\n    return this._ttlSeconds;\n  }\n\n  /** Time-to-live, in milliseconds.\n   * @returns {number | null}\n   */\n  public ttlMilliseconds(): number | null {\n    return this._ttlSeconds === null ? null : this._ttlSeconds * 1000;\n  }\n\n  /** Whether or not to refresh a collection's TTL when it's modified.\n   * @returns {boolean}\n   */\n  public refreshTtl(): boolean {\n    return this._refreshTtl;\n  }\n\n  /** The default way to handle TTLs for collections. The client's default TTL\n   *  will be used, and the TTL for the collection will be refreshed any\n   *  time the collection is modified.\n   * @constructor\n   * @returns {CollectionTtl}\n   */\n  public static fromCacheTtl(): CollectionTtl {\n    return new CollectionTtl(null, true);\n  }\n\n  /** Constructs a CollectionTtl with the specified TTL. The TTL\n   *  for the collection will be refreshed any time the collection is\n   *  modified.\n   * @constructor\n   * @param {number} [ttlSeconds]\n   * @returns {CollectionTtl}\n   */\n  public static of(ttlSeconds: number): CollectionTtl {\n    return new CollectionTtl(ttlSeconds, true);\n  }\n\n  /** Constructs a CollectionTtl with the specified TTL.\n   *  Will only refresh if the TTL is provided.\n   * @constructor\n   * @param {number | null} [ttlSeconds=null]\n   * @returns {CollectionTtl}\n   */\n  public static refreshTtlIfProvided(\n    ttlSeconds: number | null = null\n  ): CollectionTtl {\n    return new CollectionTtl(ttlSeconds, ttlSeconds !== null);\n  }\n\n  /** Copies the CollectionTtl, but it will refresh the TTL when\n   *  the collection is modified.\n   * @returns {CollectionTtl}\n   */\n  public withRefreshTtlOnUpdates(): CollectionTtl {\n    return new CollectionTtl(this._ttlSeconds, true);\n  }\n\n  /** Copies the CollectionTTL, but the TTL will not be refreshed\n   *  when the collection is modified. Use this if you want to ensure\n   *  that your collection expires at the originally specified time, even\n   *  if you make modifications to the value of the collection.\n   * @returns {CollectionTtl}\n   */\n  public withNoRefreshTtlOnUpdates(): CollectionTtl {\n    return new CollectionTtl(this._ttlSeconds, false);\n  }\n\n  /** A string represenation of the CollectionTtl for debugging purposes.\n   * @return {CollectionTtl}\n   */\n  public toString(): string {\n    return `ttl: ${this._ttlSeconds || 'null'}, refreshTtl: ${\n      this._refreshTtl ? 'true' : 'false'\n    }`;\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAA;AAEA;;;;;;;;;;;;;;;IAgBA,MAAa;IAIX;;;;;;QAOA,YAAY,aAA4B,IAAI,EAAE,aAAa,IAAI,CAAA;QAC7D,IAAI,eAAe,MAAM;YACvB,CAAA,GAAA,QAAA,kBAAkB,EAAC;;QAErB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,WAAW,GAAG;IACrB;IAEA;;QAGO,aAAU;QACf,OAAO,IAAI,CAAC,WAAW;IACzB;IAEA;;QAGO,kBAAe;QACpB,OAAO,IAAI,CAAC,WAAW,KAAK,OAAO,OAAO,IAAI,CAAC,WAAW,GAAG;IAC/D;IAEA;;QAGO,aAAU;QACf,OAAO,IAAI,CAAC,WAAW;IACzB;IAEA;;;;;QAMO,OAAO,eAAY;QACxB,OAAO,IAAI,cAAc,MAAM;IACjC;IAEA;;;;;;QAOO,OAAO,GAAG,UAAkB,EAAA;QACjC,OAAO,IAAI,cAAc,YAAY;IACvC;IAEA;;;;;QAMO,OAAO,qBACZ,aAA4B,IAAI,EAAA;QAEhC,OAAO,IAAI,cAAc,YAAY,eAAe;IACtD;IAEA;;;QAIO,0BAAuB;QAC5B,OAAO,IAAI,cAAc,IAAI,CAAC,WAAW,EAAE;IAC7C;IAEA;;;;;QAMO,4BAAyB;QAC9B,OAAO,IAAI,cAAc,IAAI,CAAC,WAAW,EAAE;IAC7C;IAEA;;QAGO,WAAQ;QACb,OAAO,CAAA,KAAA,EAAQ,IAAI,CAAC,WAAW,IAAI,OAAM,cAAA,EACvC,IAAI,CAAC,WAAW,GAAG,SAAS,QAC9B,CAAE;IACJ;;AAlGF,QAAA,aAAA,GAAA"}},
    {"offset": {"line": 961, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 965, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/utils/cache-call-options.ts"],"sourcesContent":["import {CollectionTtl} from './collection-ttl';\n\nexport interface ScalarCallOptions {\n  /**\n   * The time to live in seconds of the object being modified.\n   */\n  ttl?: number;\n}\n\nexport interface CompressableCallOptions {\n  /**\n   * Whether to compress the data.\n   */\n  compress?: boolean;\n}\n\nexport interface DecompressableCallOptions {\n  /**\n   * Whether to decompress the data. Overrides the client-wide automatic decompression setting.\n   */\n  decompress?: boolean;\n}\n\nexport interface SetCallOptions\n  extends ScalarCallOptions,\n    CompressableCallOptions {}\nexport type SetBatchCallOptions = SetCallOptions;\n\nexport type GetCallOptions = DecompressableCallOptions;\nexport type GetBatchCallOptions = GetCallOptions;\n\nexport interface SetIfAbsentCallOptions\n  extends ScalarCallOptions,\n    CompressableCallOptions {}\n\nexport interface CollectionCallOptions {\n  /**\n   * The length of the TTL and whether it should be refreshed when the collection is modified.\n   */\n  ttl?: CollectionTtl;\n}\n\n/**\n * Returns the TTL from the options or refresh with the cache TTL.\n *\n * @param options The options to get the TTL from.\n * @returns The TTL from the options or a default value.\n */\nexport function ttlOrFromCacheTtl(\n  options?: CollectionCallOptions\n): CollectionTtl {\n  return options?.ttl ?? CollectionTtl.fromCacheTtl();\n}\n\nexport interface FrontTruncatableCallOptions extends CollectionCallOptions {\n  /**\n   * If the collection exceeds this length, remove excess from the start of the list. Must be positive.\n   */\n  truncateFrontToSize?: number;\n}\n\nexport interface BackTruncatableCallOptions extends CollectionCallOptions {\n  /**\n   * If the collection exceeds this length, remove excess from the end of the list. Must be positive.\n   */\n  truncateBackToSize?: number;\n}\n\nexport enum SortedSetOrder {\n  Ascending = 'ASC',\n  Descending = 'DESC',\n}\n\nexport interface SortedSetFetchByRankCallOptions {\n  /**\n   * The rank of the first element to return, inclusive.\n   * If negative, the rank is relative to the end of the list.\n   * If the rank is not specified, the first element is used.\n   */\n  startRank?: number;\n  /**\n   * The rank of the last element to return, exclusive.\n   * If negative, the rank is relative to the end of the list.\n   * If the rank is not specified, the range extends to the end of the list.\n   */\n  endRank?: number;\n  /**\n   * The order in which to return the elements.\n   * If the order is not specified, the elements are returned in ascending order.\n   * If descending order is used, the start and end ranks are interpreted as if\n   * the list were reversed.\n   */\n  order?: SortedSetOrder;\n}\n\nexport interface SortedSetFetchByScoreCallOptions {\n  /**\n   * The minimum score of the elements to return, inclusive.\n   * If the minimum score is not specified, the range extends to the lowest score.\n   */\n  minScore?: number;\n  /**\n   * The maximum score of the elements to return, inclusive.\n   * If the maximum score is not specified, the range extends to the highest score.\n   */\n  maxScore?: number;\n  /**\n   * The order in which to return the elements.\n   * If the order is not specified, the elements are returned in ascending order.\n   */\n  order?: SortedSetOrder;\n  /**\n   * The index offset of the first element to return, relative to the first element in the result set.\n   * If specified must be non-negative (>= 0).\n   * Defaults to zero, ie. the start at first element in the result set.\n   */\n  offset?: number;\n  /**\n   * The maximum number of elements to return.\n   * If specified must be strictly positive (> 0).\n   * Defaults to all elements in the result set.\n   */\n  count?: number;\n}\n\nexport interface SortedSetGetRankCallOptions {\n  /**\n   * The order in which sorted set will be sorted to determine the rank.\n   * If the order is not specified, then ascending order is used.\n   */\n  order?: SortedSetOrder;\n}\n\nexport interface SortedSetLengthByScoreCallOptions {\n  /**\n   * The minimum score of the elements to include when counting number of items in the set, inclusive.\n   * If the minimum score is not specified, the range extends to the lowest score.\n   */\n  minScore?: number;\n  /**\n   * The maximum score of the elements to include when counting number of items in the set, inclusive.\n   * If the maximum score is not specified, the range extends to the highest score.\n   */\n  maxScore?: number;\n}\n\nexport interface ListRetainCallOptions extends CollectionCallOptions {\n  /**\n   * Starting inclusive index of operation.\n   */\n  startIndex?: number;\n\n  /**\n   * Ending exclusive index of operation.\n   */\n  endIndex?: number;\n}\nexport interface ListFetchCallOptions {\n  /**\n   * Starting inclusive index of operation.\n   */\n  startIndex?: number;\n\n  /**\n   * Ending exclusive index of operation.\n   */\n  endIndex?: number;\n}\n\nexport enum LeaderboardOrder {\n  Ascending = 'ASC', // 0 is the lowest-scoring rank\n  Descending = 'DESC', // 0 is the highest-scoring rank.\n}\n\nexport interface LeaderboardGetRankCallOptions {\n  /**\n   * The order in which to return the elements.\n   * If the order is not specified, the elements are returned in ascending order.\n   * If descending order is used, the start and end ranks are interpreted as if\n   * the leaderboard were reversed.\n   */\n  order?: LeaderboardOrder;\n}\n\nexport interface LeaderboardFetchByRankCallOptions {\n  /**\n   * The order in which to return the elements.\n   * If the order is not specified, the elements are returned in ascending order.\n   * If descending order is used, the start and end ranks are interpreted as if\n   * the leaderboard were reversed.\n   */\n  order?: LeaderboardOrder;\n}\n\nexport interface LeaderboardFetchByScoreCallOptions {\n  /**\n   * The minimum score of the elements to return, inclusive.\n   * If the minimum score is not specified, the range extends to the lowest score.\n   */\n  minScore?: number;\n  /**\n   * The maximum score of the elements to return, exclusive.\n   * If the maximum score is not specified, the range extends to the highest score.\n   */\n  maxScore?: number;\n  /**\n   * The order in which to return the elements.\n   * If the order is not specified, the elements are returned in ascending order.\n   */\n  order?: LeaderboardOrder;\n  /**\n   * The index offset of the first element to return, relative to the first element in the result set.\n   * If specified must be non-negative (>= 0).\n   * Defaults to zero, ie. the start at first element in the result set.\n   */\n  offset?: number;\n  /**\n   * The maximum number of elements to return.\n   * If specified must be strictly positive (> 0).\n   * Defaults to 8192, the maximum number of elements that can be returned at a time.\n   */\n  count?: number;\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAA;AA0CA;;;;;IAMA,SAAgB,kBACd,OAA+B;;IAE/B,OAAO,CAAA,KAAA,YAAO,QAAP,YAAO,KAAA,IAAA,KAAA,IAAP,QAAS,GAAG,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,iBAAA,aAAa,CAAC,YAAY;AACnD;AAJA,QAAA,iBAAA,GAAA;AAoBA,IAAY;AAAZ,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,YAAA,GAAA;IACA,cAAA,CAAA,aAAA,GAAA;AACF,CAAC,EAHW,iBAAA,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA;AAqG1B,IAAY;AAAZ,CAAA,SAAY,gBAAgB;IAC1B,gBAAA,CAAA,YAAA,GAAA;IACA,gBAAA,CAAA,aAAA,GAAA;AACF,CAAC,EAHW,mBAAA,QAAA,gBAAgB,IAAA,CAAhB,QAAA,gBAAgB,GAAA,CAAA,CAAA"}},
    {"offset": {"line": 991, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 995, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/utils/topic-call-options.ts"],"sourcesContent":["import {\n  TopicItem,\n  TopicSubscribe,\n  TopicDiscontinuity,\n  TopicHeartbeat,\n} from '..';\n\n/**\n * Options for the subscribe call.\n */\nexport interface SubscribeCallOptions {\n  /**\n   * The callback to invoke when data is received from the topic subscription.\n   *\n   * @param item The data received from the topic subscription.\n   */\n  onItem?: (item: TopicItem) => void;\n\n  /**\n   * The callback to invoke when an error is received from the topic subscription.\n   *\n   * @param error The error received from the topic subscription.\n   * @param subscription The subscription that received the error.\n   */\n  onError?: (\n    error: TopicSubscribe.Error,\n    subscription: TopicSubscribe.Subscription\n  ) => void;\n\n  /**\n   * The callback to invoke when a discontinuity is received from the topic subscription.\n   *\n   * @param discontinuity The discontinuity received from the topic subscription.\n   */\n  onDiscontinuity?: (discontinuity: TopicDiscontinuity) => void;\n\n  /**\n   * The callback to invoke when a heartbeat is received from the topic subscription.\n   *\n   * @param heartbeat The heartbeat received from the topic subscription.\n   */\n  onHeartbeat?: (heartbeat: TopicHeartbeat) => void;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 999, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1003, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/utils/expiration.ts"],"sourcesContent":["abstract class Expiration {\n  private readonly _doesExpire: boolean;\n\n  protected constructor(doesExpire: boolean) {\n    this._doesExpire = doesExpire;\n  }\n\n  /**\n   * Whether the token expires or not.\n   * @returns {boolean}\n   */\n  public doesExpire(): boolean {\n    return this._doesExpire;\n  }\n}\n\nexport class ExpiresIn extends Expiration {\n  private readonly _validForSeconds: number;\n\n  /**\n   * If doesExpire is false, the refresh token will not have a expiration time, instead validForSeconds will be 'Infinity'.\n   * @param {number} [validForSeconds]\n   */\n  private constructor(validForSeconds: number) {\n    super(validForSeconds !== Infinity);\n    this._validForSeconds =\n      validForSeconds === null ? Infinity : validForSeconds;\n  }\n\n  /**\n   * Time token is valid for in seconds.\n   * @returns {number} Infinity, if token doesn't expire.\n   */\n  public seconds(): number {\n    return this._validForSeconds;\n  }\n\n  /**\n   * Constructs a ExpiresIn which never expires.\n   * @returns {ExpiresIn}\n   */\n  public static never(): ExpiresIn {\n    return new ExpiresIn(Infinity);\n  }\n\n  /**\n   * Constructs a ExpiresIn with a specified validFor period in seconds.\n   * If seconds are undefined, or null, then token never expires.\n   * @param validForSeconds\n   * @returns {ExpiresIn}\n   */\n  public static seconds(validForSeconds: number): ExpiresIn {\n    return new ExpiresIn(validForSeconds);\n  }\n\n  /**\n   * Constructs a ExpiresIn with a specified validFor period in minutes.\n   * @param validForMinutes\n   * @returns {ExpiresIn}\n   */\n  public static minutes(validForMinutes: number): ExpiresIn {\n    return new ExpiresIn(validForMinutes * 60);\n  }\n\n  /**\n   * Constructs a ExpiresIn with a specified validFor period in hours.\n   * @param validForHours\n   * @returns {ExpiresIn}\n   */\n  public static hours(validForHours: number): ExpiresIn {\n    return new ExpiresIn(validForHours * 3600);\n  }\n\n  /**\n   * Constructs an ExpiresIn with a specified validFor period in days.\n   * @param validForDays\n   * @returns {ExpiresIn}\n   */\n  public static days(validForDays: number): ExpiresIn {\n    return new ExpiresIn(validForDays * 86400);\n  }\n\n  /**\n   * Constructs an ExpiresIn with a specified expiresBy period in epoch format.\n   * @param expiresBy\n   * @returns {ExpiresIn}\n   */\n  public static epoch(expiresBy: number): ExpiresIn {\n    const currentEpoch = new Date().getTime() / 1000;\n    const secondsUntilEpoch = Math.round(expiresBy - currentEpoch);\n    return new ExpiresIn(secondsUntilEpoch);\n  }\n}\n\nexport class ExpiresAt extends Expiration {\n  private readonly validUntil: number;\n\n  private constructor(epochTimestamp: number | undefined) {\n    super(epochTimestamp !== undefined && epochTimestamp !== 0);\n    if (this.doesExpire()) {\n      this.validUntil = epochTimestamp as number;\n    } else {\n      this.validUntil = Infinity;\n    }\n  }\n\n  /**\n   * Returns epoch timestamp of when api token expires.\n   * @returns {number}\n   */\n  public epoch(): number {\n    return this.validUntil;\n  }\n\n  /**\n   * Constructs an ExpiresAt with the specified epoch timestamp,\n   * if timestamp is undefined, then epoch timestamp will instead be Infinity.\n   * @param epoch\n   * @returns {ExpiresAt}\n   */\n  public static fromEpoch(epoch: number | undefined): ExpiresAt {\n    return new ExpiresAt(epoch);\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAe;IAGb,YAAsB,UAAmB,CAAA;QACvC,IAAI,CAAC,WAAW,GAAG;IACrB;IAEA;;;QAIO,aAAU;QACf,OAAO,IAAI,CAAC,WAAW;IACzB;;AAGF,MAAa,kBAAkB;IAG7B;;;QAIA,YAAoB,eAAuB,CAAA;QACzC,KAAK,CAAC,oBAAoB;QAC1B,IAAI,CAAC,gBAAgB,GACnB,oBAAoB,OAAO,WAAW;IAC1C;IAEA;;;QAIO,UAAO;QACZ,OAAO,IAAI,CAAC,gBAAgB;IAC9B;IAEA;;;QAIO,OAAO,QAAK;QACjB,OAAO,IAAI,UAAU;IACvB;IAEA;;;;;QAMO,OAAO,QAAQ,eAAuB,EAAA;QAC3C,OAAO,IAAI,UAAU;IACvB;IAEA;;;;QAKO,OAAO,QAAQ,eAAuB,EAAA;QAC3C,OAAO,IAAI,UAAU,kBAAkB;IACzC;IAEA;;;;QAKO,OAAO,MAAM,aAAqB,EAAA;QACvC,OAAO,IAAI,UAAU,gBAAgB;IACvC;IAEA;;;;QAKO,OAAO,KAAK,YAAoB,EAAA;QACrC,OAAO,IAAI,UAAU,eAAe;IACtC;IAEA;;;;QAKO,OAAO,MAAM,SAAiB,EAAA;QACnC,MAAM,eAAe,IAAI,OAAO,OAAO,KAAK;QAC5C,MAAM,oBAAoB,KAAK,KAAK,CAAC,YAAY;QACjD,OAAO,IAAI,UAAU;IACvB;;AA3EF,QAAA,SAAA,GAAA;AA8EA,MAAa,kBAAkB;IAG7B,YAAoB,cAAkC,CAAA;QACpD,KAAK,CAAC,mBAAmB,aAAa,mBAAmB;QACzD,IAAI,IAAI,CAAC,UAAU,IAAI;YACrB,IAAI,CAAC,UAAU,GAAG;eACb;YACL,IAAI,CAAC,UAAU,GAAG;;IAEtB;IAEA;;;QAIO,QAAK;QACV,OAAO,IAAI,CAAC,UAAU;IACxB;IAEA;;;;;QAMO,OAAO,UAAU,KAAyB,EAAA;QAC/C,OAAO,IAAI,UAAU;IACvB;;AA5BF,QAAA,SAAA,GAAA"}},
    {"offset": {"line": 1104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1108, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/utils/itemType.ts"],"sourcesContent":["export enum ItemType {\n  SCALAR = 0,\n  DICTIONARY = 1,\n  LIST = 2,\n  SET = 3,\n  SORTED_SET = 4,\n}\n"],"names":[],"mappings":";;;;;AAAA,IAAY;AAAZ,CAAA,SAAY,QAAQ;IAClB,QAAA,CAAA,QAAA,CAAA,SAAA,GAAA,EAAA,GAAA;IACA,QAAA,CAAA,QAAA,CAAA,aAAA,GAAA,EAAA,GAAA;IACA,QAAA,CAAA,QAAA,CAAA,OAAA,GAAA,EAAA,GAAA;IACA,QAAA,CAAA,QAAA,CAAA,MAAA,GAAA,EAAA,GAAA;IACA,QAAA,CAAA,QAAA,CAAA,aAAA,GAAA,EAAA,GAAA;AACF,CAAC,EANW,WAAA,QAAA,QAAQ,IAAA,CAAR,QAAA,QAAQ,GAAA,CAAA,CAAA"}},
    {"offset": {"line": 1121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1125, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/utils/webhook-destination.ts"],"sourcesContent":["export enum WebhookDestinationType {\n  PostUrl = 'post_url',\n}\n\ninterface IPostUrlWebhookDestination {\n  url: () => string;\n  type: WebhookDestinationType.PostUrl;\n  getType: () => WebhookDestinationType.PostUrl;\n}\n\nexport class PostUrlWebhookDestination implements IPostUrlWebhookDestination {\n  readonly _url: string;\n  constructor(url: string) {\n    this._url = url;\n  }\n\n  public url(): string {\n    return this._url;\n  }\n\n  type: WebhookDestinationType.PostUrl;\n\n  getType(): WebhookDestinationType.PostUrl {\n    return WebhookDestinationType.PostUrl;\n  }\n}\n\nexport type WebhookDestination = InstanceType<typeof PostUrlWebhookDestination>;\n"],"names":[],"mappings":";;;;;AAAA,IAAY;AAAZ,CAAA,SAAY,sBAAsB;IAChC,sBAAA,CAAA,UAAA,GAAA;AACF,CAAC,EAFW,yBAAA,QAAA,sBAAsB,IAAA,CAAtB,QAAA,sBAAsB,GAAA,CAAA,CAAA;AAUlC,MAAa;IAEX,YAAY,GAAW,CAAA;QACrB,IAAI,CAAC,IAAI,GAAG;IACd;IAEO,MAAG;QACR,OAAO,IAAI,CAAC,IAAI;IAClB;IAIA,UAAO;QACL,OAAO,uBAAuB,OAAO;IACvC;;AAdF,QAAA,yBAAA,GAAA"}},
    {"offset": {"line": 1146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1150, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/utils/set-batch-item.ts"],"sourcesContent":["export type SetBatchItem = {\n  key: string | Uint8Array;\n  value: string | Uint8Array;\n  ttl?: number;\n};\n"],"names":[],"mappings":""}},
    {"offset": {"line": 1154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1158, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/utils/index.ts"],"sourcesContent":["export * from './cache-call-options';\nexport * from './collection-ttl';\nexport * from './topic-call-options';\nexport * from './expiration';\nexport * from './itemType';\nexport * from './webhook-destination';\nexport * from './set-batch-item';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,gJAAA;AACA,4IAAA;AACA,gJAAA;AACA,wIAAA;AACA,sIAAA;AACA,iJAAA;AACA,4IAAA"}},
    {"offset": {"line": 1188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1192, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/config/logging/noop-momento-logger.ts"],"sourcesContent":["import {MomentoLogger, MomentoLoggerFactory} from './momento-logger';\n\nexport class NoopMomentoLogger implements MomentoLogger {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  debug(msg: string, ...args: unknown[]): void {\n    // no-op\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  error(msg: string, ...args: unknown[]): void {\n    // no-op\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  info(msg: string, ...args: unknown[]): void {\n    // no-op\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  trace(msg: string, ...args: unknown[]): void {\n    // no-op\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  warn(msg: string, ...args: unknown[]): void {\n    // no-op\n  }\n}\n\nexport class NoopMomentoLoggerFactory implements MomentoLoggerFactory {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\n  getLogger(loggerName: string | any): MomentoLogger {\n    return new NoopMomentoLogger();\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA,MAAa;IACX,6DAA6D;IAC7D,MAAM,GAAW,EAAE,GAAG,IAAe,EAAA;IACnC,QAAQ;IACV;IAEA,6DAA6D;IAC7D,MAAM,GAAW,EAAE,GAAG,IAAe,EAAA;IACnC,QAAQ;IACV;IAEA,6DAA6D;IAC7D,KAAK,GAAW,EAAE,GAAG,IAAe,EAAA;IAClC,QAAQ;IACV;IAEA,6DAA6D;IAC7D,MAAM,GAAW,EAAE,GAAG,IAAe,EAAA;IACnC,QAAQ;IACV;IAEA,6DAA6D;IAC7D,KAAK,GAAW,EAAE,GAAG,IAAe,EAAA;IAClC,QAAQ;IACV;;AAxBF,QAAA,iBAAA,GAAA;AA2BA,MAAa;IACX,iGAAiG;IACjG,UAAU,UAAwB,EAAA;QAChC,OAAO,IAAI;IACb;;AAJF,QAAA,wBAAA,GAAA"}},
    {"offset": {"line": 1227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1231, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/config/read-concern.ts"],"sourcesContent":["export enum ReadConcern {\n  // BALANCED is the default read concern for the cache client.\n  BALANCED = 'balanced',\n  // CONSISTENT read concern guarantees read after write consistency.\n  CONSISTENT = 'consistent',\n}\n"],"names":[],"mappings":";;;;;AAAA,IAAY;AAAZ,CAAA,SAAY,WAAW;IACrB,6DAA6D;IAC7D,WAAA,CAAA,WAAA,GAAA;IACA,mEAAmE;IACnE,WAAA,CAAA,aAAA,GAAA;AACF,CAAC,EALW,cAAA,QAAA,WAAW,IAAA,CAAX,QAAA,WAAW,GAAA,CAAA,CAAA"}},
    {"offset": {"line": 1243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1247, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/compression/compression-level.ts"],"sourcesContent":["/**\n * When compressing a value, you may choose between these different modes to control the trade-off between compressionLevel speed and compressionLevel ratio.\n */\nexport enum CompressionLevel {\n  /**\n   * Provides a good balance between compression speed and compression ratio.\n   * @type {CompressionLevel.Balanced}\n   */\n  Balanced = 'Balanced',\n  /**\n   * Provides the fastest compression speed, prioritizing reduction in CPU usage over compression ratio.\n   * @type {CompressionLevel.Fastest}\n   */\n  Fastest = 'Fastest',\n  /**\n   * Provides the best compression ratio, prioritizing reduction in storage space over compression speed.\n   * @type {CompressionLevel.SmallestSize}\n   */\n  SmallestSize = 'SmallestSize',\n}\n"],"names":[],"mappings":";;;;;AAAA;;IAGA,IAAY;AAAZ,CAAA,SAAY,gBAAgB;IAC1B;;;QAIA,gBAAA,CAAA,WAAA,GAAA;IACA;;;QAIA,gBAAA,CAAA,UAAA,GAAA;IACA;;;QAIA,gBAAA,CAAA,eAAA,GAAA;AACF,CAAC,EAhBW,mBAAA,QAAA,gBAAgB,IAAA,CAAhB,QAAA,gBAAgB,GAAA,CAAA,CAAA"}},
    {"offset": {"line": 1269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1273, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/index.ts"],"sourcesContent":["// Cache Client Response Types\nimport * as CacheGet from './messages/responses/cache-get';\nimport * as CacheListConcatenateBack from './messages/responses/cache-list-concatenate-back';\nimport * as CacheListConcatenateFront from './messages/responses/cache-list-concatenate-front';\nimport * as CacheListFetch from './messages/responses/cache-list-fetch';\nimport * as CacheListLength from './messages/responses/cache-list-length';\nimport * as CacheListPopBack from './messages/responses/cache-list-pop-back';\nimport * as CacheListPopFront from './messages/responses/cache-list-pop-front';\nimport * as CacheListPushBack from './messages/responses/cache-list-push-back';\nimport * as CacheListPushFront from './messages/responses/cache-list-push-front';\nimport * as CacheListRemoveValue from './messages/responses/cache-list-remove-value';\nimport * as CacheListRetain from './messages/responses/cache-list-retain';\nimport * as CacheSet from './messages/responses/cache-set';\nimport * as CacheDelete from './messages/responses/cache-delete';\nimport * as CacheFlush from './messages/responses/cache-flush';\nimport * as CreateCache from './messages/responses/create-cache';\nimport * as DeleteCache from './messages/responses/delete-cache';\nimport * as ListCaches from './messages/responses/list-caches';\nimport * as CacheSetFetch from './messages/responses/cache-set-fetch';\nimport * as CacheDictionaryFetch from './messages/responses/cache-dictionary-fetch';\nimport * as CacheDictionarySetField from './messages/responses/cache-dictionary-set-field';\nimport * as CacheDictionarySetFields from './messages/responses/cache-dictionary-set-fields';\nimport * as CacheDictionaryGetField from './messages/responses/cache-dictionary-get-field';\nimport * as CacheDictionaryGetFields from './messages/responses/cache-dictionary-get-fields';\nimport * as CacheDictionaryRemoveField from './messages/responses/cache-dictionary-remove-field';\nimport * as CacheDictionaryRemoveFields from './messages/responses/cache-dictionary-remove-fields';\nimport * as CacheDictionaryIncrement from './messages/responses/cache-dictionary-increment';\nimport * as CacheDictionaryLength from './messages/responses/cache-dictionary-length';\nimport * as CacheSetAddElements from './messages/responses/cache-set-add-elements';\nimport * as CacheSetAddElement from './messages/responses/cache-set-add-element';\nimport * as CacheSetContainsElement from './messages/responses/cache-set-contains-element';\nimport * as CacheSetContainsElements from './messages/responses/cache-set-contains-elements';\nimport * as CacheSetRemoveElements from './messages/responses/cache-set-remove-elements';\nimport * as CacheSetRemoveElement from './messages/responses/cache-set-remove-element';\nimport * as CacheSetSample from './messages/responses/cache-set-sample';\nimport * as CacheSetPop from './messages/responses/cache-set-pop';\nimport * as CacheSetLength from './messages/responses/cache-set-length';\nimport * as CacheIncrement from './messages/responses/cache-increment';\nimport * as CacheSetIfNotExists from './messages/responses/cache-set-if-not-exists';\nimport * as CacheSetIfAbsent from './messages/responses/cache-set-if-absent';\nimport * as CacheSetIfPresent from './messages/responses/cache-set-if-present';\nimport * as CacheSetIfEqual from './messages/responses/cache-set-if-equal';\nimport * as CacheSetIfNotEqual from './messages/responses/cache-set-if-not-equal';\nimport * as CacheSetIfPresentAndNotEqual from './messages/responses/cache-set-if-present-and-not-equal';\nimport * as CacheSetIfAbsentOrEqual from './messages/responses/cache-set-if-absent-or-equal';\nimport * as CacheSortedSetPutElement from './messages/responses/cache-sorted-set-put-element';\nimport * as CacheSortedSetPutElements from './messages/responses/cache-sorted-set-put-elements';\nimport * as CacheSortedSetFetch from './messages/responses/cache-sorted-set-fetch';\nimport * as CacheSortedSetGetRank from './messages/responses/cache-sorted-set-get-rank';\nimport * as CacheSortedSetGetScore from './messages/responses/cache-sorted-set-get-score';\nimport * as CacheSortedSetGetScores from './messages/responses/cache-sorted-set-get-scores';\nimport * as CacheSortedSetIncrementScore from './messages/responses/cache-sorted-set-increment-score';\nimport * as CacheSortedSetRemoveElement from './messages/responses/cache-sorted-set-remove-element';\nimport * as CacheSortedSetRemoveElements from './messages/responses/cache-sorted-set-remove-elements';\nimport * as CacheSortedSetLength from './messages/responses/cache-sorted-set-length';\nimport * as CacheSortedSetLengthByScore from './messages/responses/cache-sorted-set-length-by-score';\nimport * as CacheItemGetType from './messages/responses/cache-item-get-type';\nimport * as CacheItemGetTtl from './messages/responses/cache-item-get-ttl';\nimport * as CacheKeyExists from './messages/responses/cache-key-exists';\nimport * as CacheKeysExist from './messages/responses/cache-keys-exist';\nimport * as CacheUpdateTtl from './messages/responses/cache-ttl-update';\nimport * as CacheIncreaseTtl from './messages/responses/cache-ttl-increase';\nimport * as CacheDecreaseTtl from './messages/responses/cache-ttl-decrease';\nimport * as CacheSetBatch from './messages/responses/cache-batch-set';\nimport * as CacheGetBatch from './messages/responses/cache-batch-get';\n\n// TopicClient Response Types\nimport * as TopicPublish from './messages/responses/topic-publish';\nimport * as TopicSubscribe from './messages/responses/topic-subscribe';\nimport {TopicItem} from './messages/responses/topic-item';\nimport {TopicDiscontinuity} from './messages/responses/topic-discontinuity';\nimport {TopicHeartbeat} from './messages/responses/topic-heartbeat';\n\n// AuthClient Response Types\nimport * as GenerateApiKey from './messages/responses/generate-api-key';\nimport * as RefreshApiKey from './messages/responses/refresh-api-key';\n\nimport * as GenerateDisposableToken from './messages/responses/generate-disposable-token';\n\n// Leaderboard Response Types\nexport * as leaderboard from './messages/responses/leaderboard';\nexport * from './messages/responses/leaderboard';\n\nexport * as webhook from './messages/responses/webhook';\nexport * from './messages/responses/webhook';\nexport {Webhook, WebhookId} from './messages/webhook';\n\n// StoreClient Response Types\nexport * from './messages/responses/storage';\nexport {StoreInfo} from './messages/store-info';\n\nimport {CacheInfo} from './messages/cache-info';\nimport {\n  SubscribeCallOptions,\n  CollectionTtl,\n  SortedSetOrder,\n  LeaderboardOrder,\n  ExpiresIn,\n  ExpiresAt,\n  ItemType,\n  WebhookDestination,\n  PostUrlWebhookDestination,\n  WebhookDestinationType,\n  SetBatchItem,\n} from './utils';\n\nimport {\n  CredentialProvider,\n  StringMomentoTokenProvider,\n  EnvMomentoTokenProvider,\n  getDefaultCredentialProvider,\n} from './auth';\n\nimport {\n  MomentoErrorCode,\n  SdkError,\n  CacheAlreadyExistsError,\n  StoreAlreadyExistsError,\n  AuthenticationError,\n  CancelledError,\n  ConnectionError,\n  FailedPreconditionError,\n  LimitExceededError,\n  InternalServerError,\n  InvalidArgumentError,\n  UnknownServiceError,\n  ServerUnavailableError,\n  TimeoutError,\n  BadRequestError,\n  PermissionError,\n  CacheNotFoundError,\n  StoreItemNotFoundError,\n  StoreNotFoundError,\n  UnknownError,\n} from './errors';\n\nexport {\n  MomentoLogger,\n  MomentoLoggerFactory,\n} from './config/logging/momento-logger';\n\nexport * from './messages/responses/enums';\n\nexport {\n  NoopMomentoLogger,\n  NoopMomentoLoggerFactory,\n} from './config/logging/noop-momento-logger';\n\nexport {\n  ICacheClient,\n  SetOptions,\n  SetIfNotExistsOptions,\n  SetIfAbsentOptions,\n  SetIfPresentOptions,\n  SetIfEqualOptions,\n  SetIfNotEqualOptions,\n  SetIfPresentAndNotEqualOptions,\n  SetIfAbsentOrEqualOptions,\n  IncrementOptions,\n} from './clients/ICacheClient';\n\nexport {IStorageClient} from './clients/IStorageClient';\n\nexport {IMomentoCache} from './clients/IMomentoCache';\n\nexport {ILeaderboardClient} from './clients/ILeaderboardClient';\nexport {ILeaderboard} from './clients/ILeaderboard';\n\nexport {\n  CacheRole,\n  CachePermission,\n  TopicRole,\n  TopicPermission,\n  Permission,\n  Permissions,\n  AllDataReadWrite,\n  PermissionScope,\n  /**\n   * @deprecated - please use PermissionScope\n   */\n  TokenScope,\n  CacheName,\n  isCacheName,\n  TopicName,\n  isTopicName,\n  CacheSelector,\n  TopicSelector,\n  AllCaches,\n  AllTopics,\n  AllCacheItems,\n} from './auth/tokens/permission-scope';\n\nexport {\n  DisposableTokenScope,\n  CacheItemSelector,\n  CacheItemKey,\n  CacheItemKeyPrefix,\n  isCacheItemKey,\n  isCacheItemKeyPrefix,\n} from './auth/tokens/disposable-token-scope';\n\nexport * as PermissionScopes from './auth/tokens/permission-scopes';\n/**\n * @deprecated please use PermissionScopes instead\n */\nexport * as TokenScopes from './auth/tokens/permission-scopes';\nexport * as DisposableTokenScopes from './auth/tokens/disposable-token-scopes';\n\nexport {ReadConcern} from './config/read-concern';\nexport {CompressionLevel} from './compression/compression-level';\n\nexport {\n  ExpiresIn,\n  ExpiresAt,\n  CollectionTtl,\n  ItemType,\n  WebhookDestination,\n  PostUrlWebhookDestination,\n  WebhookDestinationType,\n  SortedSetOrder,\n  LeaderboardOrder,\n  CredentialProvider,\n  StringMomentoTokenProvider,\n  EnvMomentoTokenProvider,\n  getDefaultCredentialProvider,\n  SetBatchItem,\n\n  // CacheClient Response Types\n  CacheGet,\n  CacheListConcatenateBack,\n  CacheListConcatenateFront,\n  CacheListFetch,\n  CacheListLength,\n  CacheListPopBack,\n  CacheListPopFront,\n  CacheListPushBack,\n  CacheListPushFront,\n  CacheListRemoveValue,\n  CacheListRetain,\n  CacheSet,\n  CacheSetIfNotExists,\n  CacheSetIfPresent,\n  CacheSetIfAbsent,\n  CacheSetIfEqual,\n  CacheSetIfNotEqual,\n  CacheSetIfPresentAndNotEqual,\n  CacheSetIfAbsentOrEqual,\n  CacheDelete,\n  CacheFlush,\n  CreateCache,\n  DeleteCache,\n  ListCaches,\n  CacheIncrement,\n  CacheSetFetch,\n  CacheDictionaryFetch,\n  CacheDictionarySetField,\n  CacheDictionarySetFields,\n  CacheDictionaryGetField,\n  CacheDictionaryGetFields,\n  CacheDictionaryRemoveField,\n  CacheDictionaryRemoveFields,\n  CacheDictionaryIncrement,\n  CacheDictionaryLength,\n  CacheSetAddElements,\n  CacheSetAddElement,\n  CacheSetContainsElement,\n  CacheSetContainsElements,\n  CacheSetRemoveElements,\n  CacheSetRemoveElement,\n  CacheSetSample,\n  CacheSetPop,\n  CacheSetLength,\n  CacheSortedSetPutElement,\n  CacheSortedSetPutElements,\n  CacheSortedSetFetch,\n  CacheSortedSetGetRank,\n  CacheSortedSetGetScore,\n  CacheSortedSetGetScores,\n  CacheSortedSetIncrementScore,\n  CacheSortedSetRemoveElement,\n  CacheSortedSetRemoveElements,\n  CacheSortedSetLength,\n  CacheSortedSetLengthByScore,\n  CacheItemGetType,\n  CacheItemGetTtl,\n  CacheKeyExists,\n  CacheKeysExist,\n  CacheUpdateTtl,\n  CacheIncreaseTtl,\n  CacheDecreaseTtl,\n  CacheInfo,\n  CacheSetBatch,\n  CacheGetBatch,\n  // TopicClient Response Types\n  TopicPublish,\n  TopicSubscribe,\n  TopicItem,\n  TopicDiscontinuity,\n  TopicHeartbeat,\n  SubscribeCallOptions,\n  // AuthClient Response Types\n  GenerateApiKey,\n  /**\n   * @deprecated - please use GenerateApiKey\n   */\n  GenerateApiKey as GenerateAuthToken,\n  RefreshApiKey,\n  /**\n   * @deprecated - please use RefreshApiKey\n   */\n  RefreshApiKey as RefreshAuthToken,\n  GenerateDisposableToken,\n  // Errors\n  MomentoErrorCode,\n  SdkError,\n  CacheAlreadyExistsError,\n  StoreAlreadyExistsError,\n  AuthenticationError,\n  CancelledError,\n  ConnectionError,\n  FailedPreconditionError,\n  LimitExceededError,\n  InternalServerError,\n  InvalidArgumentError,\n  UnknownServiceError,\n  ServerUnavailableError,\n  TimeoutError,\n  BadRequestError,\n  PermissionError,\n  CacheNotFoundError,\n  StoreItemNotFoundError,\n  StoreNotFoundError,\n  UnknownError,\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1774, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1778, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/clients/ICacheClient.ts"],"sourcesContent":["import {\n  CacheDelete,\n  CacheGet,\n  CacheIncrement,\n  CacheSet,\n  CacheSetIfNotExists,\n  CacheSetFetch,\n  CacheSetAddElements,\n  CacheSetAddElement,\n  CacheSetContainsElement,\n  CacheSetContainsElements,\n  CacheSetRemoveElements,\n  CacheSetRemoveElement,\n  CacheListFetch,\n  CacheListLength,\n  CacheListPushFront,\n  CacheListPushBack,\n  CacheListConcatenateBack,\n  CacheListConcatenateFront,\n  CacheListPopBack,\n  CacheListPopFront,\n  CacheListRemoveValue,\n  CacheListRetain,\n  CacheDictionarySetField,\n  CacheDictionarySetFields,\n  CacheDictionaryGetField,\n  CacheDictionaryFetch,\n  CacheDictionaryIncrement,\n  CacheDictionaryRemoveField,\n  CacheDictionaryRemoveFields,\n  CacheDictionaryLength,\n  CacheSortedSetFetch,\n  CacheSortedSetPutElement,\n  CacheSortedSetPutElements,\n  CacheSortedSetGetRank,\n  CacheSortedSetGetScore,\n  CacheSortedSetGetScores,\n  CacheSortedSetIncrementScore,\n  CacheSortedSetRemoveElement,\n  CacheSortedSetLength,\n  CacheSortedSetLengthByScore,\n  CacheItemGetType,\n  CacheItemGetTtl,\n  CacheKeyExists,\n  CacheKeysExist,\n  CacheUpdateTtl,\n  CacheIncreaseTtl,\n  CacheDecreaseTtl,\n  CacheDictionaryGetFields,\n  CacheGetBatch,\n  CacheSetBatch,\n  CacheSetIfAbsent,\n  CacheSetIfPresent,\n  CacheSetIfEqual,\n  CacheSetIfNotEqual,\n  CacheSetIfPresentAndNotEqual,\n  CacheSetIfAbsentOrEqual,\n  CacheSetSample,\n  CacheSortedSetRemoveElements,\n  CacheSetPop,\n  CacheSetLength,\n} from '../index';\nimport {\n  ScalarCallOptions,\n  ListFetchCallOptions,\n  ListRetainCallOptions,\n  BackTruncatableCallOptions,\n  FrontTruncatableCallOptions,\n  CollectionCallOptions,\n  SortedSetFetchByRankCallOptions,\n  SortedSetFetchByScoreCallOptions,\n  SortedSetLengthByScoreCallOptions,\n  SortedSetGetRankCallOptions,\n  SetCallOptions,\n  GetCallOptions,\n  SetIfAbsentCallOptions,\n  SetBatchItem,\n} from '../utils';\nimport {IControlClient, IPingClient} from '../internal/clients';\nimport {IMomentoCache} from './IMomentoCache';\n\n// Type aliases to differentiate the different methods' optional arguments.\nexport type SetOptions = SetCallOptions;\nexport type GetOptions = GetCallOptions;\nexport type SetIfNotExistsOptions = ScalarCallOptions;\nexport type SetIfAbsentOptions = SetIfAbsentCallOptions;\nexport type SetIfPresentOptions = ScalarCallOptions;\nexport type SetIfEqualOptions = ScalarCallOptions;\nexport type SetIfNotEqualOptions = ScalarCallOptions;\nexport type SetIfPresentAndNotEqualOptions = ScalarCallOptions;\nexport type SetIfAbsentOrEqualOptions = ScalarCallOptions;\nexport type SetBatchOptions = SetCallOptions;\nexport type GetBatchOptions = GetCallOptions;\nexport type ListConcatenateBackOptions = FrontTruncatableCallOptions;\nexport type ListConcatenateFrontOptions = BackTruncatableCallOptions;\nexport type ListPushBackOptions = FrontTruncatableCallOptions;\nexport type ListPushFrontOptions = BackTruncatableCallOptions;\nexport type SetAddElementOptions = CollectionCallOptions;\nexport type SetAddElementsOptions = CollectionCallOptions;\nexport type DictionarySetFieldOptions = CollectionCallOptions;\nexport type DictionarySetFieldsOptions = CollectionCallOptions;\nexport type DictionaryIncrementOptions = CollectionCallOptions;\nexport type IncrementOptions = ScalarCallOptions;\nexport type SortedSetPutElementOptions = CollectionCallOptions;\nexport type SortedSetPutElementsOptions = CollectionCallOptions;\nexport type SortedSetFetchByRankOptions = SortedSetFetchByRankCallOptions;\nexport type SortedSetFetchByScoreOptions = SortedSetFetchByScoreCallOptions;\nexport type SortedSetGetRankOptions = SortedSetGetRankCallOptions;\nexport type SortedSetIncrementOptions = CollectionCallOptions;\nexport type SortedSetLengthByScoreOptions = SortedSetLengthByScoreCallOptions;\n\nexport interface ICacheClient extends IControlClient, IPingClient {\n  cache(cacheName: string): IMomentoCache;\n\n  get(\n    cacheName: string,\n    key: string | Uint8Array,\n    options?: GetOptions\n  ): Promise<CacheGet.Response>;\n  set(\n    cacheName: string,\n    key: string | Uint8Array,\n    value: string | Uint8Array,\n    options?: SetOptions\n  ): Promise<CacheSet.Response>;\n  delete(\n    cacheName: string,\n    key: string | Uint8Array\n  ): Promise<CacheDelete.Response>;\n  increment(\n    cacheName: string,\n    field: string | Uint8Array,\n    amount: number,\n    options?: IncrementOptions\n  ): Promise<CacheIncrement.Response>;\n  /**\n   * @deprecated use setIfAbsent instead.\n   */\n  setIfNotExists(\n    cacheName: string,\n    key: string | Uint8Array,\n    field: string | Uint8Array,\n    options?: SetIfNotExistsOptions\n  ): Promise<CacheSetIfNotExists.Response>;\n  setIfAbsent(\n    cacheName: string,\n    key: string | Uint8Array,\n    field: string | Uint8Array,\n    options?: SetIfAbsentOptions\n  ): Promise<CacheSetIfAbsent.Response>;\n  setIfPresent(\n    cacheName: string,\n    key: string | Uint8Array,\n    field: string | Uint8Array,\n    options?: SetIfPresentOptions\n  ): Promise<CacheSetIfPresent.Response>;\n  setIfEqual(\n    cacheName: string,\n    key: string | Uint8Array,\n    field: string | Uint8Array,\n    equal: string | Uint8Array,\n    options?: SetIfEqualOptions\n  ): Promise<CacheSetIfEqual.Response>;\n  setIfNotEqual(\n    cacheName: string,\n    key: string | Uint8Array,\n    field: string | Uint8Array,\n    notEqual: string | Uint8Array,\n    options?: SetIfNotEqualOptions\n  ): Promise<CacheSetIfNotEqual.Response>;\n  setIfPresentAndNotEqual(\n    cacheName: string,\n    key: string | Uint8Array,\n    field: string | Uint8Array,\n    notEqual: string | Uint8Array,\n    options?: SetIfPresentAndNotEqualOptions\n  ): Promise<CacheSetIfPresentAndNotEqual.Response>;\n  setIfAbsentOrEqual(\n    cacheName: string,\n    key: string | Uint8Array,\n    field: string | Uint8Array,\n    equal: string | Uint8Array,\n    options?: SetIfAbsentOrEqualOptions\n  ): Promise<CacheSetIfAbsentOrEqual.Response>;\n  getBatch(\n    cacheName: string,\n    keys: Array<string | Uint8Array>\n  ): Promise<CacheGetBatch.Response>;\n  setBatch(\n    cacheName: string,\n    items:\n      | Record<string, string | Uint8Array>\n      | Map<string | Uint8Array, string | Uint8Array>\n      | Array<SetBatchItem>,\n    options?: SetBatchOptions\n  ): Promise<CacheSetBatch.Response>;\n  setFetch(cacheName: string, setName: string): Promise<CacheSetFetch.Response>;\n  setAddElement(\n    cacheName: string,\n    setName: string,\n    element: string | Uint8Array,\n    options?: SetAddElementsOptions\n  ): Promise<CacheSetAddElement.Response>;\n  setAddElements(\n    cacheName: string,\n    setName: string,\n    elements: string[] | Uint8Array[],\n    options?: SetAddElementsOptions\n  ): Promise<CacheSetAddElements.Response>;\n  setContainsElement(\n    cacheName: string,\n    setName: string,\n    element: string | Uint8Array\n  ): Promise<CacheSetContainsElement.Response>;\n  setContainsElements(\n    cacheName: string,\n    setName: string,\n    elements: string[] | Uint8Array[]\n  ): Promise<CacheSetContainsElements.Response>;\n  setRemoveElement(\n    cacheName: string,\n    setName: string,\n    element: string | Uint8Array\n  ): Promise<CacheSetRemoveElement.Response>;\n  setRemoveElements(\n    cacheName: string,\n    setName: string,\n    elements: string[] | Uint8Array[]\n  ): Promise<CacheSetRemoveElements.Response>;\n  setSample(\n    cacheName: string,\n    setName: string,\n    limit: number\n  ): Promise<CacheSetSample.Response>;\n  setPop(\n    cacheName: string,\n    setName: string,\n    count: number\n  ): Promise<CacheSetPop.Response>;\n  setLength(\n    cacheName: string,\n    setName: string\n  ): Promise<CacheSetLength.Response>;\n  listFetch(\n    cacheName: string,\n    listName: string,\n    options?: ListFetchCallOptions\n  ): Promise<CacheListFetch.Response>;\n  listLength(\n    cacheName: string,\n    listName: string\n  ): Promise<CacheListLength.Response>;\n  listPushFront(\n    cacheName: string,\n    listName: string,\n    value: string | Uint8Array,\n    options?: ListPushFrontOptions\n  ): Promise<CacheListPushFront.Response>;\n  listPushBack(\n    cacheName: string,\n    listName: string,\n    value: string | Uint8Array,\n    options?: ListPushBackOptions\n  ): Promise<CacheListPushBack.Response>;\n  listConcatenateBack(\n    cacheName: string,\n    listName: string,\n    values: string[] | Uint8Array[],\n    options?: ListConcatenateBackOptions\n  ): Promise<CacheListConcatenateBack.Response>;\n  listConcatenateFront(\n    cacheName: string,\n    listName: string,\n    values: string[] | Uint8Array[],\n    options?: ListConcatenateFrontOptions\n  ): Promise<CacheListConcatenateFront.Response>;\n  listPopBack(\n    cacheName: string,\n    listName: string\n  ): Promise<CacheListPopBack.Response>;\n  listPopFront(\n    cacheName: string,\n    listName: string\n  ): Promise<CacheListPopFront.Response>;\n  listRemoveValue(\n    cacheName: string,\n    listName: string,\n    value: string | Uint8Array\n  ): Promise<CacheListRemoveValue.Response>;\n  listRetain(\n    cacheName: string,\n    listName: string,\n    options?: ListRetainCallOptions\n  ): Promise<CacheListRetain.Response>;\n  dictionarySetField(\n    cacheName: string,\n    dictionaryName: string,\n    field: string | Uint8Array,\n    value: string | Uint8Array,\n    options?: DictionarySetFieldOptions\n  ): Promise<CacheDictionarySetField.Response>;\n  dictionarySetFields(\n    cacheName: string,\n    dictionaryName: string,\n    elements:\n      | Map<string | Uint8Array, string | Uint8Array>\n      | Record<string, string | Uint8Array>\n      | Array<[string, string | Uint8Array]>,\n    options?: DictionarySetFieldsOptions\n  ): Promise<CacheDictionarySetFields.Response>;\n  dictionaryGetField(\n    cacheName: string,\n    dictionaryName: string,\n    field: string | Uint8Array\n  ): Promise<CacheDictionaryGetField.Response>;\n  dictionaryGetFields(\n    cacheName: string,\n    dictionaryName: string,\n    fields: string[] | Uint8Array[]\n  ): Promise<CacheDictionaryGetFields.Response>;\n  dictionaryFetch(\n    cacheName: string,\n    dictionaryName: string\n  ): Promise<CacheDictionaryFetch.Response>;\n  dictionaryIncrement(\n    cacheName: string,\n    dictionaryName: string,\n    field: string | Uint8Array,\n    amount?: number,\n    options?: DictionaryIncrementOptions\n  ): Promise<CacheDictionaryIncrement.Response>;\n  dictionaryRemoveField(\n    cacheName: string,\n    dictionaryName: string,\n    field: string | Uint8Array\n  ): Promise<CacheDictionaryRemoveField.Response>;\n  dictionaryRemoveFields(\n    cacheName: string,\n    dictionaryName: string,\n    fields: string[] | Uint8Array[]\n  ): Promise<CacheDictionaryRemoveFields.Response>;\n  dictionaryLength(\n    cacheName: string,\n    dictionaryName: string\n  ): Promise<CacheDictionaryLength.Response>;\n  sortedSetFetchByRank(\n    cacheName: string,\n    sortedSetName: string,\n    options?: SortedSetFetchByRankOptions\n  ): Promise<CacheSortedSetFetch.Response>;\n  sortedSetFetchByScore(\n    cacheName: string,\n    sortedSetName: string,\n    options?: SortedSetFetchByScoreOptions\n  ): Promise<CacheSortedSetFetch.Response>;\n  sortedSetPutElement(\n    cacheName: string,\n    sortedSetName: string,\n    value: string | Uint8Array,\n    score: number,\n    options?: SortedSetPutElementOptions\n  ): Promise<CacheSortedSetPutElement.Response>;\n  sortedSetPutElements(\n    cacheName: string,\n    sortedSetName: string,\n    elements:\n      | Map<string | Uint8Array, number>\n      | Record<string, number>\n      | Array<[string, number]>,\n    options?: SortedSetPutElementsOptions\n  ): Promise<CacheSortedSetPutElements.Response>;\n  sortedSetGetRank(\n    cacheName: string,\n    sortedSetName: string,\n    value: string | Uint8Array,\n    options?: SortedSetGetRankOptions\n  ): Promise<CacheSortedSetGetRank.Response>;\n  sortedSetGetScore(\n    cacheName: string,\n    sortedSetName: string,\n    value: string | Uint8Array\n  ): Promise<CacheSortedSetGetScore.Response>;\n  sortedSetGetScores(\n    cacheName: string,\n    sortedSetName: string,\n    values: string[] | Uint8Array[]\n  ): Promise<CacheSortedSetGetScores.Response>;\n  sortedSetIncrementScore(\n    cacheName: string,\n    sortedSetName: string,\n    value: string | Uint8Array,\n    amount?: number,\n    options?: SortedSetIncrementOptions\n  ): Promise<CacheSortedSetIncrementScore.Response>;\n  sortedSetRemoveElement(\n    cacheName: string,\n    sortedSetName: string,\n    value: string | Uint8Array\n  ): Promise<CacheSortedSetRemoveElement.Response>;\n  sortedSetRemoveElements(\n    cacheName: string,\n    sortedSetName: string,\n    values: string[] | Uint8Array[]\n  ): Promise<CacheSortedSetRemoveElements.Response>;\n  sortedSetLength(\n    cacheName: string,\n    sortedSetName: string\n  ): Promise<CacheSortedSetLength.Response>;\n  sortedSetLengthByScore(\n    cacheName: string,\n    sortedSetName: string,\n    options?: SortedSetLengthByScoreOptions\n  ): Promise<CacheSortedSetLengthByScore.Response>;\n  itemGetType(\n    cacheName: string,\n    key: string | Uint8Array\n  ): Promise<CacheItemGetType.Response>;\n  itemGetTtl(\n    cacheName: string,\n    key: string | Uint8Array\n  ): Promise<CacheItemGetTtl.Response>;\n  keyExists(\n    cacheName: string,\n    key: string | Uint8Array\n  ): Promise<CacheKeyExists.Response>;\n  keysExist(\n    cacheName: string,\n    keys: string[] | Uint8Array[]\n  ): Promise<CacheKeysExist.Response>;\n  updateTtl(\n    cacheName: string,\n    key: string | Uint8Array,\n    ttlMilliseconds: number\n  ): Promise<CacheUpdateTtl.Response>;\n  increaseTtl(\n    cacheName: string,\n    key: string | Uint8Array,\n    ttlMilliseconds: number\n  ): Promise<CacheIncreaseTtl.Response>;\n  decreaseTtl(\n    cacheName: string,\n    key: string | Uint8Array,\n    ttlMilliseconds: number\n  ): Promise<CacheDecreaseTtl.Response>;\n  close(): void;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 1782, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1786, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/clients/IAuthClient.ts"],"sourcesContent":["import {\n  DisposableTokenScope,\n  ExpiresIn,\n  GenerateApiKey,\n  GenerateDisposableToken,\n  RefreshApiKey,\n} from '../index';\nimport {PermissionScope} from '../auth/tokens/permission-scope';\nimport {DisposableTokenProps} from '../auth/tokens/disposable-token-scope';\n\nexport interface IAuthClient {\n  generateApiKey(\n    scope: PermissionScope,\n    expiresIn: ExpiresIn\n  ): Promise<GenerateApiKey.Response>;\n\n  /**\n   * @deprecated please use `generateApiKey` instead\n   */\n  generateAuthToken(\n    scope: PermissionScope,\n    expiresIn: ExpiresIn\n  ): Promise<GenerateApiKey.Response>;\n\n  refreshApiKey(refreshToken: string): Promise<RefreshApiKey.Response>;\n\n  /**\n   * @deprecated please use `refreshApiKey` instead\n   */\n  refreshAuthToken(refreshToken: string): Promise<RefreshApiKey.Response>;\n\n  generateDisposableToken(\n    scope: DisposableTokenScope,\n    expiresIn: ExpiresIn,\n    props?: DisposableTokenProps\n  ): Promise<GenerateDisposableToken.Response>;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 1790, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1794, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/clients/ITopicClient.ts"],"sourcesContent":["import {\n  TopicPublish,\n  TopicSubscribe,\n  SubscribeCallOptions,\n  ListWebhooks,\n  PutWebhook,\n  DeleteWebhook,\n  GetWebhookSecret,\n  RotateWebhookSecret,\n} from '../index';\nimport {PutWebhookCallOptions} from '../utils/webhook-call-options';\n\nexport interface ITopicClient {\n  publish(\n    cacheName: string,\n    topicName: string,\n    value: string | Uint8Array\n  ): Promise<TopicPublish.Response>;\n\n  subscribe(\n    cacheName: string,\n    topicName: string,\n    options: SubscribeCallOptions\n  ): Promise<TopicSubscribe.Response>;\n\n  listWebhooks(cache: string): Promise<ListWebhooks.Response>;\n  putWebhook(\n    cacheName: string,\n    webhookName: string,\n    options: PutWebhookCallOptions\n  ): Promise<PutWebhook.Response>;\n  deleteWebhook(\n    cacheName: string,\n    webhookName: string\n  ): Promise<DeleteWebhook.Response>;\n  getWebhookSecret(\n    cacheName: string,\n    webhookName: string\n  ): Promise<GetWebhookSecret.Response>;\n  rotateWebhookSecret(\n    cacheName: string,\n    webhookName: string\n  ): Promise<RotateWebhookSecret.Response>;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 1798, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1802, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/clients/ILeaderboard.ts"],"sourcesContent":["import {\n  LeaderboardDelete,\n  LeaderboardFetch,\n  LeaderboardLength,\n  LeaderboardRemoveElements,\n  LeaderboardUpsert,\n} from '../messages/responses/leaderboard';\nimport {\n  LeaderboardFetchByRankCallOptions,\n  LeaderboardFetchByScoreCallOptions,\n  LeaderboardGetRankCallOptions,\n  LeaderboardOrder,\n} from '../utils/cache-call-options';\n\nexport interface ILeaderboard {\n  upsert(\n    elements: Record<number, number> | Map<number, number>\n  ): Promise<LeaderboardUpsert.Response>;\n  fetchByScore(\n    options?: LeaderboardFetchByScoreCallOptions\n  ): Promise<LeaderboardFetch.Response>;\n  fetchByRank(\n    startRank: number,\n    endRank: number,\n    options?: LeaderboardFetchByRankCallOptions\n  ): Promise<LeaderboardFetch.Response>;\n  getRank(\n    ids: Array<number>,\n    options?: LeaderboardGetRankCallOptions\n  ): Promise<LeaderboardFetch.Response>;\n  length(): Promise<LeaderboardLength.Response>;\n  removeElements(\n    ids: Array<number>\n  ): Promise<LeaderboardRemoveElements.Response>;\n  delete(): Promise<LeaderboardDelete.Response>;\n}\nexport {\n  LeaderboardFetchByRankCallOptions,\n  LeaderboardFetchByScoreCallOptions,\n  LeaderboardGetRankCallOptions,\n  LeaderboardOrder,\n};\n"],"names":[],"mappings":";;;;;AAOA,MAAA;AAiCE,OAAA,cAAA,CAAA,SAAA,oBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OA7BA,qBAAA,gBAAgB;IAAA;AAAA"}},
    {"offset": {"line": 1814, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1818, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/clients/ILeaderboardClient.ts"],"sourcesContent":["import {ILeaderboard} from './ILeaderboard';\n\nexport interface ILeaderboardClient {\n  leaderboard(cacheName: string, leaderboardName: string): ILeaderboard;\n  close(): void;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 1822, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1826, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@gomomento/sdk-core/src/clients/IStorageClient.ts"],"sourcesContent":["import {\n  CreateStore,\n  ListStores,\n  DeleteStore,\n  StoragePut,\n  StorageGet,\n  StorageDelete,\n} from '../index';\n\nexport interface IStorageClient {\n  createStore(storeName: string): Promise<CreateStore.Response>;\n  listStores(): Promise<ListStores.Response>;\n  deleteStore(cache: string): Promise<DeleteStore.Response>;\n  get(storeName: string, key: string): Promise<StorageGet.Response>;\n  putInt(\n    storeName: string,\n    key: string,\n    value: number\n  ): Promise<StoragePut.Response>;\n  putDouble(\n    storeName: string,\n    key: string,\n    value: number\n  ): Promise<StoragePut.Response>;\n  putString(\n    storeName: string,\n    key: string,\n    value: string\n  ): Promise<StoragePut.Response>;\n  putBytes(\n    storeName: string,\n    key: string,\n    value: Uint8Array\n  ): Promise<StoragePut.Response>;\n  delete(storeName: string, key: string): Promise<StorageDelete.Response>;\n\n  close(): void;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 1830, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}